#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Calliope

#include "Basic.hpp"

#include "Calliope_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "MovieScene_structs.hpp"
#include "LevelSequence_structs.hpp"


namespace SDK::Params
{

// Function Calliope.CalliopeAsset.CreateInstance
// 0x0028 (0x0028 - 0x0000)
struct CalliopeAsset_CreateInstance final
{
public:
	class UObject*                                Owner;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCalliopeAsset*                         CalliopeAsset;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InstancePrefixName;                                // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCalliopeAsset*                         ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_CreateInstance) == 0x000008, "Wrong alignment on CalliopeAsset_CreateInstance");
//static_assert(sizeof(CalliopeAsset_CreateInstance) == 0x000028, "Wrong size on CalliopeAsset_CreateInstance");
//static_assert(offsetof(CalliopeAsset_CreateInstance, Owner) == 0x000000, "Member 'CalliopeAsset_CreateInstance::Owner' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_CreateInstance, CalliopeAsset) == 0x000008, "Member 'CalliopeAsset_CreateInstance::CalliopeAsset' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_CreateInstance, InstancePrefixName) == 0x000010, "Member 'CalliopeAsset_CreateInstance::InstancePrefixName' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_CreateInstance, ReturnValue) == 0x000020, "Member 'CalliopeAsset_CreateInstance::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeAsset.AddBranchGraph
// 0x0008 (0x0008 - 0x0000)
struct CalliopeAsset_AddBranchGraph final
{
public:
	class FName                                   GraphName;                                         // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_AddBranchGraph) == 0x000004, "Wrong alignment on CalliopeAsset_AddBranchGraph");
//static_assert(sizeof(CalliopeAsset_AddBranchGraph) == 0x000008, "Wrong size on CalliopeAsset_AddBranchGraph");
//static_assert(offsetof(CalliopeAsset_AddBranchGraph, GraphName) == 0x000000, "Member 'CalliopeAsset_AddBranchGraph::GraphName' has a wrong offset!");

// Function Calliope.CalliopeAsset.AddParameter
// 0x0048 (0x0048 - 0x0000)
struct CalliopeAsset_AddParameter final
{
public:
	EGsManagedParamType                           ParamType;                                         // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ObjectPath;                                        // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ActorGuid;                                         // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AliasName;                                         // 0x0028(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         State;                                             // 0x0030(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCalliopeGuid                          OutConfigGuid;                                     // 0x0034(0x0010)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0044(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeAsset_AddParameter) == 0x000008, "Wrong alignment on CalliopeAsset_AddParameter");
//static_assert(sizeof(CalliopeAsset_AddParameter) == 0x000048, "Wrong size on CalliopeAsset_AddParameter");
//static_assert(offsetof(CalliopeAsset_AddParameter, ParamType) == 0x000000, "Member 'CalliopeAsset_AddParameter::ParamType' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_AddParameter, ObjectPath) == 0x000008, "Member 'CalliopeAsset_AddParameter::ObjectPath' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_AddParameter, ActorGuid) == 0x000018, "Member 'CalliopeAsset_AddParameter::ActorGuid' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_AddParameter, AliasName) == 0x000028, "Member 'CalliopeAsset_AddParameter::AliasName' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_AddParameter, State) == 0x000030, "Member 'CalliopeAsset_AddParameter::State' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_AddParameter, OutConfigGuid) == 0x000034, "Member 'CalliopeAsset_AddParameter::OutConfigGuid' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_AddParameter, ReturnValue) == 0x000044, "Member 'CalliopeAsset_AddParameter::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeAsset.AssignParameterUnitTamerReference
// 0x0020 (0x0020 - 0x0000)
struct CalliopeAsset_AssignParameterUnitTamerReference final
{
public:
	struct FCalliopeGuid                          InConfigGuid;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ObjectPath;                                        // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_AssignParameterUnitTamerReference) == 0x000008, "Wrong alignment on CalliopeAsset_AssignParameterUnitTamerReference");
//static_assert(sizeof(CalliopeAsset_AssignParameterUnitTamerReference) == 0x000020, "Wrong size on CalliopeAsset_AssignParameterUnitTamerReference");
//static_assert(offsetof(CalliopeAsset_AssignParameterUnitTamerReference, InConfigGuid) == 0x000000, "Member 'CalliopeAsset_AssignParameterUnitTamerReference::InConfigGuid' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_AssignParameterUnitTamerReference, ObjectPath) == 0x000010, "Member 'CalliopeAsset_AssignParameterUnitTamerReference::ObjectPath' has a wrong offset!");

// Function Calliope.CalliopeAsset.DeactivateNode
// 0x0010 (0x0010 - 0x0000)
struct CalliopeAsset_DeactivateNode final
{
public:
	struct FCalliopeGuid                          InGuid;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_DeactivateNode) == 0x000004, "Wrong alignment on CalliopeAsset_DeactivateNode");
//static_assert(sizeof(CalliopeAsset_DeactivateNode) == 0x000010, "Wrong size on CalliopeAsset_DeactivateNode");
//static_assert(offsetof(CalliopeAsset_DeactivateNode, InGuid) == 0x000000, "Member 'CalliopeAsset_DeactivateNode::InGuid' has a wrong offset!");

// Function Calliope.CalliopeAsset.ExportToData
// 0x0001 (0x0001 - 0x0000)
struct CalliopeAsset_ExportToData final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_ExportToData) == 0x000001, "Wrong alignment on CalliopeAsset_ExportToData");
//static_assert(sizeof(CalliopeAsset_ExportToData) == 0x000001, "Wrong size on CalliopeAsset_ExportToData");
//static_assert(offsetof(CalliopeAsset_ExportToData, ReturnValue) == 0x000000, "Member 'CalliopeAsset_ExportToData::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeAsset.GetParameterActorGuidByConfigGuid
// 0x0028 (0x0028 - 0x0000)
struct CalliopeAsset_GetParameterActorGuidByConfigGuid final
{
public:
	struct FCalliopeGuid                          InConfigGuid;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutActorGuid;                                      // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeAsset_GetParameterActorGuidByConfigGuid) == 0x000008, "Wrong alignment on CalliopeAsset_GetParameterActorGuidByConfigGuid");
//static_assert(sizeof(CalliopeAsset_GetParameterActorGuidByConfigGuid) == 0x000028, "Wrong size on CalliopeAsset_GetParameterActorGuidByConfigGuid");
//static_assert(offsetof(CalliopeAsset_GetParameterActorGuidByConfigGuid, InConfigGuid) == 0x000000, "Member 'CalliopeAsset_GetParameterActorGuidByConfigGuid::InConfigGuid' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_GetParameterActorGuidByConfigGuid, OutActorGuid) == 0x000010, "Member 'CalliopeAsset_GetParameterActorGuidByConfigGuid::OutActorGuid' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_GetParameterActorGuidByConfigGuid, ReturnValue) == 0x000020, "Member 'CalliopeAsset_GetParameterActorGuidByConfigGuid::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeAsset.GetParameterBuffIDByConfigGuid
// 0x0018 (0x0018 - 0x0000)
struct CalliopeAsset_GetParameterBuffIDByConfigGuid final
{
public:
	struct FCalliopeGuid                          InConfigGuid;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutBuffID;                                         // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeAsset_GetParameterBuffIDByConfigGuid) == 0x000004, "Wrong alignment on CalliopeAsset_GetParameterBuffIDByConfigGuid");
//static_assert(sizeof(CalliopeAsset_GetParameterBuffIDByConfigGuid) == 0x000018, "Wrong size on CalliopeAsset_GetParameterBuffIDByConfigGuid");
//static_assert(offsetof(CalliopeAsset_GetParameterBuffIDByConfigGuid, InConfigGuid) == 0x000000, "Member 'CalliopeAsset_GetParameterBuffIDByConfigGuid::InConfigGuid' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_GetParameterBuffIDByConfigGuid, OutBuffID) == 0x000010, "Member 'CalliopeAsset_GetParameterBuffIDByConfigGuid::OutBuffID' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_GetParameterBuffIDByConfigGuid, ReturnValue) == 0x000014, "Member 'CalliopeAsset_GetParameterBuffIDByConfigGuid::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeAsset.GetParameterConfigGuidByActorGuid
// 0x0038 (0x0038 - 0x0000)
struct CalliopeAsset_GetParameterConfigGuidByActorGuid final
{
public:
	EGsManagedParamType                           ParamType;                                         // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ParamValueString;                                  // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ParamValueInt;                                     // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParamValueName;                                    // 0x001C(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCalliopeGuid                          OutGuid;                                           // 0x0024(0x0010)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0034(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeAsset_GetParameterConfigGuidByActorGuid) == 0x000008, "Wrong alignment on CalliopeAsset_GetParameterConfigGuidByActorGuid");
//static_assert(sizeof(CalliopeAsset_GetParameterConfigGuidByActorGuid) == 0x000038, "Wrong size on CalliopeAsset_GetParameterConfigGuidByActorGuid");
//static_assert(offsetof(CalliopeAsset_GetParameterConfigGuidByActorGuid, ParamType) == 0x000000, "Member 'CalliopeAsset_GetParameterConfigGuidByActorGuid::ParamType' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_GetParameterConfigGuidByActorGuid, ParamValueString) == 0x000008, "Member 'CalliopeAsset_GetParameterConfigGuidByActorGuid::ParamValueString' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_GetParameterConfigGuidByActorGuid, ParamValueInt) == 0x000018, "Member 'CalliopeAsset_GetParameterConfigGuidByActorGuid::ParamValueInt' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_GetParameterConfigGuidByActorGuid, ParamValueName) == 0x00001C, "Member 'CalliopeAsset_GetParameterConfigGuidByActorGuid::ParamValueName' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_GetParameterConfigGuidByActorGuid, OutGuid) == 0x000024, "Member 'CalliopeAsset_GetParameterConfigGuidByActorGuid::OutGuid' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_GetParameterConfigGuidByActorGuid, ReturnValue) == 0x000034, "Member 'CalliopeAsset_GetParameterConfigGuidByActorGuid::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeAsset.GetParameterDisplayNameByConfigGuid
// 0x0038 (0x0038 - 0x0000)
struct CalliopeAsset_GetParameterDisplayNameByConfigGuid final
{
public:
	struct FCalliopeGuid                          InConfigGuid;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InPropertyName;                                    // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutDisplayName;                                    // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeAsset_GetParameterDisplayNameByConfigGuid) == 0x000008, "Wrong alignment on CalliopeAsset_GetParameterDisplayNameByConfigGuid");
//static_assert(sizeof(CalliopeAsset_GetParameterDisplayNameByConfigGuid) == 0x000038, "Wrong size on CalliopeAsset_GetParameterDisplayNameByConfigGuid");
//static_assert(offsetof(CalliopeAsset_GetParameterDisplayNameByConfigGuid, InConfigGuid) == 0x000000, "Member 'CalliopeAsset_GetParameterDisplayNameByConfigGuid::InConfigGuid' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_GetParameterDisplayNameByConfigGuid, InPropertyName) == 0x000010, "Member 'CalliopeAsset_GetParameterDisplayNameByConfigGuid::InPropertyName' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_GetParameterDisplayNameByConfigGuid, OutDisplayName) == 0x000020, "Member 'CalliopeAsset_GetParameterDisplayNameByConfigGuid::OutDisplayName' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_GetParameterDisplayNameByConfigGuid, ReturnValue) == 0x000030, "Member 'CalliopeAsset_GetParameterDisplayNameByConfigGuid::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeAsset.GetParameterSequenceIDByConfigGuid
// 0x0018 (0x0018 - 0x0000)
struct CalliopeAsset_GetParameterSequenceIDByConfigGuid final
{
public:
	struct FCalliopeGuid                          InConfigGuid;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutSequenceID;                                     // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeAsset_GetParameterSequenceIDByConfigGuid) == 0x000004, "Wrong alignment on CalliopeAsset_GetParameterSequenceIDByConfigGuid");
//static_assert(sizeof(CalliopeAsset_GetParameterSequenceIDByConfigGuid) == 0x000018, "Wrong size on CalliopeAsset_GetParameterSequenceIDByConfigGuid");
//static_assert(offsetof(CalliopeAsset_GetParameterSequenceIDByConfigGuid, InConfigGuid) == 0x000000, "Member 'CalliopeAsset_GetParameterSequenceIDByConfigGuid::InConfigGuid' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_GetParameterSequenceIDByConfigGuid, OutSequenceID) == 0x000010, "Member 'CalliopeAsset_GetParameterSequenceIDByConfigGuid::OutSequenceID' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_GetParameterSequenceIDByConfigGuid, ReturnValue) == 0x000014, "Member 'CalliopeAsset_GetParameterSequenceIDByConfigGuid::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeAsset.GetParameterTaskStateIDByConfigGuid
// 0x0018 (0x0018 - 0x0000)
struct CalliopeAsset_GetParameterTaskStateIDByConfigGuid final
{
public:
	struct FCalliopeGuid                          InConfigGuid;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutTaskStageID;                                    // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeAsset_GetParameterTaskStateIDByConfigGuid) == 0x000004, "Wrong alignment on CalliopeAsset_GetParameterTaskStateIDByConfigGuid");
//static_assert(sizeof(CalliopeAsset_GetParameterTaskStateIDByConfigGuid) == 0x000018, "Wrong size on CalliopeAsset_GetParameterTaskStateIDByConfigGuid");
//static_assert(offsetof(CalliopeAsset_GetParameterTaskStateIDByConfigGuid, InConfigGuid) == 0x000000, "Member 'CalliopeAsset_GetParameterTaskStateIDByConfigGuid::InConfigGuid' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_GetParameterTaskStateIDByConfigGuid, OutTaskStageID) == 0x000010, "Member 'CalliopeAsset_GetParameterTaskStateIDByConfigGuid::OutTaskStageID' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_GetParameterTaskStateIDByConfigGuid, ReturnValue) == 0x000014, "Member 'CalliopeAsset_GetParameterTaskStateIDByConfigGuid::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeAsset.OnNodeActivate
// 0x0008 (0x0008 - 0x0000)
struct CalliopeAsset_OnNodeActivate final
{
public:
	const class UCalliopeNode*                    Node;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_OnNodeActivate) == 0x000008, "Wrong alignment on CalliopeAsset_OnNodeActivate");
//static_assert(sizeof(CalliopeAsset_OnNodeActivate) == 0x000008, "Wrong size on CalliopeAsset_OnNodeActivate");
//static_assert(offsetof(CalliopeAsset_OnNodeActivate, Node) == 0x000000, "Member 'CalliopeAsset_OnNodeActivate::Node' has a wrong offset!");

// Function Calliope.CalliopeAsset.OnNodeDeactivate
// 0x0008 (0x0008 - 0x0000)
struct CalliopeAsset_OnNodeDeactivate final
{
public:
	const class UCalliopeNode*                    Node;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_OnNodeDeactivate) == 0x000008, "Wrong alignment on CalliopeAsset_OnNodeDeactivate");
//static_assert(sizeof(CalliopeAsset_OnNodeDeactivate) == 0x000008, "Wrong size on CalliopeAsset_OnNodeDeactivate");
//static_assert(offsetof(CalliopeAsset_OnNodeDeactivate, Node) == 0x000000, "Member 'CalliopeAsset_OnNodeDeactivate::Node' has a wrong offset!");

// Function Calliope.CalliopeAsset.OnPropertyChanged
// 0x0020 (0x0020 - 0x0000)
struct CalliopeAsset_OnPropertyChanged final
{
public:
	class FString                                 MemberName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PropertyName;                                      // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_OnPropertyChanged) == 0x000008, "Wrong alignment on CalliopeAsset_OnPropertyChanged");
//static_assert(sizeof(CalliopeAsset_OnPropertyChanged) == 0x000020, "Wrong size on CalliopeAsset_OnPropertyChanged");
//static_assert(offsetof(CalliopeAsset_OnPropertyChanged, MemberName) == 0x000000, "Member 'CalliopeAsset_OnPropertyChanged::MemberName' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_OnPropertyChanged, PropertyName) == 0x000010, "Member 'CalliopeAsset_OnPropertyChanged::PropertyName' has a wrong offset!");

// Function Calliope.CalliopeAsset.PostDuplicateInCS
// 0x0001 (0x0001 - 0x0000)
struct CalliopeAsset_PostDuplicateInCS final
{
public:
	bool                                          bDuplicateForPIE;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_PostDuplicateInCS) == 0x000001, "Wrong alignment on CalliopeAsset_PostDuplicateInCS");
//static_assert(sizeof(CalliopeAsset_PostDuplicateInCS) == 0x000001, "Wrong size on CalliopeAsset_PostDuplicateInCS");
//static_assert(offsetof(CalliopeAsset_PostDuplicateInCS, bDuplicateForPIE) == 0x000000, "Member 'CalliopeAsset_PostDuplicateInCS::bDuplicateForPIE' has a wrong offset!");

// Function Calliope.CalliopeAsset.RecordInput
// 0x0018 (0x0018 - 0x0000)
struct CalliopeAsset_RecordInput final
{
public:
	struct FCalliopeGuid                          InGuid;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InPinName;                                         // 0x0010(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_RecordInput) == 0x000004, "Wrong alignment on CalliopeAsset_RecordInput");
//static_assert(sizeof(CalliopeAsset_RecordInput) == 0x000018, "Wrong size on CalliopeAsset_RecordInput");
//static_assert(offsetof(CalliopeAsset_RecordInput, InGuid) == 0x000000, "Member 'CalliopeAsset_RecordInput::InGuid' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_RecordInput, InPinName) == 0x000010, "Member 'CalliopeAsset_RecordInput::InPinName' has a wrong offset!");

// Function Calliope.CalliopeAsset.RecordOnlyNode
// 0x0010 (0x0010 - 0x0000)
struct CalliopeAsset_RecordOnlyNode final
{
public:
	struct FCalliopeGuid                          InGuid;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_RecordOnlyNode) == 0x000004, "Wrong alignment on CalliopeAsset_RecordOnlyNode");
//static_assert(sizeof(CalliopeAsset_RecordOnlyNode) == 0x000010, "Wrong size on CalliopeAsset_RecordOnlyNode");
//static_assert(offsetof(CalliopeAsset_RecordOnlyNode, InGuid) == 0x000000, "Member 'CalliopeAsset_RecordOnlyNode::InGuid' has a wrong offset!");

// Function Calliope.CalliopeAsset.RecordOutput
// 0x0018 (0x0018 - 0x0000)
struct CalliopeAsset_RecordOutput final
{
public:
	struct FCalliopeGuid                          InGuid;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InPinName;                                         // 0x0010(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_RecordOutput) == 0x000004, "Wrong alignment on CalliopeAsset_RecordOutput");
//static_assert(sizeof(CalliopeAsset_RecordOutput) == 0x000018, "Wrong size on CalliopeAsset_RecordOutput");
//static_assert(offsetof(CalliopeAsset_RecordOutput, InGuid) == 0x000000, "Member 'CalliopeAsset_RecordOutput::InGuid' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_RecordOutput, InPinName) == 0x000010, "Member 'CalliopeAsset_RecordOutput::InPinName' has a wrong offset!");

// Function Calliope.CalliopeAsset.RegisterNode
// 0x0018 (0x0018 - 0x0000)
struct CalliopeAsset_RegisterNode final
{
public:
	struct FCalliopeGuid                          NewGuid;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCalliopeNode*                          NewNode;                                           // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_RegisterNode) == 0x000008, "Wrong alignment on CalliopeAsset_RegisterNode");
//static_assert(sizeof(CalliopeAsset_RegisterNode) == 0x000018, "Wrong size on CalliopeAsset_RegisterNode");
//static_assert(offsetof(CalliopeAsset_RegisterNode, NewGuid) == 0x000000, "Member 'CalliopeAsset_RegisterNode::NewGuid' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_RegisterNode, NewNode) == 0x000010, "Member 'CalliopeAsset_RegisterNode::NewNode' has a wrong offset!");

// Function Calliope.CalliopeAsset.RemoveBranchGraph
// 0x0008 (0x0008 - 0x0000)
struct CalliopeAsset_RemoveBranchGraph final
{
public:
	class FName                                   GraphName;                                         // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_RemoveBranchGraph) == 0x000004, "Wrong alignment on CalliopeAsset_RemoveBranchGraph");
//static_assert(sizeof(CalliopeAsset_RemoveBranchGraph) == 0x000008, "Wrong size on CalliopeAsset_RemoveBranchGraph");
//static_assert(offsetof(CalliopeAsset_RemoveBranchGraph, GraphName) == 0x000000, "Member 'CalliopeAsset_RemoveBranchGraph::GraphName' has a wrong offset!");

// Function Calliope.CalliopeAsset.SetSubGraphAssetInPIE
// 0x0018 (0x0018 - 0x0000)
struct CalliopeAsset_SetSubGraphAssetInPIE final
{
public:
	struct FCalliopeGuid                          InGuid;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCalliopeAsset*                         CalliopeAsset;                                     // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_SetSubGraphAssetInPIE) == 0x000008, "Wrong alignment on CalliopeAsset_SetSubGraphAssetInPIE");
//static_assert(sizeof(CalliopeAsset_SetSubGraphAssetInPIE) == 0x000018, "Wrong size on CalliopeAsset_SetSubGraphAssetInPIE");
//static_assert(offsetof(CalliopeAsset_SetSubGraphAssetInPIE, InGuid) == 0x000000, "Member 'CalliopeAsset_SetSubGraphAssetInPIE::InGuid' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_SetSubGraphAssetInPIE, CalliopeAsset) == 0x000010, "Member 'CalliopeAsset_SetSubGraphAssetInPIE::CalliopeAsset' has a wrong offset!");

// Function Calliope.CalliopeAsset.StartAsSubInstance
// 0x0018 (0x0018 - 0x0000)
struct CalliopeAsset_StartAsSubInstance final
{
public:
	class UCalliopeAsset*                         ParentInstance;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCalliopeGuid                          InSubNodeGuid;                                     // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_StartAsSubInstance) == 0x000008, "Wrong alignment on CalliopeAsset_StartAsSubInstance");
//static_assert(sizeof(CalliopeAsset_StartAsSubInstance) == 0x000018, "Wrong size on CalliopeAsset_StartAsSubInstance");
//static_assert(offsetof(CalliopeAsset_StartAsSubInstance, ParentInstance) == 0x000000, "Member 'CalliopeAsset_StartAsSubInstance::ParentInstance' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_StartAsSubInstance, InSubNodeGuid) == 0x000008, "Member 'CalliopeAsset_StartAsSubInstance::InSubNodeGuid' has a wrong offset!");

// Function Calliope.CalliopeAsset.UnregisterNode
// 0x0010 (0x0010 - 0x0000)
struct CalliopeAsset_UnregisterNode final
{
public:
	struct FCalliopeGuid                          NodeGuid;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_UnregisterNode) == 0x000004, "Wrong alignment on CalliopeAsset_UnregisterNode");
//static_assert(sizeof(CalliopeAsset_UnregisterNode) == 0x000010, "Wrong size on CalliopeAsset_UnregisterNode");
//static_assert(offsetof(CalliopeAsset_UnregisterNode, NodeGuid) == 0x000000, "Member 'CalliopeAsset_UnregisterNode::NodeGuid' has a wrong offset!");

// Function Calliope.CalliopeAsset.UpdateParameterActorReferenceAndAliasName
// 0x0028 (0x0028 - 0x0000)
struct CalliopeAsset_UpdateParameterActorReferenceAndAliasName final
{
public:
	class FString                                 ObjectPath;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ActorGuid;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AliasName;                                         // 0x0020(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_UpdateParameterActorReferenceAndAliasName) == 0x000008, "Wrong alignment on CalliopeAsset_UpdateParameterActorReferenceAndAliasName");
//static_assert(sizeof(CalliopeAsset_UpdateParameterActorReferenceAndAliasName) == 0x000028, "Wrong size on CalliopeAsset_UpdateParameterActorReferenceAndAliasName");
//static_assert(offsetof(CalliopeAsset_UpdateParameterActorReferenceAndAliasName, ObjectPath) == 0x000000, "Member 'CalliopeAsset_UpdateParameterActorReferenceAndAliasName::ObjectPath' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_UpdateParameterActorReferenceAndAliasName, ActorGuid) == 0x000010, "Member 'CalliopeAsset_UpdateParameterActorReferenceAndAliasName::ActorGuid' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_UpdateParameterActorReferenceAndAliasName, AliasName) == 0x000020, "Member 'CalliopeAsset_UpdateParameterActorReferenceAndAliasName::AliasName' has a wrong offset!");

// Function Calliope.CalliopeAsset.GetCustomInputs
// 0x0010 (0x0010 - 0x0000)
struct CalliopeAsset_GetCustomInputs final
{
public:
	TArray<class FName>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_GetCustomInputs) == 0x000008, "Wrong alignment on CalliopeAsset_GetCustomInputs");
//static_assert(sizeof(CalliopeAsset_GetCustomInputs) == 0x000010, "Wrong size on CalliopeAsset_GetCustomInputs");
//static_assert(offsetof(CalliopeAsset_GetCustomInputs, ReturnValue) == 0x000000, "Member 'CalliopeAsset_GetCustomInputs::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeAsset.GetCustomOutputs
// 0x0010 (0x0010 - 0x0000)
struct CalliopeAsset_GetCustomOutputs final
{
public:
	TArray<class FName>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_GetCustomOutputs) == 0x000008, "Wrong alignment on CalliopeAsset_GetCustomOutputs");
//static_assert(sizeof(CalliopeAsset_GetCustomOutputs) == 0x000010, "Wrong size on CalliopeAsset_GetCustomOutputs");
//static_assert(offsetof(CalliopeAsset_GetCustomOutputs, ReturnValue) == 0x000000, "Member 'CalliopeAsset_GetCustomOutputs::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeAsset.GetExtraDefaultInputNodes
// 0x0018 (0x0018 - 0x0000)
struct CalliopeAsset_GetExtraDefaultInputNodes final
{
public:
	TArray<class UClass*>                         OutClasses;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeAsset_GetExtraDefaultInputNodes) == 0x000008, "Wrong alignment on CalliopeAsset_GetExtraDefaultInputNodes");
//static_assert(sizeof(CalliopeAsset_GetExtraDefaultInputNodes) == 0x000018, "Wrong size on CalliopeAsset_GetExtraDefaultInputNodes");
//static_assert(offsetof(CalliopeAsset_GetExtraDefaultInputNodes, OutClasses) == 0x000000, "Member 'CalliopeAsset_GetExtraDefaultInputNodes::OutClasses' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_GetExtraDefaultInputNodes, ReturnValue) == 0x000010, "Member 'CalliopeAsset_GetExtraDefaultInputNodes::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeAsset.GetExtraDefaultInputNodesInBranchGraph
// 0x0018 (0x0018 - 0x0000)
struct CalliopeAsset_GetExtraDefaultInputNodesInBranchGraph final
{
public:
	TArray<class UClass*>                         OutClasses;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeAsset_GetExtraDefaultInputNodesInBranchGraph) == 0x000008, "Wrong alignment on CalliopeAsset_GetExtraDefaultInputNodesInBranchGraph");
//static_assert(sizeof(CalliopeAsset_GetExtraDefaultInputNodesInBranchGraph) == 0x000018, "Wrong size on CalliopeAsset_GetExtraDefaultInputNodesInBranchGraph");
//static_assert(offsetof(CalliopeAsset_GetExtraDefaultInputNodesInBranchGraph, OutClasses) == 0x000000, "Member 'CalliopeAsset_GetExtraDefaultInputNodesInBranchGraph::OutClasses' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_GetExtraDefaultInputNodesInBranchGraph, ReturnValue) == 0x000010, "Member 'CalliopeAsset_GetExtraDefaultInputNodesInBranchGraph::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeAsset.GetExtraDefaultOutputNodes
// 0x0018 (0x0018 - 0x0000)
struct CalliopeAsset_GetExtraDefaultOutputNodes final
{
public:
	TArray<class UClass*>                         OutClasses;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeAsset_GetExtraDefaultOutputNodes) == 0x000008, "Wrong alignment on CalliopeAsset_GetExtraDefaultOutputNodes");
//static_assert(sizeof(CalliopeAsset_GetExtraDefaultOutputNodes) == 0x000018, "Wrong size on CalliopeAsset_GetExtraDefaultOutputNodes");
//static_assert(offsetof(CalliopeAsset_GetExtraDefaultOutputNodes, OutClasses) == 0x000000, "Member 'CalliopeAsset_GetExtraDefaultOutputNodes::OutClasses' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_GetExtraDefaultOutputNodes, ReturnValue) == 0x000010, "Member 'CalliopeAsset_GetExtraDefaultOutputNodes::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeAsset.GetExtraDefaultOutputNodesInBranchGraph
// 0x0018 (0x0018 - 0x0000)
struct CalliopeAsset_GetExtraDefaultOutputNodesInBranchGraph final
{
public:
	TArray<class UClass*>                         OutClasses;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeAsset_GetExtraDefaultOutputNodesInBranchGraph) == 0x000008, "Wrong alignment on CalliopeAsset_GetExtraDefaultOutputNodesInBranchGraph");
//static_assert(sizeof(CalliopeAsset_GetExtraDefaultOutputNodesInBranchGraph) == 0x000018, "Wrong size on CalliopeAsset_GetExtraDefaultOutputNodesInBranchGraph");
//static_assert(offsetof(CalliopeAsset_GetExtraDefaultOutputNodesInBranchGraph, OutClasses) == 0x000000, "Member 'CalliopeAsset_GetExtraDefaultOutputNodesInBranchGraph::OutClasses' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_GetExtraDefaultOutputNodesInBranchGraph, ReturnValue) == 0x000010, "Member 'CalliopeAsset_GetExtraDefaultOutputNodesInBranchGraph::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeAsset.GetNode
// 0x0018 (0x0018 - 0x0000)
struct CalliopeAsset_GetNode final
{
public:
	struct FCalliopeGuid                          InGuid;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCalliopeNode*                          ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_GetNode) == 0x000008, "Wrong alignment on CalliopeAsset_GetNode");
//static_assert(sizeof(CalliopeAsset_GetNode) == 0x000018, "Wrong size on CalliopeAsset_GetNode");
//static_assert(offsetof(CalliopeAsset_GetNode, InGuid) == 0x000000, "Member 'CalliopeAsset_GetNode::InGuid' has a wrong offset!");
//static_assert(offsetof(CalliopeAsset_GetNode, ReturnValue) == 0x000010, "Member 'CalliopeAsset_GetNode::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeAsset.GetNodes
// 0x0050 (0x0050 - 0x0000)
struct CalliopeAsset_GetNodes final
{
public:
	TMap<struct FCalliopeGuid, class UCalliopeNode*> ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_GetNodes) == 0x000008, "Wrong alignment on CalliopeAsset_GetNodes");
//static_assert(sizeof(CalliopeAsset_GetNodes) == 0x000050, "Wrong size on CalliopeAsset_GetNodes");
//static_assert(offsetof(CalliopeAsset_GetNodes, ReturnValue) == 0x000000, "Member 'CalliopeAsset_GetNodes::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeAsset.GetRerouteNodeClass
// 0x0008 (0x0008 - 0x0000)
struct CalliopeAsset_GetRerouteNodeClass final
{
public:
	class UClass*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_GetRerouteNodeClass) == 0x000008, "Wrong alignment on CalliopeAsset_GetRerouteNodeClass");
//static_assert(sizeof(CalliopeAsset_GetRerouteNodeClass) == 0x000008, "Wrong size on CalliopeAsset_GetRerouteNodeClass");
//static_assert(offsetof(CalliopeAsset_GetRerouteNodeClass, ReturnValue) == 0x000000, "Member 'CalliopeAsset_GetRerouteNodeClass::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeAsset.GetRerouteNodeClassInBranchGraph
// 0x0008 (0x0008 - 0x0000)
struct CalliopeAsset_GetRerouteNodeClassInBranchGraph final
{
public:
	class UClass*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_GetRerouteNodeClassInBranchGraph) == 0x000008, "Wrong alignment on CalliopeAsset_GetRerouteNodeClassInBranchGraph");
//static_assert(sizeof(CalliopeAsset_GetRerouteNodeClassInBranchGraph) == 0x000008, "Wrong size on CalliopeAsset_GetRerouteNodeClassInBranchGraph");
//static_assert(offsetof(CalliopeAsset_GetRerouteNodeClassInBranchGraph, ReturnValue) == 0x000000, "Member 'CalliopeAsset_GetRerouteNodeClassInBranchGraph::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeAsset.GetStartNodeClass
// 0x0008 (0x0008 - 0x0000)
struct CalliopeAsset_GetStartNodeClass final
{
public:
	class UClass*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_GetStartNodeClass) == 0x000008, "Wrong alignment on CalliopeAsset_GetStartNodeClass");
//static_assert(sizeof(CalliopeAsset_GetStartNodeClass) == 0x000008, "Wrong size on CalliopeAsset_GetStartNodeClass");
//static_assert(offsetof(CalliopeAsset_GetStartNodeClass, ReturnValue) == 0x000000, "Member 'CalliopeAsset_GetStartNodeClass::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeAsset.GetStartNodeClassInBranchGraph
// 0x0008 (0x0008 - 0x0000)
struct CalliopeAsset_GetStartNodeClassInBranchGraph final
{
public:
	class UClass*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_GetStartNodeClassInBranchGraph) == 0x000008, "Wrong alignment on CalliopeAsset_GetStartNodeClassInBranchGraph");
//static_assert(sizeof(CalliopeAsset_GetStartNodeClassInBranchGraph) == 0x000008, "Wrong size on CalliopeAsset_GetStartNodeClassInBranchGraph");
//static_assert(offsetof(CalliopeAsset_GetStartNodeClassInBranchGraph, ReturnValue) == 0x000000, "Member 'CalliopeAsset_GetStartNodeClassInBranchGraph::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeAsset.GetViewType
// 0x0001 (0x0001 - 0x0000)
struct CalliopeAsset_GetViewType final
{
public:
	ECalliopeViewType                             ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_GetViewType) == 0x000001, "Wrong alignment on CalliopeAsset_GetViewType");
//static_assert(sizeof(CalliopeAsset_GetViewType) == 0x000001, "Wrong size on CalliopeAsset_GetViewType");
//static_assert(offsetof(CalliopeAsset_GetViewType, ReturnValue) == 0x000000, "Member 'CalliopeAsset_GetViewType::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeAsset.IsEditorOnlyCS
// 0x0001 (0x0001 - 0x0000)
struct CalliopeAsset_IsEditorOnlyCS final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeAsset_IsEditorOnlyCS) == 0x000001, "Wrong alignment on CalliopeAsset_IsEditorOnlyCS");
//static_assert(sizeof(CalliopeAsset_IsEditorOnlyCS) == 0x000001, "Wrong size on CalliopeAsset_IsEditorOnlyCS");
//static_assert(offsetof(CalliopeAsset_IsEditorOnlyCS, ReturnValue) == 0x000000, "Member 'CalliopeAsset_IsEditorOnlyCS::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeLevelSequenceActor.BindActorByName
// 0x0010 (0x0010 - 0x0000)
struct CalliopeLevelSequenceActor_BindActorByName final
{
public:
	class FName                                   BindingName;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 BindingActor;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeLevelSequenceActor_BindActorByName) == 0x000008, "Wrong alignment on CalliopeLevelSequenceActor_BindActorByName");
//static_assert(sizeof(CalliopeLevelSequenceActor_BindActorByName) == 0x000010, "Wrong size on CalliopeLevelSequenceActor_BindActorByName");
//static_assert(offsetof(CalliopeLevelSequenceActor_BindActorByName, BindingName) == 0x000000, "Member 'CalliopeLevelSequenceActor_BindActorByName::BindingName' has a wrong offset!");
//static_assert(offsetof(CalliopeLevelSequenceActor_BindActorByName, BindingActor) == 0x000008, "Member 'CalliopeLevelSequenceActor_BindActorByName::BindingActor' has a wrong offset!");

// Function Calliope.CalliopeLevelSequenceActor.BindActorsByTag
// 0x0050 (0x0050 - 0x0000)
struct CalliopeLevelSequenceActor_BindActorsByTag final
{
public:
	TMap<class FName, class AActor*>              TagActors;                                         // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeLevelSequenceActor_BindActorsByTag) == 0x000008, "Wrong alignment on CalliopeLevelSequenceActor_BindActorsByTag");
//static_assert(sizeof(CalliopeLevelSequenceActor_BindActorsByTag) == 0x000050, "Wrong size on CalliopeLevelSequenceActor_BindActorsByTag");
//static_assert(offsetof(CalliopeLevelSequenceActor_BindActorsByTag, TagActors) == 0x000000, "Member 'CalliopeLevelSequenceActor_BindActorsByTag::TagActors' has a wrong offset!");

// Function Calliope.CalliopeLevelSequenceActor.MeshPrestreamTextures
// 0x0010 (0x0010 - 0x0000)
struct CalliopeLevelSequenceActor_MeshPrestreamTextures final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DurationTimeSeconds;                               // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnable;                                           // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeLevelSequenceActor_MeshPrestreamTextures) == 0x000008, "Wrong alignment on CalliopeLevelSequenceActor_MeshPrestreamTextures");
//static_assert(sizeof(CalliopeLevelSequenceActor_MeshPrestreamTextures) == 0x000010, "Wrong size on CalliopeLevelSequenceActor_MeshPrestreamTextures");
//static_assert(offsetof(CalliopeLevelSequenceActor_MeshPrestreamTextures, Mesh) == 0x000000, "Member 'CalliopeLevelSequenceActor_MeshPrestreamTextures::Mesh' has a wrong offset!");
//static_assert(offsetof(CalliopeLevelSequenceActor_MeshPrestreamTextures, DurationTimeSeconds) == 0x000008, "Member 'CalliopeLevelSequenceActor_MeshPrestreamTextures::DurationTimeSeconds' has a wrong offset!");
//static_assert(offsetof(CalliopeLevelSequenceActor_MeshPrestreamTextures, bEnable) == 0x00000C, "Member 'CalliopeLevelSequenceActor_MeshPrestreamTextures::bEnable' has a wrong offset!");

// Function Calliope.CalliopeLevelSequenceActor.MeshSetClothLocalSpaceSimulation
// 0x0010 (0x0010 - 0x0000)
struct CalliopeLevelSequenceActor_MeshSetClothLocalSpaceSimulation final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnable;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeLevelSequenceActor_MeshSetClothLocalSpaceSimulation) == 0x000008, "Wrong alignment on CalliopeLevelSequenceActor_MeshSetClothLocalSpaceSimulation");
//static_assert(sizeof(CalliopeLevelSequenceActor_MeshSetClothLocalSpaceSimulation) == 0x000010, "Wrong size on CalliopeLevelSequenceActor_MeshSetClothLocalSpaceSimulation");
//static_assert(offsetof(CalliopeLevelSequenceActor_MeshSetClothLocalSpaceSimulation, Mesh) == 0x000000, "Member 'CalliopeLevelSequenceActor_MeshSetClothLocalSpaceSimulation::Mesh' has a wrong offset!");
//static_assert(offsetof(CalliopeLevelSequenceActor_MeshSetClothLocalSpaceSimulation, bEnable) == 0x000008, "Member 'CalliopeLevelSequenceActor_MeshSetClothLocalSpaceSimulation::bEnable' has a wrong offset!");

// Function Calliope.CalliopeLevelSequenceActor.ReSetSequence
// 0x0008 (0x0008 - 0x0000)
struct CalliopeLevelSequenceActor_ReSetSequence final
{
public:
	class ULevelSequence*                         InSequence;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeLevelSequenceActor_ReSetSequence) == 0x000008, "Wrong alignment on CalliopeLevelSequenceActor_ReSetSequence");
//static_assert(sizeof(CalliopeLevelSequenceActor_ReSetSequence) == 0x000008, "Wrong size on CalliopeLevelSequenceActor_ReSetSequence");
//static_assert(offsetof(CalliopeLevelSequenceActor_ReSetSequence, InSequence) == 0x000000, "Member 'CalliopeLevelSequenceActor_ReSetSequence::InSequence' has a wrong offset!");

// Function Calliope.CalliopeLevelSequenceActor.SetAllMeshPropertyInSequence
// 0x0001 (0x0001 - 0x0000)
struct CalliopeLevelSequenceActor_SetAllMeshPropertyInSequence final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeLevelSequenceActor_SetAllMeshPropertyInSequence) == 0x000001, "Wrong alignment on CalliopeLevelSequenceActor_SetAllMeshPropertyInSequence");
//static_assert(sizeof(CalliopeLevelSequenceActor_SetAllMeshPropertyInSequence) == 0x000001, "Wrong size on CalliopeLevelSequenceActor_SetAllMeshPropertyInSequence");
//static_assert(offsetof(CalliopeLevelSequenceActor_SetAllMeshPropertyInSequence, bEnable) == 0x000000, "Member 'CalliopeLevelSequenceActor_SetAllMeshPropertyInSequence::bEnable' has a wrong offset!");

// Function Calliope.CalliopeLevelSequenceActor.SetAllPerformerTickEnabled
// 0x0058 (0x0058 - 0x0000)
struct CalliopeLevelSequenceActor_SetAllPerformerTickEnabled final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class AActor*>                           OutPerformers;                                     // 0x0008(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeLevelSequenceActor_SetAllPerformerTickEnabled) == 0x000008, "Wrong alignment on CalliopeLevelSequenceActor_SetAllPerformerTickEnabled");
//static_assert(sizeof(CalliopeLevelSequenceActor_SetAllPerformerTickEnabled) == 0x000058, "Wrong size on CalliopeLevelSequenceActor_SetAllPerformerTickEnabled");
//static_assert(offsetof(CalliopeLevelSequenceActor_SetAllPerformerTickEnabled, bEnable) == 0x000000, "Member 'CalliopeLevelSequenceActor_SetAllPerformerTickEnabled::bEnable' has a wrong offset!");
//static_assert(offsetof(CalliopeLevelSequenceActor_SetAllPerformerTickEnabled, OutPerformers) == 0x000008, "Member 'CalliopeLevelSequenceActor_SetAllPerformerTickEnabled::OutPerformers' has a wrong offset!");

// Function Calliope.CalliopeLevelSequenceActor.SetPaused
// 0x0001 (0x0001 - 0x0000)
struct CalliopeLevelSequenceActor_SetPaused final
{
public:
	bool                                          bInPaused;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeLevelSequenceActor_SetPaused) == 0x000001, "Wrong alignment on CalliopeLevelSequenceActor_SetPaused");
//static_assert(sizeof(CalliopeLevelSequenceActor_SetPaused) == 0x000001, "Wrong size on CalliopeLevelSequenceActor_SetPaused");
//static_assert(offsetof(CalliopeLevelSequenceActor_SetPaused, bInPaused) == 0x000000, "Member 'CalliopeLevelSequenceActor_SetPaused::bInPaused' has a wrong offset!");

// Function Calliope.CalliopeLevelSequenceActor.GetBindingTags
// 0x0058 (0x0058 - 0x0000)
struct CalliopeLevelSequenceActor_GetBindingTags final
{
public:
	TSet<class FName>                             OutBindingTags;                                    // 0x0000(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0050(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeLevelSequenceActor_GetBindingTags) == 0x000008, "Wrong alignment on CalliopeLevelSequenceActor_GetBindingTags");
//static_assert(sizeof(CalliopeLevelSequenceActor_GetBindingTags) == 0x000058, "Wrong size on CalliopeLevelSequenceActor_GetBindingTags");
//static_assert(offsetof(CalliopeLevelSequenceActor_GetBindingTags, OutBindingTags) == 0x000000, "Member 'CalliopeLevelSequenceActor_GetBindingTags::OutBindingTags' has a wrong offset!");
//static_assert(offsetof(CalliopeLevelSequenceActor_GetBindingTags, ReturnValue) == 0x000050, "Member 'CalliopeLevelSequenceActor_GetBindingTags::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeFunctionLibrary.MarkDirtyAllCalliopeTrack
// 0x0008 (0x0008 - 0x0000)
struct CalliopeFunctionLibrary_MarkDirtyAllCalliopeTrack final
{
public:
	class UMovieScene*                            InSequence;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeFunctionLibrary_MarkDirtyAllCalliopeTrack) == 0x000008, "Wrong alignment on CalliopeFunctionLibrary_MarkDirtyAllCalliopeTrack");
//static_assert(sizeof(CalliopeFunctionLibrary_MarkDirtyAllCalliopeTrack) == 0x000008, "Wrong size on CalliopeFunctionLibrary_MarkDirtyAllCalliopeTrack");
//static_assert(offsetof(CalliopeFunctionLibrary_MarkDirtyAllCalliopeTrack, InSequence) == 0x000000, "Member 'CalliopeFunctionLibrary_MarkDirtyAllCalliopeTrack::InSequence' has a wrong offset!");

// Function Calliope.CalliopeGameplayTagLibrary.AddGamePlayTagToINI
// 0x0030 (0x0030 - 0x0000)
struct CalliopeGameplayTagLibrary_AddGamePlayTagToINI final
{
public:
	class FString                                 NewTag;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Comment;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TagSourceName;                                     // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsRestrictedTag;                                  // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowNonRestrictedChildren;                       // 0x0029(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x002A(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeGameplayTagLibrary_AddGamePlayTagToINI) == 0x000008, "Wrong alignment on CalliopeGameplayTagLibrary_AddGamePlayTagToINI");
//static_assert(sizeof(CalliopeGameplayTagLibrary_AddGamePlayTagToINI) == 0x000030, "Wrong size on CalliopeGameplayTagLibrary_AddGamePlayTagToINI");
//static_assert(offsetof(CalliopeGameplayTagLibrary_AddGamePlayTagToINI, NewTag) == 0x000000, "Member 'CalliopeGameplayTagLibrary_AddGamePlayTagToINI::NewTag' has a wrong offset!");
//static_assert(offsetof(CalliopeGameplayTagLibrary_AddGamePlayTagToINI, Comment) == 0x000010, "Member 'CalliopeGameplayTagLibrary_AddGamePlayTagToINI::Comment' has a wrong offset!");
//static_assert(offsetof(CalliopeGameplayTagLibrary_AddGamePlayTagToINI, TagSourceName) == 0x000020, "Member 'CalliopeGameplayTagLibrary_AddGamePlayTagToINI::TagSourceName' has a wrong offset!");
//static_assert(offsetof(CalliopeGameplayTagLibrary_AddGamePlayTagToINI, bIsRestrictedTag) == 0x000028, "Member 'CalliopeGameplayTagLibrary_AddGamePlayTagToINI::bIsRestrictedTag' has a wrong offset!");
//static_assert(offsetof(CalliopeGameplayTagLibrary_AddGamePlayTagToINI, bAllowNonRestrictedChildren) == 0x000029, "Member 'CalliopeGameplayTagLibrary_AddGamePlayTagToINI::bAllowNonRestrictedChildren' has a wrong offset!");
//static_assert(offsetof(CalliopeGameplayTagLibrary_AddGamePlayTagToINI, ReturnValue) == 0x00002A, "Member 'CalliopeGameplayTagLibrary_AddGamePlayTagToINI::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeGameplayTagLibrary.FilterTag
// 0x0050 (0x0050 - 0x0000)
struct CalliopeGameplayTagLibrary_FilterTag final
{
public:
	struct FGameplayTagContainer                  Container;                                         // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FGameplayTag                           Tag;                                               // 0x0020(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExactMatch;                                       // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  ReturnValue;                                       // 0x0030(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeGameplayTagLibrary_FilterTag) == 0x000008, "Wrong alignment on CalliopeGameplayTagLibrary_FilterTag");
//static_assert(sizeof(CalliopeGameplayTagLibrary_FilterTag) == 0x000050, "Wrong size on CalliopeGameplayTagLibrary_FilterTag");
//static_assert(offsetof(CalliopeGameplayTagLibrary_FilterTag, Container) == 0x000000, "Member 'CalliopeGameplayTagLibrary_FilterTag::Container' has a wrong offset!");
//static_assert(offsetof(CalliopeGameplayTagLibrary_FilterTag, Tag) == 0x000020, "Member 'CalliopeGameplayTagLibrary_FilterTag::Tag' has a wrong offset!");
//static_assert(offsetof(CalliopeGameplayTagLibrary_FilterTag, bExactMatch) == 0x000028, "Member 'CalliopeGameplayTagLibrary_FilterTag::bExactMatch' has a wrong offset!");
//static_assert(offsetof(CalliopeGameplayTagLibrary_FilterTag, ReturnValue) == 0x000030, "Member 'CalliopeGameplayTagLibrary_FilterTag::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeGameplayTagLibrary.FilterTags
// 0x0068 (0x0068 - 0x0000)
struct CalliopeGameplayTagLibrary_FilterTags final
{
public:
	struct FGameplayTagContainer                  Container;                                         // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  OtherContainer;                                    // 0x0020(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bExactMatch;                                       // 0x0040(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  ReturnValue;                                       // 0x0048(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeGameplayTagLibrary_FilterTags) == 0x000008, "Wrong alignment on CalliopeGameplayTagLibrary_FilterTags");
//static_assert(sizeof(CalliopeGameplayTagLibrary_FilterTags) == 0x000068, "Wrong size on CalliopeGameplayTagLibrary_FilterTags");
//static_assert(offsetof(CalliopeGameplayTagLibrary_FilterTags, Container) == 0x000000, "Member 'CalliopeGameplayTagLibrary_FilterTags::Container' has a wrong offset!");
//static_assert(offsetof(CalliopeGameplayTagLibrary_FilterTags, OtherContainer) == 0x000020, "Member 'CalliopeGameplayTagLibrary_FilterTags::OtherContainer' has a wrong offset!");
//static_assert(offsetof(CalliopeGameplayTagLibrary_FilterTags, bExactMatch) == 0x000040, "Member 'CalliopeGameplayTagLibrary_FilterTags::bExactMatch' has a wrong offset!");
//static_assert(offsetof(CalliopeGameplayTagLibrary_FilterTags, ReturnValue) == 0x000048, "Member 'CalliopeGameplayTagLibrary_FilterTags::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeGameplayTagLibrary.HasTagName
// 0x0030 (0x0030 - 0x0000)
struct CalliopeGameplayTagLibrary_HasTagName final
{
public:
	struct FGameplayTagContainer                  TagContainer;                                      // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FName                                   TagName;                                           // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExactMatch;                                       // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0029(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeGameplayTagLibrary_HasTagName) == 0x000008, "Wrong alignment on CalliopeGameplayTagLibrary_HasTagName");
//static_assert(sizeof(CalliopeGameplayTagLibrary_HasTagName) == 0x000030, "Wrong size on CalliopeGameplayTagLibrary_HasTagName");
//static_assert(offsetof(CalliopeGameplayTagLibrary_HasTagName, TagContainer) == 0x000000, "Member 'CalliopeGameplayTagLibrary_HasTagName::TagContainer' has a wrong offset!");
//static_assert(offsetof(CalliopeGameplayTagLibrary_HasTagName, TagName) == 0x000020, "Member 'CalliopeGameplayTagLibrary_HasTagName::TagName' has a wrong offset!");
//static_assert(offsetof(CalliopeGameplayTagLibrary_HasTagName, bExactMatch) == 0x000028, "Member 'CalliopeGameplayTagLibrary_HasTagName::bExactMatch' has a wrong offset!");
//static_assert(offsetof(CalliopeGameplayTagLibrary_HasTagName, ReturnValue) == 0x000029, "Member 'CalliopeGameplayTagLibrary_HasTagName::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeGameplayTagLibrary.MakeGameplayTagContainer
// 0x0020 (0x0020 - 0x0000)
struct CalliopeGameplayTagLibrary_MakeGameplayTagContainer final
{
public:
	struct FGameplayTagContainer                  ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeGameplayTagLibrary_MakeGameplayTagContainer) == 0x000008, "Wrong alignment on CalliopeGameplayTagLibrary_MakeGameplayTagContainer");
//static_assert(sizeof(CalliopeGameplayTagLibrary_MakeGameplayTagContainer) == 0x000020, "Wrong size on CalliopeGameplayTagLibrary_MakeGameplayTagContainer");
//static_assert(offsetof(CalliopeGameplayTagLibrary_MakeGameplayTagContainer, ReturnValue) == 0x000000, "Member 'CalliopeGameplayTagLibrary_MakeGameplayTagContainer::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeGameplayTagLibrary.MakeGameplayTagFromName
// 0x0010 (0x0010 - 0x0000)
struct CalliopeGameplayTagLibrary_MakeGameplayTagFromName final
{
public:
	class FName                                   TagName;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeGameplayTagLibrary_MakeGameplayTagFromName) == 0x000004, "Wrong alignment on CalliopeGameplayTagLibrary_MakeGameplayTagFromName");
//static_assert(sizeof(CalliopeGameplayTagLibrary_MakeGameplayTagFromName) == 0x000010, "Wrong size on CalliopeGameplayTagLibrary_MakeGameplayTagFromName");
//static_assert(offsetof(CalliopeGameplayTagLibrary_MakeGameplayTagFromName, TagName) == 0x000000, "Member 'CalliopeGameplayTagLibrary_MakeGameplayTagFromName::TagName' has a wrong offset!");
//static_assert(offsetof(CalliopeGameplayTagLibrary_MakeGameplayTagFromName, ReturnValue) == 0x000008, "Member 'CalliopeGameplayTagLibrary_MakeGameplayTagFromName::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeGameplayTagLibrary.MakeGameplayTagFromString
// 0x0018 (0x0018 - 0x0000)
struct CalliopeGameplayTagLibrary_MakeGameplayTagFromString final
{
public:
	class FString                                 TagStr;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeGameplayTagLibrary_MakeGameplayTagFromString) == 0x000008, "Wrong alignment on CalliopeGameplayTagLibrary_MakeGameplayTagFromString");
//static_assert(sizeof(CalliopeGameplayTagLibrary_MakeGameplayTagFromString) == 0x000018, "Wrong size on CalliopeGameplayTagLibrary_MakeGameplayTagFromString");
//static_assert(offsetof(CalliopeGameplayTagLibrary_MakeGameplayTagFromString, TagStr) == 0x000000, "Member 'CalliopeGameplayTagLibrary_MakeGameplayTagFromString::TagStr' has a wrong offset!");
//static_assert(offsetof(CalliopeGameplayTagLibrary_MakeGameplayTagFromString, ReturnValue) == 0x000010, "Member 'CalliopeGameplayTagLibrary_MakeGameplayTagFromString::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeInteractor.ConvertCalliopeGuidToGuid
// 0x0020 (0x0020 - 0x0000)
struct CalliopeInteractor_ConvertCalliopeGuidToGuid final
{
public:
	struct FCalliopeGuid                          InCalliopeGuid;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeInteractor_ConvertCalliopeGuidToGuid) == 0x000004, "Wrong alignment on CalliopeInteractor_ConvertCalliopeGuidToGuid");
//static_assert(sizeof(CalliopeInteractor_ConvertCalliopeGuidToGuid) == 0x000020, "Wrong size on CalliopeInteractor_ConvertCalliopeGuidToGuid");
//static_assert(offsetof(CalliopeInteractor_ConvertCalliopeGuidToGuid, InCalliopeGuid) == 0x000000, "Member 'CalliopeInteractor_ConvertCalliopeGuidToGuid::InCalliopeGuid' has a wrong offset!");
//static_assert(offsetof(CalliopeInteractor_ConvertCalliopeGuidToGuid, ReturnValue) == 0x000010, "Member 'CalliopeInteractor_ConvertCalliopeGuidToGuid::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeInteractor.GetInstanceChecked
// 0x0008 (0x0008 - 0x0000)
struct CalliopeInteractor_GetInstanceChecked final
{
public:
	class UCalliopeInteractor*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeInteractor_GetInstanceChecked) == 0x000008, "Wrong alignment on CalliopeInteractor_GetInstanceChecked");
//static_assert(sizeof(CalliopeInteractor_GetInstanceChecked) == 0x000008, "Wrong size on CalliopeInteractor_GetInstanceChecked");
//static_assert(offsetof(CalliopeInteractor_GetInstanceChecked, ReturnValue) == 0x000000, "Member 'CalliopeInteractor_GetInstanceChecked::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeInteractor.RegisterInstance
// 0x0008 (0x0008 - 0x0000)
struct CalliopeInteractor_RegisterInstance final
{
public:
	class UCalliopeInteractor*                    Instance;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeInteractor_RegisterInstance) == 0x000008, "Wrong alignment on CalliopeInteractor_RegisterInstance");
//static_assert(sizeof(CalliopeInteractor_RegisterInstance) == 0x000008, "Wrong size on CalliopeInteractor_RegisterInstance");
//static_assert(offsetof(CalliopeInteractor_RegisterInstance, Instance) == 0x000000, "Member 'CalliopeInteractor_RegisterInstance::Instance' has a wrong offset!");

// Function Calliope.CalliopeInteractor.GetAssetClass
// 0x0010 (0x0010 - 0x0000)
struct CalliopeInteractor_GetAssetClass final
{
public:
	ECalliopeViewType                             InViewType;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeInteractor_GetAssetClass) == 0x000008, "Wrong alignment on CalliopeInteractor_GetAssetClass");
//static_assert(sizeof(CalliopeInteractor_GetAssetClass) == 0x000010, "Wrong size on CalliopeInteractor_GetAssetClass");
//static_assert(offsetof(CalliopeInteractor_GetAssetClass, InViewType) == 0x000000, "Member 'CalliopeInteractor_GetAssetClass::InViewType' has a wrong offset!");
//static_assert(offsetof(CalliopeInteractor_GetAssetClass, ReturnValue) == 0x000008, "Member 'CalliopeInteractor_GetAssetClass::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeInteractor.SetCustomInputNodeEventName
// 0x0018 (0x0018 - 0x0000)
struct CalliopeInteractor_SetCustomInputNodeEventName final
{
public:
	class UCalliopeNode*                          Node;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InEventName;                                       // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeInteractor_SetCustomInputNodeEventName) == 0x000008, "Wrong alignment on CalliopeInteractor_SetCustomInputNodeEventName");
//static_assert(sizeof(CalliopeInteractor_SetCustomInputNodeEventName) == 0x000018, "Wrong size on CalliopeInteractor_SetCustomInputNodeEventName");
//static_assert(offsetof(CalliopeInteractor_SetCustomInputNodeEventName, Node) == 0x000000, "Member 'CalliopeInteractor_SetCustomInputNodeEventName::Node' has a wrong offset!");
//static_assert(offsetof(CalliopeInteractor_SetCustomInputNodeEventName, InEventName) == 0x000008, "Member 'CalliopeInteractor_SetCustomInputNodeEventName::InEventName' has a wrong offset!");
//static_assert(offsetof(CalliopeInteractor_SetCustomInputNodeEventName, ReturnValue) == 0x000010, "Member 'CalliopeInteractor_SetCustomInputNodeEventName::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeInteractor.SetCustomOutputNodeEventName
// 0x0018 (0x0018 - 0x0000)
struct CalliopeInteractor_SetCustomOutputNodeEventName final
{
public:
	class UCalliopeNode*                          Node;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InEventName;                                       // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeInteractor_SetCustomOutputNodeEventName) == 0x000008, "Wrong alignment on CalliopeInteractor_SetCustomOutputNodeEventName");
//static_assert(sizeof(CalliopeInteractor_SetCustomOutputNodeEventName) == 0x000018, "Wrong size on CalliopeInteractor_SetCustomOutputNodeEventName");
//static_assert(offsetof(CalliopeInteractor_SetCustomOutputNodeEventName, Node) == 0x000000, "Member 'CalliopeInteractor_SetCustomOutputNodeEventName::Node' has a wrong offset!");
//static_assert(offsetof(CalliopeInteractor_SetCustomOutputNodeEventName, InEventName) == 0x000008, "Member 'CalliopeInteractor_SetCustomOutputNodeEventName::InEventName' has a wrong offset!");
//static_assert(offsetof(CalliopeInteractor_SetCustomOutputNodeEventName, ReturnValue) == 0x000010, "Member 'CalliopeInteractor_SetCustomOutputNodeEventName::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeInteractor.GetComponentObserverNodeClasses
// 0x0018 (0x0018 - 0x0000)
struct CalliopeInteractor_GetComponentObserverNodeClasses final
{
public:
	TArray<class UClass*>                         OutClasses;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeInteractor_GetComponentObserverNodeClasses) == 0x000008, "Wrong alignment on CalliopeInteractor_GetComponentObserverNodeClasses");
//static_assert(sizeof(CalliopeInteractor_GetComponentObserverNodeClasses) == 0x000018, "Wrong size on CalliopeInteractor_GetComponentObserverNodeClasses");
//static_assert(offsetof(CalliopeInteractor_GetComponentObserverNodeClasses, OutClasses) == 0x000000, "Member 'CalliopeInteractor_GetComponentObserverNodeClasses::OutClasses' has a wrong offset!");
//static_assert(offsetof(CalliopeInteractor_GetComponentObserverNodeClasses, ReturnValue) == 0x000010, "Member 'CalliopeInteractor_GetComponentObserverNodeClasses::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeInteractor.GetCustomInputNodeClasses
// 0x0018 (0x0018 - 0x0000)
struct CalliopeInteractor_GetCustomInputNodeClasses final
{
public:
	TArray<class UClass*>                         OutClasses;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeInteractor_GetCustomInputNodeClasses) == 0x000008, "Wrong alignment on CalliopeInteractor_GetCustomInputNodeClasses");
//static_assert(sizeof(CalliopeInteractor_GetCustomInputNodeClasses) == 0x000018, "Wrong size on CalliopeInteractor_GetCustomInputNodeClasses");
//static_assert(offsetof(CalliopeInteractor_GetCustomInputNodeClasses, OutClasses) == 0x000000, "Member 'CalliopeInteractor_GetCustomInputNodeClasses::OutClasses' has a wrong offset!");
//static_assert(offsetof(CalliopeInteractor_GetCustomInputNodeClasses, ReturnValue) == 0x000010, "Member 'CalliopeInteractor_GetCustomInputNodeClasses::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeInteractor.GetCustomInputNodeEventName
// 0x0018 (0x0018 - 0x0000)
struct CalliopeInteractor_GetCustomInputNodeEventName final
{
public:
	class UCalliopeNode*                          Node;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OutEventName;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeInteractor_GetCustomInputNodeEventName) == 0x000008, "Wrong alignment on CalliopeInteractor_GetCustomInputNodeEventName");
//static_assert(sizeof(CalliopeInteractor_GetCustomInputNodeEventName) == 0x000018, "Wrong size on CalliopeInteractor_GetCustomInputNodeEventName");
//static_assert(offsetof(CalliopeInteractor_GetCustomInputNodeEventName, Node) == 0x000000, "Member 'CalliopeInteractor_GetCustomInputNodeEventName::Node' has a wrong offset!");
//static_assert(offsetof(CalliopeInteractor_GetCustomInputNodeEventName, OutEventName) == 0x000008, "Member 'CalliopeInteractor_GetCustomInputNodeEventName::OutEventName' has a wrong offset!");
//static_assert(offsetof(CalliopeInteractor_GetCustomInputNodeEventName, ReturnValue) == 0x000010, "Member 'CalliopeInteractor_GetCustomInputNodeEventName::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeInteractor.GetCustomOutputNodeClasses
// 0x0018 (0x0018 - 0x0000)
struct CalliopeInteractor_GetCustomOutputNodeClasses final
{
public:
	TArray<class UClass*>                         OutClasses;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeInteractor_GetCustomOutputNodeClasses) == 0x000008, "Wrong alignment on CalliopeInteractor_GetCustomOutputNodeClasses");
//static_assert(sizeof(CalliopeInteractor_GetCustomOutputNodeClasses) == 0x000018, "Wrong size on CalliopeInteractor_GetCustomOutputNodeClasses");
//static_assert(offsetof(CalliopeInteractor_GetCustomOutputNodeClasses, OutClasses) == 0x000000, "Member 'CalliopeInteractor_GetCustomOutputNodeClasses::OutClasses' has a wrong offset!");
//static_assert(offsetof(CalliopeInteractor_GetCustomOutputNodeClasses, ReturnValue) == 0x000010, "Member 'CalliopeInteractor_GetCustomOutputNodeClasses::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeInteractor.GetCustomOutputNodeEventName
// 0x0018 (0x0018 - 0x0000)
struct CalliopeInteractor_GetCustomOutputNodeEventName final
{
public:
	class UCalliopeNode*                          Node;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OutEventName;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeInteractor_GetCustomOutputNodeEventName) == 0x000008, "Wrong alignment on CalliopeInteractor_GetCustomOutputNodeEventName");
//static_assert(sizeof(CalliopeInteractor_GetCustomOutputNodeEventName) == 0x000018, "Wrong size on CalliopeInteractor_GetCustomOutputNodeEventName");
//static_assert(offsetof(CalliopeInteractor_GetCustomOutputNodeEventName, Node) == 0x000000, "Member 'CalliopeInteractor_GetCustomOutputNodeEventName::Node' has a wrong offset!");
//static_assert(offsetof(CalliopeInteractor_GetCustomOutputNodeEventName, OutEventName) == 0x000008, "Member 'CalliopeInteractor_GetCustomOutputNodeEventName::OutEventName' has a wrong offset!");
//static_assert(offsetof(CalliopeInteractor_GetCustomOutputNodeEventName, ReturnValue) == 0x000010, "Member 'CalliopeInteractor_GetCustomOutputNodeEventName::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeInteractor.GetExecutionMultiGateNodeClasses
// 0x0018 (0x0018 - 0x0000)
struct CalliopeInteractor_GetExecutionMultiGateNodeClasses final
{
public:
	TArray<class UClass*>                         OutClasses;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeInteractor_GetExecutionMultiGateNodeClasses) == 0x000008, "Wrong alignment on CalliopeInteractor_GetExecutionMultiGateNodeClasses");
//static_assert(sizeof(CalliopeInteractor_GetExecutionMultiGateNodeClasses) == 0x000018, "Wrong size on CalliopeInteractor_GetExecutionMultiGateNodeClasses");
//static_assert(offsetof(CalliopeInteractor_GetExecutionMultiGateNodeClasses, OutClasses) == 0x000000, "Member 'CalliopeInteractor_GetExecutionMultiGateNodeClasses::OutClasses' has a wrong offset!");
//static_assert(offsetof(CalliopeInteractor_GetExecutionMultiGateNodeClasses, ReturnValue) == 0x000010, "Member 'CalliopeInteractor_GetExecutionMultiGateNodeClasses::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeInteractor.GetExecutionSequenceNodeClasses
// 0x0018 (0x0018 - 0x0000)
struct CalliopeInteractor_GetExecutionSequenceNodeClasses final
{
public:
	TArray<class UClass*>                         OutClasses;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeInteractor_GetExecutionSequenceNodeClasses) == 0x000008, "Wrong alignment on CalliopeInteractor_GetExecutionSequenceNodeClasses");
//static_assert(sizeof(CalliopeInteractor_GetExecutionSequenceNodeClasses) == 0x000018, "Wrong size on CalliopeInteractor_GetExecutionSequenceNodeClasses");
//static_assert(offsetof(CalliopeInteractor_GetExecutionSequenceNodeClasses, OutClasses) == 0x000000, "Member 'CalliopeInteractor_GetExecutionSequenceNodeClasses::OutClasses' has a wrong offset!");
//static_assert(offsetof(CalliopeInteractor_GetExecutionSequenceNodeClasses, ReturnValue) == 0x000010, "Member 'CalliopeInteractor_GetExecutionSequenceNodeClasses::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeInteractor.GetFinishNodeClasses
// 0x0018 (0x0018 - 0x0000)
struct CalliopeInteractor_GetFinishNodeClasses final
{
public:
	TArray<class UClass*>                         OutClasses;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeInteractor_GetFinishNodeClasses) == 0x000008, "Wrong alignment on CalliopeInteractor_GetFinishNodeClasses");
//static_assert(sizeof(CalliopeInteractor_GetFinishNodeClasses) == 0x000018, "Wrong size on CalliopeInteractor_GetFinishNodeClasses");
//static_assert(offsetof(CalliopeInteractor_GetFinishNodeClasses, OutClasses) == 0x000000, "Member 'CalliopeInteractor_GetFinishNodeClasses::OutClasses' has a wrong offset!");
//static_assert(offsetof(CalliopeInteractor_GetFinishNodeClasses, ReturnValue) == 0x000010, "Member 'CalliopeInteractor_GetFinishNodeClasses::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeInteractor.GetRerouteNodeClasses
// 0x0018 (0x0018 - 0x0000)
struct CalliopeInteractor_GetRerouteNodeClasses final
{
public:
	TArray<class UClass*>                         OutClasses;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeInteractor_GetRerouteNodeClasses) == 0x000008, "Wrong alignment on CalliopeInteractor_GetRerouteNodeClasses");
//static_assert(sizeof(CalliopeInteractor_GetRerouteNodeClasses) == 0x000018, "Wrong size on CalliopeInteractor_GetRerouteNodeClasses");
//static_assert(offsetof(CalliopeInteractor_GetRerouteNodeClasses, OutClasses) == 0x000000, "Member 'CalliopeInteractor_GetRerouteNodeClasses::OutClasses' has a wrong offset!");
//static_assert(offsetof(CalliopeInteractor_GetRerouteNodeClasses, ReturnValue) == 0x000010, "Member 'CalliopeInteractor_GetRerouteNodeClasses::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeInteractor.GetStartNodeClasses
// 0x0018 (0x0018 - 0x0000)
struct CalliopeInteractor_GetStartNodeClasses final
{
public:
	TArray<class UClass*>                         OutClasses;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeInteractor_GetStartNodeClasses) == 0x000008, "Wrong alignment on CalliopeInteractor_GetStartNodeClasses");
//static_assert(sizeof(CalliopeInteractor_GetStartNodeClasses) == 0x000018, "Wrong size on CalliopeInteractor_GetStartNodeClasses");
//static_assert(offsetof(CalliopeInteractor_GetStartNodeClasses, OutClasses) == 0x000000, "Member 'CalliopeInteractor_GetStartNodeClasses::OutClasses' has a wrong offset!");
//static_assert(offsetof(CalliopeInteractor_GetStartNodeClasses, ReturnValue) == 0x000010, "Member 'CalliopeInteractor_GetStartNodeClasses::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeInteractor.GetSubGraphNodeClasses
// 0x0018 (0x0018 - 0x0000)
struct CalliopeInteractor_GetSubGraphNodeClasses final
{
public:
	TArray<class UClass*>                         OutClasses;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeInteractor_GetSubGraphNodeClasses) == 0x000008, "Wrong alignment on CalliopeInteractor_GetSubGraphNodeClasses");
//static_assert(sizeof(CalliopeInteractor_GetSubGraphNodeClasses) == 0x000018, "Wrong size on CalliopeInteractor_GetSubGraphNodeClasses");
//static_assert(offsetof(CalliopeInteractor_GetSubGraphNodeClasses, OutClasses) == 0x000000, "Member 'CalliopeInteractor_GetSubGraphNodeClasses::OutClasses' has a wrong offset!");
//static_assert(offsetof(CalliopeInteractor_GetSubGraphNodeClasses, ReturnValue) == 0x000010, "Member 'CalliopeInteractor_GetSubGraphNodeClasses::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeLevelSequencePlayer.CreateCalliopeLevelSequencePlayer
// 0x0038 (0x0038 - 0x0000)
struct CalliopeLevelSequencePlayer_CreateCalliopeLevelSequencePlayer final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelSequence*                         LevelSequence;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMovieSceneSequencePlaybackSettings    Settings;                                          // 0x0010(0x0014)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FLevelSequenceCameraSettings           CameraSettings;                                    // 0x0024(0x0002)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ACalliopeLevelSequenceActor*            OutActor;                                          // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCalliopeLevelSequencePlayer*           ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeLevelSequencePlayer_CreateCalliopeLevelSequencePlayer) == 0x000008, "Wrong alignment on CalliopeLevelSequencePlayer_CreateCalliopeLevelSequencePlayer");
//static_assert(sizeof(CalliopeLevelSequencePlayer_CreateCalliopeLevelSequencePlayer) == 0x000038, "Wrong size on CalliopeLevelSequencePlayer_CreateCalliopeLevelSequencePlayer");
//static_assert(offsetof(CalliopeLevelSequencePlayer_CreateCalliopeLevelSequencePlayer, WorldContextObject) == 0x000000, "Member 'CalliopeLevelSequencePlayer_CreateCalliopeLevelSequencePlayer::WorldContextObject' has a wrong offset!");
//static_assert(offsetof(CalliopeLevelSequencePlayer_CreateCalliopeLevelSequencePlayer, LevelSequence) == 0x000008, "Member 'CalliopeLevelSequencePlayer_CreateCalliopeLevelSequencePlayer::LevelSequence' has a wrong offset!");
//static_assert(offsetof(CalliopeLevelSequencePlayer_CreateCalliopeLevelSequencePlayer, Settings) == 0x000010, "Member 'CalliopeLevelSequencePlayer_CreateCalliopeLevelSequencePlayer::Settings' has a wrong offset!");
//static_assert(offsetof(CalliopeLevelSequencePlayer_CreateCalliopeLevelSequencePlayer, CameraSettings) == 0x000024, "Member 'CalliopeLevelSequencePlayer_CreateCalliopeLevelSequencePlayer::CameraSettings' has a wrong offset!");
//static_assert(offsetof(CalliopeLevelSequencePlayer_CreateCalliopeLevelSequencePlayer, OutActor) == 0x000028, "Member 'CalliopeLevelSequencePlayer_CreateCalliopeLevelSequencePlayer::OutActor' has a wrong offset!");
//static_assert(offsetof(CalliopeLevelSequencePlayer_CreateCalliopeLevelSequencePlayer, ReturnValue) == 0x000030, "Member 'CalliopeLevelSequencePlayer_CreateCalliopeLevelSequencePlayer::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeLevelSequencePlayer.FixSectionData
// 0x0008 (0x0008 - 0x0000)
struct CalliopeLevelSequencePlayer_FixSectionData final
{
public:
	const class UMovieScene*                      InMovieScene;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeLevelSequencePlayer_FixSectionData) == 0x000008, "Wrong alignment on CalliopeLevelSequencePlayer_FixSectionData");
//static_assert(sizeof(CalliopeLevelSequencePlayer_FixSectionData) == 0x000008, "Wrong size on CalliopeLevelSequencePlayer_FixSectionData");
//static_assert(offsetof(CalliopeLevelSequencePlayer_FixSectionData, InMovieScene) == 0x000000, "Member 'CalliopeLevelSequencePlayer_FixSectionData::InMovieScene' has a wrong offset!");

// Function Calliope.CalliopeLevelSequencePlayer.SetEventReceiver
// 0x0008 (0x0008 - 0x0000)
struct CalliopeLevelSequencePlayer_SetEventReceiver final
{
public:
	class UObject*                                InEventReceiver;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeLevelSequencePlayer_SetEventReceiver) == 0x000008, "Wrong alignment on CalliopeLevelSequencePlayer_SetEventReceiver");
//static_assert(sizeof(CalliopeLevelSequencePlayer_SetEventReceiver) == 0x000008, "Wrong size on CalliopeLevelSequencePlayer_SetEventReceiver");
//static_assert(offsetof(CalliopeLevelSequencePlayer_SetEventReceiver, InEventReceiver) == 0x000000, "Member 'CalliopeLevelSequencePlayer_SetEventReceiver::InEventReceiver' has a wrong offset!");

// Function Calliope.CalliopeLevelSequencePlayer.GetPlaybackContext
// 0x0008 (0x0008 - 0x0000)
struct CalliopeLevelSequencePlayer_GetPlaybackContext final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeLevelSequencePlayer_GetPlaybackContext) == 0x000008, "Wrong alignment on CalliopeLevelSequencePlayer_GetPlaybackContext");
//static_assert(sizeof(CalliopeLevelSequencePlayer_GetPlaybackContext) == 0x000008, "Wrong size on CalliopeLevelSequencePlayer_GetPlaybackContext");
//static_assert(offsetof(CalliopeLevelSequencePlayer_GetPlaybackContext, ReturnValue) == 0x000000, "Member 'CalliopeLevelSequencePlayer_GetPlaybackContext::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeLevelSequencePlayer.TryGetMarkedFrameTime
// 0x0020 (0x0020 - 0x0000)
struct CalliopeLevelSequencePlayer_TryGetMarkedFrameTime final
{
public:
	class FString                                 InFrameLabel;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameTime                             OutFrameTime;                                      // 0x0010(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeLevelSequencePlayer_TryGetMarkedFrameTime) == 0x000008, "Wrong alignment on CalliopeLevelSequencePlayer_TryGetMarkedFrameTime");
//static_assert(sizeof(CalliopeLevelSequencePlayer_TryGetMarkedFrameTime) == 0x000020, "Wrong size on CalliopeLevelSequencePlayer_TryGetMarkedFrameTime");
//static_assert(offsetof(CalliopeLevelSequencePlayer_TryGetMarkedFrameTime, InFrameLabel) == 0x000000, "Member 'CalliopeLevelSequencePlayer_TryGetMarkedFrameTime::InFrameLabel' has a wrong offset!");
//static_assert(offsetof(CalliopeLevelSequencePlayer_TryGetMarkedFrameTime, OutFrameTime) == 0x000010, "Member 'CalliopeLevelSequencePlayer_TryGetMarkedFrameTime::OutFrameTime' has a wrong offset!");
//static_assert(offsetof(CalliopeLevelSequencePlayer_TryGetMarkedFrameTime, ReturnValue) == 0x000018, "Member 'CalliopeLevelSequencePlayer_TryGetMarkedFrameTime::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeLevelSequencePlayer.TryGetMarkedSecond
// 0x0018 (0x0018 - 0x0000)
struct CalliopeLevelSequencePlayer_TryGetMarkedSecond final
{
public:
	class FString                                 InFrameLabel;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutTimeSecond;                                     // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeLevelSequencePlayer_TryGetMarkedSecond) == 0x000008, "Wrong alignment on CalliopeLevelSequencePlayer_TryGetMarkedSecond");
//static_assert(sizeof(CalliopeLevelSequencePlayer_TryGetMarkedSecond) == 0x000018, "Wrong size on CalliopeLevelSequencePlayer_TryGetMarkedSecond");
//static_assert(offsetof(CalliopeLevelSequencePlayer_TryGetMarkedSecond, InFrameLabel) == 0x000000, "Member 'CalliopeLevelSequencePlayer_TryGetMarkedSecond::InFrameLabel' has a wrong offset!");
//static_assert(offsetof(CalliopeLevelSequencePlayer_TryGetMarkedSecond, OutTimeSecond) == 0x000010, "Member 'CalliopeLevelSequencePlayer_TryGetMarkedSecond::OutTimeSecond' has a wrong offset!");
//static_assert(offsetof(CalliopeLevelSequencePlayer_TryGetMarkedSecond, ReturnValue) == 0x000014, "Member 'CalliopeLevelSequencePlayer_TryGetMarkedSecond::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeMovieSceneCameraCutSection.SetCameraBindingID
// 0x0018 (0x0018 - 0x0000)
struct CalliopeMovieSceneCameraCutSection_SetCameraBindingID final
{
public:
	struct FMovieSceneObjectBindingID             InCameraBindingID;                                 // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeMovieSceneCameraCutSection_SetCameraBindingID) == 0x000004, "Wrong alignment on CalliopeMovieSceneCameraCutSection_SetCameraBindingID");
//static_assert(sizeof(CalliopeMovieSceneCameraCutSection_SetCameraBindingID) == 0x000018, "Wrong size on CalliopeMovieSceneCameraCutSection_SetCameraBindingID");
//static_assert(offsetof(CalliopeMovieSceneCameraCutSection_SetCameraBindingID, InCameraBindingID) == 0x000000, "Member 'CalliopeMovieSceneCameraCutSection_SetCameraBindingID::InCameraBindingID' has a wrong offset!");

// Function Calliope.CalliopeMovieSceneCameraCutSection.GetCameraBindingID
// 0x0018 (0x0018 - 0x0000)
struct CalliopeMovieSceneCameraCutSection_GetCameraBindingID final
{
public:
	struct FMovieSceneObjectBindingID             ReturnValue;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeMovieSceneCameraCutSection_GetCameraBindingID) == 0x000004, "Wrong alignment on CalliopeMovieSceneCameraCutSection_GetCameraBindingID");
//static_assert(sizeof(CalliopeMovieSceneCameraCutSection_GetCameraBindingID) == 0x000018, "Wrong size on CalliopeMovieSceneCameraCutSection_GetCameraBindingID");
//static_assert(offsetof(CalliopeMovieSceneCameraCutSection_GetCameraBindingID, ReturnValue) == 0x000000, "Member 'CalliopeMovieSceneCameraCutSection_GetCameraBindingID::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.AddInputPins
// 0x0010 (0x0010 - 0x0000)
struct CalliopeNode_AddInputPins final
{
public:
	TArray<class FName>                           PinNames;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_AddInputPins) == 0x000008, "Wrong alignment on CalliopeNode_AddInputPins");
//static_assert(sizeof(CalliopeNode_AddInputPins) == 0x000010, "Wrong size on CalliopeNode_AddInputPins");
//static_assert(offsetof(CalliopeNode_AddInputPins, PinNames) == 0x000000, "Member 'CalliopeNode_AddInputPins::PinNames' has a wrong offset!");

// Function Calliope.CalliopeNode.AddOutputPins
// 0x0010 (0x0010 - 0x0000)
struct CalliopeNode_AddOutputPins final
{
public:
	TArray<class FName>                           PinNames;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_AddOutputPins) == 0x000008, "Wrong alignment on CalliopeNode_AddOutputPins");
//static_assert(sizeof(CalliopeNode_AddOutputPins) == 0x000010, "Wrong size on CalliopeNode_AddOutputPins");
//static_assert(offsetof(CalliopeNode_AddOutputPins, PinNames) == 0x000000, "Member 'CalliopeNode_AddOutputPins::PinNames' has a wrong offset!");

// Function Calliope.CalliopeNode.AssignInteractorGroupIDPolice
// 0x0008 (0x0008 - 0x0000)
struct CalliopeNode_AssignInteractorGroupIDPolice final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InGroupIDIndex;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_AssignInteractorGroupIDPolice) == 0x000004, "Wrong alignment on CalliopeNode_AssignInteractorGroupIDPolice");
//static_assert(sizeof(CalliopeNode_AssignInteractorGroupIDPolice) == 0x000008, "Wrong size on CalliopeNode_AssignInteractorGroupIDPolice");
//static_assert(offsetof(CalliopeNode_AssignInteractorGroupIDPolice, InIndex) == 0x000000, "Member 'CalliopeNode_AssignInteractorGroupIDPolice::InIndex' has a wrong offset!");
//static_assert(offsetof(CalliopeNode_AssignInteractorGroupIDPolice, InGroupIDIndex) == 0x000004, "Member 'CalliopeNode_AssignInteractorGroupIDPolice::InGroupIDIndex' has a wrong offset!");

// Function Calliope.CalliopeNode.BindAssetOnSubGraphReconstructionRequested
// 0x0008 (0x0008 - 0x0000)
struct CalliopeNode_BindAssetOnSubGraphReconstructionRequested final
{
public:
	class UCalliopeAsset*                         Asset;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_BindAssetOnSubGraphReconstructionRequested) == 0x000008, "Wrong alignment on CalliopeNode_BindAssetOnSubGraphReconstructionRequested");
//static_assert(sizeof(CalliopeNode_BindAssetOnSubGraphReconstructionRequested) == 0x000008, "Wrong size on CalliopeNode_BindAssetOnSubGraphReconstructionRequested");
//static_assert(offsetof(CalliopeNode_BindAssetOnSubGraphReconstructionRequested, Asset) == 0x000000, "Member 'CalliopeNode_BindAssetOnSubGraphReconstructionRequested::Asset' has a wrong offset!");

// Function Calliope.CalliopeNode.CheckCanPassNodeInfo
// 0x0014 (0x0014 - 0x0000)
struct CalliopeNode_CheckCanPassNodeInfo final
{
public:
	struct FCalliopeGuid                          PreviousNodeGuid;                                  // 0x0000(0x0010)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeNode_CheckCanPassNodeInfo) == 0x000004, "Wrong alignment on CalliopeNode_CheckCanPassNodeInfo");
//static_assert(sizeof(CalliopeNode_CheckCanPassNodeInfo) == 0x000014, "Wrong size on CalliopeNode_CheckCanPassNodeInfo");
//static_assert(offsetof(CalliopeNode_CheckCanPassNodeInfo, PreviousNodeGuid) == 0x000000, "Member 'CalliopeNode_CheckCanPassNodeInfo::PreviousNodeGuid' has a wrong offset!");
//static_assert(offsetof(CalliopeNode_CheckCanPassNodeInfo, ReturnValue) == 0x000010, "Member 'CalliopeNode_CheckCanPassNodeInfo::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.GetActorToFocusInCS
// 0x0008 (0x0008 - 0x0000)
struct CalliopeNode_GetActorToFocusInCS final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_GetActorToFocusInCS) == 0x000008, "Wrong alignment on CalliopeNode_GetActorToFocusInCS");
//static_assert(sizeof(CalliopeNode_GetActorToFocusInCS) == 0x000008, "Wrong size on CalliopeNode_GetActorToFocusInCS");
//static_assert(offsetof(CalliopeNode_GetActorToFocusInCS, ReturnValue) == 0x000000, "Member 'CalliopeNode_GetActorToFocusInCS::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.GetAssetPathInCS
// 0x0010 (0x0010 - 0x0000)
struct CalliopeNode_GetAssetPathInCS final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_GetAssetPathInCS) == 0x000008, "Wrong alignment on CalliopeNode_GetAssetPathInCS");
//static_assert(sizeof(CalliopeNode_GetAssetPathInCS) == 0x000010, "Wrong size on CalliopeNode_GetAssetPathInCS");
//static_assert(offsetof(CalliopeNode_GetAssetPathInCS, ReturnValue) == 0x000000, "Member 'CalliopeNode_GetAssetPathInCS::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.GetAssetToEditInCS
// 0x0008 (0x0008 - 0x0000)
struct CalliopeNode_GetAssetToEditInCS final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_GetAssetToEditInCS) == 0x000008, "Wrong alignment on CalliopeNode_GetAssetToEditInCS");
//static_assert(sizeof(CalliopeNode_GetAssetToEditInCS) == 0x000008, "Wrong size on CalliopeNode_GetAssetToEditInCS");
//static_assert(offsetof(CalliopeNode_GetAssetToEditInCS, ReturnValue) == 0x000000, "Member 'CalliopeNode_GetAssetToEditInCS::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.GetBranchGraphToEditInCS
// 0x0018 (0x0018 - 0x0000)
struct CalliopeNode_GetBranchGraphToEditInCS final
{
public:
	class FString                                 OutBranchGraphIdentifier;                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeNode_GetBranchGraphToEditInCS) == 0x000008, "Wrong alignment on CalliopeNode_GetBranchGraphToEditInCS");
//static_assert(sizeof(CalliopeNode_GetBranchGraphToEditInCS) == 0x000018, "Wrong size on CalliopeNode_GetBranchGraphToEditInCS");
//static_assert(offsetof(CalliopeNode_GetBranchGraphToEditInCS, OutBranchGraphIdentifier) == 0x000000, "Member 'CalliopeNode_GetBranchGraphToEditInCS::OutBranchGraphIdentifier' has a wrong offset!");
//static_assert(offsetof(CalliopeNode_GetBranchGraphToEditInCS, ReturnValue) == 0x000010, "Member 'CalliopeNode_GetBranchGraphToEditInCS::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.GetConnections
// 0x0050 (0x0050 - 0x0000)
struct CalliopeNode_GetConnections final
{
public:
	TMap<class FName, struct FCalliopeConnectedPin> ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_GetConnections) == 0x000008, "Wrong alignment on CalliopeNode_GetConnections");
//static_assert(sizeof(CalliopeNode_GetConnections) == 0x000050, "Wrong size on CalliopeNode_GetConnections");
//static_assert(offsetof(CalliopeNode_GetConnections, ReturnValue) == 0x000000, "Member 'CalliopeNode_GetConnections::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.GetContextInputsInCS
// 0x0010 (0x0010 - 0x0000)
struct CalliopeNode_GetContextInputsInCS final
{
public:
	TArray<class FName>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_GetContextInputsInCS) == 0x000008, "Wrong alignment on CalliopeNode_GetContextInputsInCS");
//static_assert(sizeof(CalliopeNode_GetContextInputsInCS) == 0x000010, "Wrong size on CalliopeNode_GetContextInputsInCS");
//static_assert(offsetof(CalliopeNode_GetContextInputsInCS, ReturnValue) == 0x000000, "Member 'CalliopeNode_GetContextInputsInCS::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.GetContextOutputsInCS
// 0x0010 (0x0010 - 0x0000)
struct CalliopeNode_GetContextOutputsInCS final
{
public:
	TArray<class FName>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_GetContextOutputsInCS) == 0x000008, "Wrong alignment on CalliopeNode_GetContextOutputsInCS");
//static_assert(sizeof(CalliopeNode_GetContextOutputsInCS) == 0x000010, "Wrong size on CalliopeNode_GetContextOutputsInCS");
//static_assert(offsetof(CalliopeNode_GetContextOutputsInCS, ReturnValue) == 0x000000, "Member 'CalliopeNode_GetContextOutputsInCS::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.GetDefaultInputPin
// 0x0018 (0x0018 - 0x0000)
struct CalliopeNode_GetDefaultInputPin final
{
public:
	struct FCalliopePin                           ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_GetDefaultInputPin) == 0x000008, "Wrong alignment on CalliopeNode_GetDefaultInputPin");
//static_assert(sizeof(CalliopeNode_GetDefaultInputPin) == 0x000018, "Wrong size on CalliopeNode_GetDefaultInputPin");
//static_assert(offsetof(CalliopeNode_GetDefaultInputPin, ReturnValue) == 0x000000, "Member 'CalliopeNode_GetDefaultInputPin::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.GetDefaultOutputPin
// 0x0018 (0x0018 - 0x0000)
struct CalliopeNode_GetDefaultOutputPin final
{
public:
	struct FCalliopePin                           ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_GetDefaultOutputPin) == 0x000008, "Wrong alignment on CalliopeNode_GetDefaultOutputPin");
//static_assert(sizeof(CalliopeNode_GetDefaultOutputPin) == 0x000018, "Wrong size on CalliopeNode_GetDefaultOutputPin");
//static_assert(offsetof(CalliopeNode_GetDefaultOutputPin, ReturnValue) == 0x000000, "Member 'CalliopeNode_GetDefaultOutputPin::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.IsBattleStateNode
// 0x0001 (0x0001 - 0x0000)
struct CalliopeNode_IsBattleStateNode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_IsBattleStateNode) == 0x000001, "Wrong alignment on CalliopeNode_IsBattleStateNode");
//static_assert(sizeof(CalliopeNode_IsBattleStateNode) == 0x000001, "Wrong size on CalliopeNode_IsBattleStateNode");
//static_assert(offsetof(CalliopeNode_IsBattleStateNode, ReturnValue) == 0x000000, "Member 'CalliopeNode_IsBattleStateNode::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.IsCalliopeActive
// 0x0001 (0x0001 - 0x0000)
struct CalliopeNode_IsCalliopeActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_IsCalliopeActive) == 0x000001, "Wrong alignment on CalliopeNode_IsCalliopeActive");
//static_assert(sizeof(CalliopeNode_IsCalliopeActive) == 0x000001, "Wrong size on CalliopeNode_IsCalliopeActive");
//static_assert(offsetof(CalliopeNode_IsCalliopeActive, ReturnValue) == 0x000000, "Member 'CalliopeNode_IsCalliopeActive::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.IsCalliopeNeverActivated
// 0x0001 (0x0001 - 0x0000)
struct CalliopeNode_IsCalliopeNeverActivated final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_IsCalliopeNeverActivated) == 0x000001, "Wrong alignment on CalliopeNode_IsCalliopeNeverActivated");
//static_assert(sizeof(CalliopeNode_IsCalliopeNeverActivated) == 0x000001, "Wrong size on CalliopeNode_IsCalliopeNeverActivated");
//static_assert(offsetof(CalliopeNode_IsCalliopeNeverActivated, ReturnValue) == 0x000000, "Member 'CalliopeNode_IsCalliopeNeverActivated::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.IsCalliopeWasActive
// 0x0001 (0x0001 - 0x0000)
struct CalliopeNode_IsCalliopeWasActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_IsCalliopeWasActive) == 0x000001, "Wrong alignment on CalliopeNode_IsCalliopeWasActive");
//static_assert(sizeof(CalliopeNode_IsCalliopeWasActive) == 0x000001, "Wrong size on CalliopeNode_IsCalliopeWasActive");
//static_assert(offsetof(CalliopeNode_IsCalliopeWasActive, ReturnValue) == 0x000000, "Member 'CalliopeNode_IsCalliopeWasActive::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.LoadAssetInCS
// 0x0030 (0x0030 - 0x0000)
struct CalliopeNode_LoadAssetInCS final
{
public:
	TSoftObjectPtr<class UCalliopeAsset>          AssetPtr;                                          // 0x0000(0x0028)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCalliopeAsset*                         ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_LoadAssetInCS) == 0x000008, "Wrong alignment on CalliopeNode_LoadAssetInCS");
//static_assert(sizeof(CalliopeNode_LoadAssetInCS) == 0x000030, "Wrong size on CalliopeNode_LoadAssetInCS");
//static_assert(offsetof(CalliopeNode_LoadAssetInCS, AssetPtr) == 0x000000, "Member 'CalliopeNode_LoadAssetInCS::AssetPtr' has a wrong offset!");
//static_assert(offsetof(CalliopeNode_LoadAssetInCS, ReturnValue) == 0x000028, "Member 'CalliopeNode_LoadAssetInCS::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.LogError
// 0x0010 (0x0010 - 0x0000)
struct CalliopeNode_LogError final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_LogError) == 0x000008, "Wrong alignment on CalliopeNode_LogError");
//static_assert(sizeof(CalliopeNode_LogError) == 0x000010, "Wrong size on CalliopeNode_LogError");
//static_assert(offsetof(CalliopeNode_LogError, Message) == 0x000000, "Member 'CalliopeNode_LogError::Message' has a wrong offset!");

// Function Calliope.CalliopeNode.PostPropertyChanged
// 0x0020 (0x0020 - 0x0000)
struct CalliopeNode_PostPropertyChanged final
{
public:
	class FString                                 MemberName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PropertyName;                                      // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_PostPropertyChanged) == 0x000008, "Wrong alignment on CalliopeNode_PostPropertyChanged");
//static_assert(sizeof(CalliopeNode_PostPropertyChanged) == 0x000020, "Wrong size on CalliopeNode_PostPropertyChanged");
//static_assert(offsetof(CalliopeNode_PostPropertyChanged, MemberName) == 0x000000, "Member 'CalliopeNode_PostPropertyChanged::MemberName' has a wrong offset!");
//static_assert(offsetof(CalliopeNode_PostPropertyChanged, PropertyName) == 0x000010, "Member 'CalliopeNode_PostPropertyChanged::PropertyName' has a wrong offset!");

// Function Calliope.CalliopeNode.PrePropertyChanged
// 0x0010 (0x0010 - 0x0000)
struct CalliopeNode_PrePropertyChanged final
{
public:
	class FString                                 PropertyName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_PrePropertyChanged) == 0x000008, "Wrong alignment on CalliopeNode_PrePropertyChanged");
//static_assert(sizeof(CalliopeNode_PrePropertyChanged) == 0x000010, "Wrong size on CalliopeNode_PrePropertyChanged");
//static_assert(offsetof(CalliopeNode_PrePropertyChanged, PropertyName) == 0x000000, "Member 'CalliopeNode_PrePropertyChanged::PropertyName' has a wrong offset!");

// Function Calliope.CalliopeNode.RecordInput
// 0x0008 (0x0008 - 0x0000)
struct CalliopeNode_RecordInput final
{
public:
	class FName                                   PinName;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_RecordInput) == 0x000004, "Wrong alignment on CalliopeNode_RecordInput");
//static_assert(sizeof(CalliopeNode_RecordInput) == 0x000008, "Wrong size on CalliopeNode_RecordInput");
//static_assert(offsetof(CalliopeNode_RecordInput, PinName) == 0x000000, "Member 'CalliopeNode_RecordInput::PinName' has a wrong offset!");

// Function Calliope.CalliopeNode.RecordOutput
// 0x0008 (0x0008 - 0x0000)
struct CalliopeNode_RecordOutput final
{
public:
	class FName                                   PinName;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_RecordOutput) == 0x000004, "Wrong alignment on CalliopeNode_RecordOutput");
//static_assert(sizeof(CalliopeNode_RecordOutput) == 0x000008, "Wrong size on CalliopeNode_RecordOutput");
//static_assert(offsetof(CalliopeNode_RecordOutput, PinName) == 0x000000, "Member 'CalliopeNode_RecordOutput::PinName' has a wrong offset!");

// Function Calliope.CalliopeNode.RefreshSceneObjPoliceConfig
// 0x0008 (0x0008 - 0x0000)
struct CalliopeNode_RefreshSceneObjPoliceConfig final
{
public:
	class UCalliopeNode*                          PreviousNode;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_RefreshSceneObjPoliceConfig) == 0x000008, "Wrong alignment on CalliopeNode_RefreshSceneObjPoliceConfig");
//static_assert(sizeof(CalliopeNode_RefreshSceneObjPoliceConfig) == 0x000008, "Wrong size on CalliopeNode_RefreshSceneObjPoliceConfig");
//static_assert(offsetof(CalliopeNode_RefreshSceneObjPoliceConfig, PreviousNode) == 0x000000, "Member 'CalliopeNode_RefreshSceneObjPoliceConfig::PreviousNode' has a wrong offset!");

// Function Calliope.CalliopeNode.SetConnections
// 0x0050 (0x0050 - 0x0000)
struct CalliopeNode_SetConnections final
{
public:
	TMap<class FName, struct FCalliopeConnectedPin> InConnections;                                     // 0x0000(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_SetConnections) == 0x000008, "Wrong alignment on CalliopeNode_SetConnections");
//static_assert(sizeof(CalliopeNode_SetConnections) == 0x000050, "Wrong size on CalliopeNode_SetConnections");
//static_assert(offsetof(CalliopeNode_SetConnections, InConnections) == 0x000000, "Member 'CalliopeNode_SetConnections::InConnections' has a wrong offset!");

// Function Calliope.CalliopeNode.SetInputPins
// 0x0010 (0x0010 - 0x0000)
struct CalliopeNode_SetInputPins final
{
public:
	TArray<struct FCalliopePin>                   InInputPins;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_SetInputPins) == 0x000008, "Wrong alignment on CalliopeNode_SetInputPins");
//static_assert(sizeof(CalliopeNode_SetInputPins) == 0x000010, "Wrong size on CalliopeNode_SetInputPins");
//static_assert(offsetof(CalliopeNode_SetInputPins, InInputPins) == 0x000000, "Member 'CalliopeNode_SetInputPins::InInputPins' has a wrong offset!");

// Function Calliope.CalliopeNode.SetOutputPins
// 0x0010 (0x0010 - 0x0000)
struct CalliopeNode_SetOutputPins final
{
public:
	TArray<struct FCalliopePin>                   InOutputPins;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_SetOutputPins) == 0x000008, "Wrong alignment on CalliopeNode_SetOutputPins");
//static_assert(sizeof(CalliopeNode_SetOutputPins) == 0x000010, "Wrong size on CalliopeNode_SetOutputPins");
//static_assert(offsetof(CalliopeNode_SetOutputPins, InOutputPins) == 0x000000, "Member 'CalliopeNode_SetOutputPins::InOutputPins' has a wrong offset!");

// Function Calliope.CalliopeNode.UnBindAssetOnSubGraphReconstructionRequested
// 0x0008 (0x0008 - 0x0000)
struct CalliopeNode_UnBindAssetOnSubGraphReconstructionRequested final
{
public:
	class UCalliopeAsset*                         Asset;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_UnBindAssetOnSubGraphReconstructionRequested) == 0x000008, "Wrong alignment on CalliopeNode_UnBindAssetOnSubGraphReconstructionRequested");
//static_assert(sizeof(CalliopeNode_UnBindAssetOnSubGraphReconstructionRequested) == 0x000008, "Wrong size on CalliopeNode_UnBindAssetOnSubGraphReconstructionRequested");
//static_assert(offsetof(CalliopeNode_UnBindAssetOnSubGraphReconstructionRequested, Asset) == 0x000000, "Member 'CalliopeNode_UnBindAssetOnSubGraphReconstructionRequested::Asset' has a wrong offset!");

// Function Calliope.CalliopeNode.CanUserAddInputInCS
// 0x0001 (0x0001 - 0x0000)
struct CalliopeNode_CanUserAddInputInCS final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_CanUserAddInputInCS) == 0x000001, "Wrong alignment on CalliopeNode_CanUserAddInputInCS");
//static_assert(sizeof(CalliopeNode_CanUserAddInputInCS) == 0x000001, "Wrong size on CalliopeNode_CanUserAddInputInCS");
//static_assert(offsetof(CalliopeNode_CanUserAddInputInCS, ReturnValue) == 0x000000, "Member 'CalliopeNode_CanUserAddInputInCS::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.CanUserAddOutputInCS
// 0x0001 (0x0001 - 0x0000)
struct CalliopeNode_CanUserAddOutputInCS final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_CanUserAddOutputInCS) == 0x000001, "Wrong alignment on CalliopeNode_CanUserAddOutputInCS");
//static_assert(sizeof(CalliopeNode_CanUserAddOutputInCS) == 0x000001, "Wrong size on CalliopeNode_CanUserAddOutputInCS");
//static_assert(offsetof(CalliopeNode_CanUserAddOutputInCS, ReturnValue) == 0x000000, "Member 'CalliopeNode_CanUserAddOutputInCS::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.GetCalliopeAsset
// 0x0008 (0x0008 - 0x0000)
struct CalliopeNode_GetCalliopeAsset final
{
public:
	class UCalliopeAsset*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_GetCalliopeAsset) == 0x000008, "Wrong alignment on CalliopeNode_GetCalliopeAsset");
//static_assert(sizeof(CalliopeNode_GetCalliopeAsset) == 0x000008, "Wrong size on CalliopeNode_GetCalliopeAsset");
//static_assert(offsetof(CalliopeNode_GetCalliopeAsset, ReturnValue) == 0x000000, "Member 'CalliopeNode_GetCalliopeAsset::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.GetConnection
// 0x0020 (0x0020 - 0x0000)
struct CalliopeNode_GetConnection final
{
public:
	class FName                                   OutputName;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCalliopeConnectedPin                  ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_GetConnection) == 0x000004, "Wrong alignment on CalliopeNode_GetConnection");
//static_assert(sizeof(CalliopeNode_GetConnection) == 0x000020, "Wrong size on CalliopeNode_GetConnection");
//static_assert(offsetof(CalliopeNode_GetConnection, OutputName) == 0x000000, "Member 'CalliopeNode_GetConnection::OutputName' has a wrong offset!");
//static_assert(offsetof(CalliopeNode_GetConnection, ReturnValue) == 0x000008, "Member 'CalliopeNode_GetConnection::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.GetGraphGuidInCS
// 0x0014 (0x0014 - 0x0000)
struct CalliopeNode_GetGraphGuidInCS final
{
public:
	struct FCalliopeGuid                          OutGraphGuid;                                      // 0x0000(0x0010)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeNode_GetGraphGuidInCS) == 0x000004, "Wrong alignment on CalliopeNode_GetGraphGuidInCS");
//static_assert(sizeof(CalliopeNode_GetGraphGuidInCS) == 0x000014, "Wrong size on CalliopeNode_GetGraphGuidInCS");
//static_assert(offsetof(CalliopeNode_GetGraphGuidInCS, OutGraphGuid) == 0x000000, "Member 'CalliopeNode_GetGraphGuidInCS::OutGraphGuid' has a wrong offset!");
//static_assert(offsetof(CalliopeNode_GetGraphGuidInCS, ReturnValue) == 0x000010, "Member 'CalliopeNode_GetGraphGuidInCS::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.GetGraphIdentifierInCS
// 0x000C (0x000C - 0x0000)
struct CalliopeNode_GetGraphIdentifierInCS final
{
public:
	class FName                                   OutGraphIdentifier;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeNode_GetGraphIdentifierInCS) == 0x000004, "Wrong alignment on CalliopeNode_GetGraphIdentifierInCS");
//static_assert(sizeof(CalliopeNode_GetGraphIdentifierInCS) == 0x00000C, "Wrong size on CalliopeNode_GetGraphIdentifierInCS");
//static_assert(offsetof(CalliopeNode_GetGraphIdentifierInCS, OutGraphIdentifier) == 0x000000, "Member 'CalliopeNode_GetGraphIdentifierInCS::OutGraphIdentifier' has a wrong offset!");
//static_assert(offsetof(CalliopeNode_GetGraphIdentifierInCS, ReturnValue) == 0x000008, "Member 'CalliopeNode_GetGraphIdentifierInCS::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.GetGraphNodeInCS
// 0x0008 (0x0008 - 0x0000)
struct CalliopeNode_GetGraphNodeInCS final
{
public:
	class UEdGraphNode*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_GetGraphNodeInCS) == 0x000008, "Wrong alignment on CalliopeNode_GetGraphNodeInCS");
//static_assert(sizeof(CalliopeNode_GetGraphNodeInCS) == 0x000008, "Wrong size on CalliopeNode_GetGraphNodeInCS");
//static_assert(offsetof(CalliopeNode_GetGraphNodeInCS, ReturnValue) == 0x000000, "Member 'CalliopeNode_GetGraphNodeInCS::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.GetGuid
// 0x0010 (0x0010 - 0x0000)
struct CalliopeNode_GetGuid final
{
public:
	struct FCalliopeGuid                          ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_GetGuid) == 0x000004, "Wrong alignment on CalliopeNode_GetGuid");
//static_assert(sizeof(CalliopeNode_GetGuid) == 0x000010, "Wrong size on CalliopeNode_GetGuid");
//static_assert(offsetof(CalliopeNode_GetGuid, ReturnValue) == 0x000000, "Member 'CalliopeNode_GetGuid::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.GetInputNames
// 0x0010 (0x0010 - 0x0000)
struct CalliopeNode_GetInputNames final
{
public:
	TArray<class FName>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_GetInputNames) == 0x000008, "Wrong alignment on CalliopeNode_GetInputNames");
//static_assert(sizeof(CalliopeNode_GetInputNames) == 0x000010, "Wrong size on CalliopeNode_GetInputNames");
//static_assert(offsetof(CalliopeNode_GetInputNames, ReturnValue) == 0x000000, "Member 'CalliopeNode_GetInputNames::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.GetInputPins
// 0x0010 (0x0010 - 0x0000)
struct CalliopeNode_GetInputPins final
{
public:
	TArray<struct FCalliopePin>                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_GetInputPins) == 0x000008, "Wrong alignment on CalliopeNode_GetInputPins");
//static_assert(sizeof(CalliopeNode_GetInputPins) == 0x000010, "Wrong size on CalliopeNode_GetInputPins");
//static_assert(offsetof(CalliopeNode_GetInputPins, ReturnValue) == 0x000000, "Member 'CalliopeNode_GetInputPins::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.GetNodeDescriptionInCS
// 0x0010 (0x0010 - 0x0000)
struct CalliopeNode_GetNodeDescriptionInCS final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_GetNodeDescriptionInCS) == 0x000008, "Wrong alignment on CalliopeNode_GetNodeDescriptionInCS");
//static_assert(sizeof(CalliopeNode_GetNodeDescriptionInCS) == 0x000010, "Wrong size on CalliopeNode_GetNodeDescriptionInCS");
//static_assert(offsetof(CalliopeNode_GetNodeDescriptionInCS, ReturnValue) == 0x000000, "Member 'CalliopeNode_GetNodeDescriptionInCS::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.GetOutputNames
// 0x0010 (0x0010 - 0x0000)
struct CalliopeNode_GetOutputNames final
{
public:
	TArray<class FName>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_GetOutputNames) == 0x000008, "Wrong alignment on CalliopeNode_GetOutputNames");
//static_assert(sizeof(CalliopeNode_GetOutputNames) == 0x000010, "Wrong size on CalliopeNode_GetOutputNames");
//static_assert(offsetof(CalliopeNode_GetOutputNames, ReturnValue) == 0x000000, "Member 'CalliopeNode_GetOutputNames::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.GetOutputPins
// 0x0010 (0x0010 - 0x0000)
struct CalliopeNode_GetOutputPins final
{
public:
	TArray<struct FCalliopePin>                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_GetOutputPins) == 0x000008, "Wrong alignment on CalliopeNode_GetOutputPins");
//static_assert(sizeof(CalliopeNode_GetOutputPins) == 0x000010, "Wrong size on CalliopeNode_GetOutputPins");
//static_assert(offsetof(CalliopeNode_GetOutputPins, ReturnValue) == 0x000000, "Member 'CalliopeNode_GetOutputPins::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.GetParentNodes
// 0x0010 (0x0010 - 0x0000)
struct CalliopeNode_GetParentNodes final
{
public:
	TArray<struct FCalliopeGuid>                  ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_GetParentNodes) == 0x000008, "Wrong alignment on CalliopeNode_GetParentNodes");
//static_assert(sizeof(CalliopeNode_GetParentNodes) == 0x000010, "Wrong size on CalliopeNode_GetParentNodes");
//static_assert(offsetof(CalliopeNode_GetParentNodes, ReturnValue) == 0x000000, "Member 'CalliopeNode_GetParentNodes::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.GetStatusStringInCS
// 0x0010 (0x0010 - 0x0000)
struct CalliopeNode_GetStatusStringInCS final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_GetStatusStringInCS) == 0x000008, "Wrong alignment on CalliopeNode_GetStatusStringInCS");
//static_assert(sizeof(CalliopeNode_GetStatusStringInCS) == 0x000010, "Wrong size on CalliopeNode_GetStatusStringInCS");
//static_assert(offsetof(CalliopeNode_GetStatusStringInCS, ReturnValue) == 0x000000, "Member 'CalliopeNode_GetStatusStringInCS::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.IsBranchGraphNode
// 0x0001 (0x0001 - 0x0000)
struct CalliopeNode_IsBranchGraphNode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_IsBranchGraphNode) == 0x000001, "Wrong alignment on CalliopeNode_IsBranchGraphNode");
//static_assert(sizeof(CalliopeNode_IsBranchGraphNode) == 0x000001, "Wrong size on CalliopeNode_IsBranchGraphNode");
//static_assert(offsetof(CalliopeNode_IsBranchGraphNode, ReturnValue) == 0x000000, "Member 'CalliopeNode_IsBranchGraphNode::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.IsOutputConnectTo
// 0x0014 (0x0014 - 0x0000)
struct CalliopeNode_IsOutputConnectTo final
{
public:
	struct FCalliopeGuid                          TargetNodeGuid;                                    // 0x0000(0x0010)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(CalliopeNode_IsOutputConnectTo) == 0x000004, "Wrong alignment on CalliopeNode_IsOutputConnectTo");
//static_assert(sizeof(CalliopeNode_IsOutputConnectTo) == 0x000014, "Wrong size on CalliopeNode_IsOutputConnectTo");
//static_assert(offsetof(CalliopeNode_IsOutputConnectTo, TargetNodeGuid) == 0x000000, "Member 'CalliopeNode_IsOutputConnectTo::TargetNodeGuid' has a wrong offset!");
//static_assert(offsetof(CalliopeNode_IsOutputConnectTo, ReturnValue) == 0x000010, "Member 'CalliopeNode_IsOutputConnectTo::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.IsPlayInEditor
// 0x0001 (0x0001 - 0x0000)
struct CalliopeNode_IsPlayInEditor final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_IsPlayInEditor) == 0x000001, "Wrong alignment on CalliopeNode_IsPlayInEditor");
//static_assert(sizeof(CalliopeNode_IsPlayInEditor) == 0x000001, "Wrong size on CalliopeNode_IsPlayInEditor");
//static_assert(offsetof(CalliopeNode_IsPlayInEditor, ReturnValue) == 0x000000, "Member 'CalliopeNode_IsPlayInEditor::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.IsPreloaded
// 0x0001 (0x0001 - 0x0000)
struct CalliopeNode_IsPreloaded final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_IsPreloaded) == 0x000001, "Wrong alignment on CalliopeNode_IsPreloaded");
//static_assert(sizeof(CalliopeNode_IsPreloaded) == 0x000001, "Wrong size on CalliopeNode_IsPreloaded");
//static_assert(offsetof(CalliopeNode_IsPreloaded, ReturnValue) == 0x000000, "Member 'CalliopeNode_IsPreloaded::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.IsSubGraphNode
// 0x0001 (0x0001 - 0x0000)
struct CalliopeNode_IsSubGraphNode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_IsSubGraphNode) == 0x000001, "Wrong alignment on CalliopeNode_IsSubGraphNode");
//static_assert(sizeof(CalliopeNode_IsSubGraphNode) == 0x000001, "Wrong size on CalliopeNode_IsSubGraphNode");
//static_assert(offsetof(CalliopeNode_IsSubGraphNode, ReturnValue) == 0x000000, "Member 'CalliopeNode_IsSubGraphNode::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.IsSupportViewType
// 0x0002 (0x0002 - 0x0000)
struct CalliopeNode_IsSupportViewType final
{
public:
	ECalliopeViewType                             InViewType;                                        // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_IsSupportViewType) == 0x000001, "Wrong alignment on CalliopeNode_IsSupportViewType");
//static_assert(sizeof(CalliopeNode_IsSupportViewType) == 0x000002, "Wrong size on CalliopeNode_IsSupportViewType");
//static_assert(offsetof(CalliopeNode_IsSupportViewType, InViewType) == 0x000000, "Member 'CalliopeNode_IsSupportViewType::InViewType' has a wrong offset!");
//static_assert(offsetof(CalliopeNode_IsSupportViewType, ReturnValue) == 0x000001, "Member 'CalliopeNode_IsSupportViewType::ReturnValue' has a wrong offset!");

// Function Calliope.CalliopeNode.SetSubGraphAssetInPIE
// 0x0008 (0x0008 - 0x0000)
struct CalliopeNode_SetSubGraphAssetInPIE final
{
public:
	class UCalliopeAsset*                         InSubGraphAsset;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(CalliopeNode_SetSubGraphAssetInPIE) == 0x000008, "Wrong alignment on CalliopeNode_SetSubGraphAssetInPIE");
//static_assert(sizeof(CalliopeNode_SetSubGraphAssetInPIE) == 0x000008, "Wrong size on CalliopeNode_SetSubGraphAssetInPIE");
//static_assert(offsetof(CalliopeNode_SetSubGraphAssetInPIE, InSubGraphAsset) == 0x000000, "Member 'CalliopeNode_SetSubGraphAssetInPIE::InSubGraphAsset' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeSectionData.GetCalliopePlayer
// 0x0008 (0x0008 - 0x0000)
struct MovieSceneCalliopeSectionData_GetCalliopePlayer final
{
public:
	class UCalliopeLevelSequencePlayer*           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(MovieSceneCalliopeSectionData_GetCalliopePlayer) == 0x000008, "Wrong alignment on MovieSceneCalliopeSectionData_GetCalliopePlayer");
//static_assert(sizeof(MovieSceneCalliopeSectionData_GetCalliopePlayer) == 0x000008, "Wrong size on MovieSceneCalliopeSectionData_GetCalliopePlayer");
//static_assert(offsetof(MovieSceneCalliopeSectionData_GetCalliopePlayer, ReturnValue) == 0x000000, "Member 'MovieSceneCalliopeSectionData_GetCalliopePlayer::ReturnValue' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeSectionData.GetPlaybackContext
// 0x0008 (0x0008 - 0x0000)
struct MovieSceneCalliopeSectionData_GetPlaybackContext final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(MovieSceneCalliopeSectionData_GetPlaybackContext) == 0x000008, "Wrong alignment on MovieSceneCalliopeSectionData_GetPlaybackContext");
//static_assert(sizeof(MovieSceneCalliopeSectionData_GetPlaybackContext) == 0x000008, "Wrong size on MovieSceneCalliopeSectionData_GetPlaybackContext");
//static_assert(offsetof(MovieSceneCalliopeSectionData_GetPlaybackContext, ReturnValue) == 0x000000, "Member 'MovieSceneCalliopeSectionData_GetPlaybackContext::ReturnValue' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeSectionData.GetObjectBindingID
// 0x0010 (0x0010 - 0x0000)
struct MovieSceneCalliopeSectionData_GetObjectBindingID final
{
public:
	struct FCalliopeGuid                          ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(MovieSceneCalliopeSectionData_GetObjectBindingID) == 0x000004, "Wrong alignment on MovieSceneCalliopeSectionData_GetObjectBindingID");
//static_assert(sizeof(MovieSceneCalliopeSectionData_GetObjectBindingID) == 0x000010, "Wrong size on MovieSceneCalliopeSectionData_GetObjectBindingID");
//static_assert(offsetof(MovieSceneCalliopeSectionData_GetObjectBindingID, ReturnValue) == 0x000000, "Member 'MovieSceneCalliopeSectionData_GetObjectBindingID::ReturnValue' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeSectionData.GetSequenceID
// 0x0004 (0x0004 - 0x0000)
struct MovieSceneCalliopeSectionData_GetSequenceID final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(MovieSceneCalliopeSectionData_GetSequenceID) == 0x000004, "Wrong alignment on MovieSceneCalliopeSectionData_GetSequenceID");
//static_assert(sizeof(MovieSceneCalliopeSectionData_GetSequenceID) == 0x000004, "Wrong size on MovieSceneCalliopeSectionData_GetSequenceID");
//static_assert(offsetof(MovieSceneCalliopeSectionData_GetSequenceID, ReturnValue) == 0x000000, "Member 'MovieSceneCalliopeSectionData_GetSequenceID::ReturnValue' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeSectionData.GetStatus
// 0x0001 (0x0001 - 0x0000)
struct MovieSceneCalliopeSectionData_GetStatus final
{
public:
	EMovieScenePlayerStatus                       ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(MovieSceneCalliopeSectionData_GetStatus) == 0x000001, "Wrong alignment on MovieSceneCalliopeSectionData_GetStatus");
//static_assert(sizeof(MovieSceneCalliopeSectionData_GetStatus) == 0x000001, "Wrong size on MovieSceneCalliopeSectionData_GetStatus");
//static_assert(offsetof(MovieSceneCalliopeSectionData_GetStatus, ReturnValue) == 0x000000, "Member 'MovieSceneCalliopeSectionData_GetStatus::ReturnValue' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeSectionData.GetTimeInSeconds
// 0x0004 (0x0004 - 0x0000)
struct MovieSceneCalliopeSectionData_GetTimeInSeconds final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(MovieSceneCalliopeSectionData_GetTimeInSeconds) == 0x000004, "Wrong alignment on MovieSceneCalliopeSectionData_GetTimeInSeconds");
//static_assert(sizeof(MovieSceneCalliopeSectionData_GetTimeInSeconds) == 0x000004, "Wrong size on MovieSceneCalliopeSectionData_GetTimeInSeconds");
//static_assert(offsetof(MovieSceneCalliopeSectionData_GetTimeInSeconds, ReturnValue) == 0x000000, "Member 'MovieSceneCalliopeSectionData_GetTimeInSeconds::ReturnValue' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeSectionData.HasJumped
// 0x0001 (0x0001 - 0x0000)
struct MovieSceneCalliopeSectionData_HasJumped final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(MovieSceneCalliopeSectionData_HasJumped) == 0x000001, "Wrong alignment on MovieSceneCalliopeSectionData_HasJumped");
//static_assert(sizeof(MovieSceneCalliopeSectionData_HasJumped) == 0x000001, "Wrong size on MovieSceneCalliopeSectionData_HasJumped");
//static_assert(offsetof(MovieSceneCalliopeSectionData_HasJumped, ReturnValue) == 0x000000, "Member 'MovieSceneCalliopeSectionData_HasJumped::ReturnValue' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeSectionData.IsForwardPlay
// 0x0001 (0x0001 - 0x0000)
struct MovieSceneCalliopeSectionData_IsForwardPlay final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(MovieSceneCalliopeSectionData_IsForwardPlay) == 0x000001, "Wrong alignment on MovieSceneCalliopeSectionData_IsForwardPlay");
//static_assert(sizeof(MovieSceneCalliopeSectionData_IsForwardPlay) == 0x000001, "Wrong size on MovieSceneCalliopeSectionData_IsForwardPlay");
//static_assert(offsetof(MovieSceneCalliopeSectionData_IsForwardPlay, ReturnValue) == 0x000000, "Member 'MovieSceneCalliopeSectionData_IsForwardPlay::ReturnValue' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeSectionData.IsOperandValid
// 0x0001 (0x0001 - 0x0000)
struct MovieSceneCalliopeSectionData_IsOperandValid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(MovieSceneCalliopeSectionData_IsOperandValid) == 0x000001, "Wrong alignment on MovieSceneCalliopeSectionData_IsOperandValid");
//static_assert(sizeof(MovieSceneCalliopeSectionData_IsOperandValid) == 0x000001, "Wrong size on MovieSceneCalliopeSectionData_IsOperandValid");
//static_assert(offsetof(MovieSceneCalliopeSectionData_IsOperandValid, ReturnValue) == 0x000000, "Member 'MovieSceneCalliopeSectionData_IsOperandValid::ReturnValue' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeSectionData.IsSilent
// 0x0001 (0x0001 - 0x0000)
struct MovieSceneCalliopeSectionData_IsSilent final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(MovieSceneCalliopeSectionData_IsSilent) == 0x000001, "Wrong alignment on MovieSceneCalliopeSectionData_IsSilent");
//static_assert(sizeof(MovieSceneCalliopeSectionData_IsSilent) == 0x000001, "Wrong size on MovieSceneCalliopeSectionData_IsSilent");
//static_assert(offsetof(MovieSceneCalliopeSectionData_IsSilent, ReturnValue) == 0x000000, "Member 'MovieSceneCalliopeSectionData_IsSilent::ReturnValue' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeSectionBase.GetDisplayName
// 0x0010 (0x0010 - 0x0000)
struct MovieSceneCalliopeSectionBase_GetDisplayName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(MovieSceneCalliopeSectionBase_GetDisplayName) == 0x000008, "Wrong alignment on MovieSceneCalliopeSectionBase_GetDisplayName");
//static_assert(sizeof(MovieSceneCalliopeSectionBase_GetDisplayName) == 0x000010, "Wrong size on MovieSceneCalliopeSectionBase_GetDisplayName");
//static_assert(offsetof(MovieSceneCalliopeSectionBase_GetDisplayName, ReturnValue) == 0x000000, "Member 'MovieSceneCalliopeSectionBase_GetDisplayName::ReturnValue' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeNormalSection.Evaluate
// 0x0008 (0x0008 - 0x0000)
struct MovieSceneCalliopeNormalSection_Evaluate final
{
public:
	class UMovieSceneCalliopeSectionData*         InSectionData;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(MovieSceneCalliopeNormalSection_Evaluate) == 0x000008, "Wrong alignment on MovieSceneCalliopeNormalSection_Evaluate");
//static_assert(sizeof(MovieSceneCalliopeNormalSection_Evaluate) == 0x000008, "Wrong size on MovieSceneCalliopeNormalSection_Evaluate");
//static_assert(offsetof(MovieSceneCalliopeNormalSection_Evaluate, InSectionData) == 0x000000, "Member 'MovieSceneCalliopeNormalSection_Evaluate::InSectionData' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeNormalSection.GetDurationTime
// 0x0004 (0x0004 - 0x0000)
struct MovieSceneCalliopeNormalSection_GetDurationTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(MovieSceneCalliopeNormalSection_GetDurationTime) == 0x000004, "Wrong alignment on MovieSceneCalliopeNormalSection_GetDurationTime");
//static_assert(sizeof(MovieSceneCalliopeNormalSection_GetDurationTime) == 0x000004, "Wrong size on MovieSceneCalliopeNormalSection_GetDurationTime");
//static_assert(offsetof(MovieSceneCalliopeNormalSection_GetDurationTime, ReturnValue) == 0x000000, "Member 'MovieSceneCalliopeNormalSection_GetDurationTime::ReturnValue' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeNormalSection.GetEndTime
// 0x0004 (0x0004 - 0x0000)
struct MovieSceneCalliopeNormalSection_GetEndTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(MovieSceneCalliopeNormalSection_GetEndTime) == 0x000004, "Wrong alignment on MovieSceneCalliopeNormalSection_GetEndTime");
//static_assert(sizeof(MovieSceneCalliopeNormalSection_GetEndTime) == 0x000004, "Wrong size on MovieSceneCalliopeNormalSection_GetEndTime");
//static_assert(offsetof(MovieSceneCalliopeNormalSection_GetEndTime, ReturnValue) == 0x000000, "Member 'MovieSceneCalliopeNormalSection_GetEndTime::ReturnValue' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeNormalSection.GetMovieMaxDuration
// 0x0004 (0x0004 - 0x0000)
struct MovieSceneCalliopeNormalSection_GetMovieMaxDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(MovieSceneCalliopeNormalSection_GetMovieMaxDuration) == 0x000004, "Wrong alignment on MovieSceneCalliopeNormalSection_GetMovieMaxDuration");
//static_assert(sizeof(MovieSceneCalliopeNormalSection_GetMovieMaxDuration) == 0x000004, "Wrong size on MovieSceneCalliopeNormalSection_GetMovieMaxDuration");
//static_assert(offsetof(MovieSceneCalliopeNormalSection_GetMovieMaxDuration, ReturnValue) == 0x000000, "Member 'MovieSceneCalliopeNormalSection_GetMovieMaxDuration::ReturnValue' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeNormalSection.GetStartTime
// 0x0004 (0x0004 - 0x0000)
struct MovieSceneCalliopeNormalSection_GetStartTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(MovieSceneCalliopeNormalSection_GetStartTime) == 0x000004, "Wrong alignment on MovieSceneCalliopeNormalSection_GetStartTime");
//static_assert(sizeof(MovieSceneCalliopeNormalSection_GetStartTime) == 0x000004, "Wrong size on MovieSceneCalliopeNormalSection_GetStartTime");
//static_assert(offsetof(MovieSceneCalliopeNormalSection_GetStartTime, ReturnValue) == 0x000000, "Member 'MovieSceneCalliopeNormalSection_GetStartTime::ReturnValue' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeNormalSection.MakeSectionData
// 0x0008 (0x0008 - 0x0000)
struct MovieSceneCalliopeNormalSection_MakeSectionData final
{
public:
	class UMovieSceneCalliopeSectionData*         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(MovieSceneCalliopeNormalSection_MakeSectionData) == 0x000008, "Wrong alignment on MovieSceneCalliopeNormalSection_MakeSectionData");
//static_assert(sizeof(MovieSceneCalliopeNormalSection_MakeSectionData) == 0x000008, "Wrong size on MovieSceneCalliopeNormalSection_MakeSectionData");
//static_assert(offsetof(MovieSceneCalliopeNormalSection_MakeSectionData, ReturnValue) == 0x000000, "Member 'MovieSceneCalliopeNormalSection_MakeSectionData::ReturnValue' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeNormalSection.SectionBeingDestroyed
// 0x0008 (0x0008 - 0x0000)
struct MovieSceneCalliopeNormalSection_SectionBeingDestroyed final
{
public:
	class UMovieSceneCalliopeSectionData*         InSectionData;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(MovieSceneCalliopeNormalSection_SectionBeingDestroyed) == 0x000008, "Wrong alignment on MovieSceneCalliopeNormalSection_SectionBeingDestroyed");
//static_assert(sizeof(MovieSceneCalliopeNormalSection_SectionBeingDestroyed) == 0x000008, "Wrong size on MovieSceneCalliopeNormalSection_SectionBeingDestroyed");
//static_assert(offsetof(MovieSceneCalliopeNormalSection_SectionBeingDestroyed, InSectionData) == 0x000000, "Member 'MovieSceneCalliopeNormalSection_SectionBeingDestroyed::InSectionData' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeNotifySection.GetDurationTime
// 0x0004 (0x0004 - 0x0000)
struct MovieSceneCalliopeNotifySection_GetDurationTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(MovieSceneCalliopeNotifySection_GetDurationTime) == 0x000004, "Wrong alignment on MovieSceneCalliopeNotifySection_GetDurationTime");
//static_assert(sizeof(MovieSceneCalliopeNotifySection_GetDurationTime) == 0x000004, "Wrong size on MovieSceneCalliopeNotifySection_GetDurationTime");
//static_assert(offsetof(MovieSceneCalliopeNotifySection_GetDurationTime, ReturnValue) == 0x000000, "Member 'MovieSceneCalliopeNotifySection_GetDurationTime::ReturnValue' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeNotifySection.OnNotify
// 0x0010 (0x0010 - 0x0000)
struct MovieSceneCalliopeNotifySection_OnNotify final
{
public:
	class UCalliopeLevelSequencePlayer*           Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InStatus;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInBackwards;                                      // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(MovieSceneCalliopeNotifySection_OnNotify) == 0x000008, "Wrong alignment on MovieSceneCalliopeNotifySection_OnNotify");
//static_assert(sizeof(MovieSceneCalliopeNotifySection_OnNotify) == 0x000010, "Wrong size on MovieSceneCalliopeNotifySection_OnNotify");
//static_assert(offsetof(MovieSceneCalliopeNotifySection_OnNotify, Player) == 0x000000, "Member 'MovieSceneCalliopeNotifySection_OnNotify::Player' has a wrong offset!");
//static_assert(offsetof(MovieSceneCalliopeNotifySection_OnNotify, InStatus) == 0x000008, "Member 'MovieSceneCalliopeNotifySection_OnNotify::InStatus' has a wrong offset!");
//static_assert(offsetof(MovieSceneCalliopeNotifySection_OnNotify, bInBackwards) == 0x00000C, "Member 'MovieSceneCalliopeNotifySection_OnNotify::bInBackwards' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeNotifySection.OnPreviewNotify
// 0x0010 (0x0010 - 0x0000)
struct MovieSceneCalliopeNotifySection_OnPreviewNotify final
{
public:
	class UObject*                                InPlaybackContext;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InStatus;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInBackwards;                                      // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(MovieSceneCalliopeNotifySection_OnPreviewNotify) == 0x000008, "Wrong alignment on MovieSceneCalliopeNotifySection_OnPreviewNotify");
//static_assert(sizeof(MovieSceneCalliopeNotifySection_OnPreviewNotify) == 0x000010, "Wrong size on MovieSceneCalliopeNotifySection_OnPreviewNotify");
//static_assert(offsetof(MovieSceneCalliopeNotifySection_OnPreviewNotify, InPlaybackContext) == 0x000000, "Member 'MovieSceneCalliopeNotifySection_OnPreviewNotify::InPlaybackContext' has a wrong offset!");
//static_assert(offsetof(MovieSceneCalliopeNotifySection_OnPreviewNotify, InStatus) == 0x000008, "Member 'MovieSceneCalliopeNotifySection_OnPreviewNotify::InStatus' has a wrong offset!");
//static_assert(offsetof(MovieSceneCalliopeNotifySection_OnPreviewNotify, bInBackwards) == 0x00000C, "Member 'MovieSceneCalliopeNotifySection_OnPreviewNotify::bInBackwards' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeNotifyStateSection.GetDurationTime
// 0x0004 (0x0004 - 0x0000)
struct MovieSceneCalliopeNotifyStateSection_GetDurationTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(MovieSceneCalliopeNotifyStateSection_GetDurationTime) == 0x000004, "Wrong alignment on MovieSceneCalliopeNotifyStateSection_GetDurationTime");
//static_assert(sizeof(MovieSceneCalliopeNotifyStateSection_GetDurationTime) == 0x000004, "Wrong size on MovieSceneCalliopeNotifyStateSection_GetDurationTime");
//static_assert(offsetof(MovieSceneCalliopeNotifyStateSection_GetDurationTime, ReturnValue) == 0x000000, "Member 'MovieSceneCalliopeNotifyStateSection_GetDurationTime::ReturnValue' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeNotifyStateSection.OnNotifyBegin
// 0x0010 (0x0010 - 0x0000)
struct MovieSceneCalliopeNotifyStateSection_OnNotifyBegin final
{
public:
	class UCalliopeLevelSequencePlayer*           Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InStatus;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInBackwards;                                      // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(MovieSceneCalliopeNotifyStateSection_OnNotifyBegin) == 0x000008, "Wrong alignment on MovieSceneCalliopeNotifyStateSection_OnNotifyBegin");
//static_assert(sizeof(MovieSceneCalliopeNotifyStateSection_OnNotifyBegin) == 0x000010, "Wrong size on MovieSceneCalliopeNotifyStateSection_OnNotifyBegin");
//static_assert(offsetof(MovieSceneCalliopeNotifyStateSection_OnNotifyBegin, Player) == 0x000000, "Member 'MovieSceneCalliopeNotifyStateSection_OnNotifyBegin::Player' has a wrong offset!");
//static_assert(offsetof(MovieSceneCalliopeNotifyStateSection_OnNotifyBegin, InStatus) == 0x000008, "Member 'MovieSceneCalliopeNotifyStateSection_OnNotifyBegin::InStatus' has a wrong offset!");
//static_assert(offsetof(MovieSceneCalliopeNotifyStateSection_OnNotifyBegin, bInBackwards) == 0x00000C, "Member 'MovieSceneCalliopeNotifyStateSection_OnNotifyBegin::bInBackwards' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeNotifyStateSection.OnNotifyEnd
// 0x0010 (0x0010 - 0x0000)
struct MovieSceneCalliopeNotifyStateSection_OnNotifyEnd final
{
public:
	class UCalliopeLevelSequencePlayer*           Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InStatus;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInBackwards;                                      // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(MovieSceneCalliopeNotifyStateSection_OnNotifyEnd) == 0x000008, "Wrong alignment on MovieSceneCalliopeNotifyStateSection_OnNotifyEnd");
//static_assert(sizeof(MovieSceneCalliopeNotifyStateSection_OnNotifyEnd) == 0x000010, "Wrong size on MovieSceneCalliopeNotifyStateSection_OnNotifyEnd");
//static_assert(offsetof(MovieSceneCalliopeNotifyStateSection_OnNotifyEnd, Player) == 0x000000, "Member 'MovieSceneCalliopeNotifyStateSection_OnNotifyEnd::Player' has a wrong offset!");
//static_assert(offsetof(MovieSceneCalliopeNotifyStateSection_OnNotifyEnd, InStatus) == 0x000008, "Member 'MovieSceneCalliopeNotifyStateSection_OnNotifyEnd::InStatus' has a wrong offset!");
//static_assert(offsetof(MovieSceneCalliopeNotifyStateSection_OnNotifyEnd, bInBackwards) == 0x00000C, "Member 'MovieSceneCalliopeNotifyStateSection_OnNotifyEnd::bInBackwards' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeNotifyStateSection.OnNotifyTick
// 0x0010 (0x0010 - 0x0000)
struct MovieSceneCalliopeNotifyStateSection_OnNotifyTick final
{
public:
	class UCalliopeLevelSequencePlayer*           Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InStatus;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInBackwards;                                      // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(MovieSceneCalliopeNotifyStateSection_OnNotifyTick) == 0x000008, "Wrong alignment on MovieSceneCalliopeNotifyStateSection_OnNotifyTick");
//static_assert(sizeof(MovieSceneCalliopeNotifyStateSection_OnNotifyTick) == 0x000010, "Wrong size on MovieSceneCalliopeNotifyStateSection_OnNotifyTick");
//static_assert(offsetof(MovieSceneCalliopeNotifyStateSection_OnNotifyTick, Player) == 0x000000, "Member 'MovieSceneCalliopeNotifyStateSection_OnNotifyTick::Player' has a wrong offset!");
//static_assert(offsetof(MovieSceneCalliopeNotifyStateSection_OnNotifyTick, InStatus) == 0x000008, "Member 'MovieSceneCalliopeNotifyStateSection_OnNotifyTick::InStatus' has a wrong offset!");
//static_assert(offsetof(MovieSceneCalliopeNotifyStateSection_OnNotifyTick, bInBackwards) == 0x00000C, "Member 'MovieSceneCalliopeNotifyStateSection_OnNotifyTick::bInBackwards' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeNotifyStateSection.OnPreviewNotifyBegin
// 0x0010 (0x0010 - 0x0000)
struct MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyBegin final
{
public:
	class UObject*                                InPlaybackContext;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InStatus;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInBackwards;                                      // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyBegin) == 0x000008, "Wrong alignment on MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyBegin");
//static_assert(sizeof(MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyBegin) == 0x000010, "Wrong size on MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyBegin");
//static_assert(offsetof(MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyBegin, InPlaybackContext) == 0x000000, "Member 'MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyBegin::InPlaybackContext' has a wrong offset!");
//static_assert(offsetof(MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyBegin, InStatus) == 0x000008, "Member 'MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyBegin::InStatus' has a wrong offset!");
//static_assert(offsetof(MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyBegin, bInBackwards) == 0x00000C, "Member 'MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyBegin::bInBackwards' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeNotifyStateSection.OnPreviewNotifyEnd
// 0x0010 (0x0010 - 0x0000)
struct MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyEnd final
{
public:
	class UObject*                                InPlaybackContext;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InStatus;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInBackwards;                                      // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyEnd) == 0x000008, "Wrong alignment on MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyEnd");
//static_assert(sizeof(MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyEnd) == 0x000010, "Wrong size on MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyEnd");
//static_assert(offsetof(MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyEnd, InPlaybackContext) == 0x000000, "Member 'MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyEnd::InPlaybackContext' has a wrong offset!");
//static_assert(offsetof(MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyEnd, InStatus) == 0x000008, "Member 'MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyEnd::InStatus' has a wrong offset!");
//static_assert(offsetof(MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyEnd, bInBackwards) == 0x00000C, "Member 'MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyEnd::bInBackwards' has a wrong offset!");

// Function Calliope.MovieSceneCalliopeNotifyStateSection.OnPreviewNotifyTick
// 0x0010 (0x0010 - 0x0000)
struct MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyTick final
{
public:
	class UObject*                                InPlaybackContext;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InStatus;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInBackwards;                                      // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyTick) == 0x000008, "Wrong alignment on MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyTick");
//static_assert(sizeof(MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyTick) == 0x000010, "Wrong size on MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyTick");
//static_assert(offsetof(MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyTick, InPlaybackContext) == 0x000000, "Member 'MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyTick::InPlaybackContext' has a wrong offset!");
//static_assert(offsetof(MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyTick, InStatus) == 0x000008, "Member 'MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyTick::InStatus' has a wrong offset!");
//static_assert(offsetof(MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyTick, bInBackwards) == 0x00000C, "Member 'MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyTick::bInBackwards' has a wrong offset!");

}

