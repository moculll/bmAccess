#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GSUMGExt

#include "Basic.hpp"


namespace SDK::Params
{

// DelegateFunction GSUMGExt.GSSearchBox.OnSearchTextChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct GSSearchBox_OnSearchTextChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(GSSearchBox_OnSearchTextChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on GSSearchBox_OnSearchTextChangedEvent__DelegateSignature");
//static_assert(sizeof(GSSearchBox_OnSearchTextChangedEvent__DelegateSignature) == 0x000018, "Wrong size on GSSearchBox_OnSearchTextChangedEvent__DelegateSignature");
//static_assert(offsetof(GSSearchBox_OnSearchTextChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'GSSearchBox_OnSearchTextChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function GSUMGExt.GSSearchBox.GetText
// 0x0018 (0x0018 - 0x0000)
struct GSSearchBox_GetText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(GSSearchBox_GetText) == 0x000008, "Wrong alignment on GSSearchBox_GetText");
//static_assert(sizeof(GSSearchBox_GetText) == 0x000018, "Wrong size on GSSearchBox_GetText");
//static_assert(offsetof(GSSearchBox_GetText, ReturnValue) == 0x000000, "Member 'GSSearchBox_GetText::ReturnValue' has a wrong offset!");

// Function GSUMGExt.GSSplitterBoxSlot.SetSize
// 0x0004 (0x0004 - 0x0000)
struct GSSplitterBoxSlot_SetSize final
{
public:
	float                                         InSize;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(GSSplitterBoxSlot_SetSize) == 0x000004, "Wrong alignment on GSSplitterBoxSlot_SetSize");
//static_assert(sizeof(GSSplitterBoxSlot_SetSize) == 0x000004, "Wrong size on GSSplitterBoxSlot_SetSize");
//static_assert(offsetof(GSSplitterBoxSlot_SetSize, InSize) == 0x000000, "Member 'GSSplitterBoxSlot_SetSize::InSize' has a wrong offset!");

// Function GSUMGExt.GSSplitterBox.AddChildToSplitterBox
// 0x0010 (0x0010 - 0x0000)
struct GSSplitterBox_AddChildToSplitterBox final
{
public:
	class UWidget*                                Content;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGSSplitterBoxSlot*                     ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(GSSplitterBox_AddChildToSplitterBox) == 0x000008, "Wrong alignment on GSSplitterBox_AddChildToSplitterBox");
//static_assert(sizeof(GSSplitterBox_AddChildToSplitterBox) == 0x000010, "Wrong size on GSSplitterBox_AddChildToSplitterBox");
//static_assert(offsetof(GSSplitterBox_AddChildToSplitterBox, Content) == 0x000000, "Member 'GSSplitterBox_AddChildToSplitterBox::Content' has a wrong offset!");
//static_assert(offsetof(GSSplitterBox_AddChildToSplitterBox, ReturnValue) == 0x000008, "Member 'GSSplitterBox_AddChildToSplitterBox::ReturnValue' has a wrong offset!");

}

