#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GSUMGExt

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// ScriptStruct GSUMGExt.GSRichZhuYinRow
// 0x0708 (0x0710 - 0x0008)
struct FGSRichZhuYinRow final : public FTableRowBase
{
public:
	bool                                          bOverrideMainTextStyle;                            // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTextBlockStyle                        MainTextStyle;                                     // 0x0010(0x0370)(Edit, NativeAccessSpecifierPublic)
	struct FMargin                                ZhuYinMargin;                                      // 0x0380(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                        ZhuYinTextStyle;                                   // 0x0390(0x0370)(Edit, NativeAccessSpecifierPublic)
	float                                         ZhuYinTextHeightScale;                             // 0x0700(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ZhuYinTextHeightPadding;                           // 0x0704(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_708[0x8];                                      // 0x0708(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(FGSRichZhuYinRow) == 0x000010, "Wrong alignment on FGSRichZhuYinRow");
//static_assert(sizeof(FGSRichZhuYinRow) == 0x000710, "Wrong size on FGSRichZhuYinRow");
//static_assert(offsetof(FGSRichZhuYinRow, bOverrideMainTextStyle) == 0x000008, "Member 'FGSRichZhuYinRow::bOverrideMainTextStyle' has a wrong offset!");
//static_assert(offsetof(FGSRichZhuYinRow, MainTextStyle) == 0x000010, "Member 'FGSRichZhuYinRow::MainTextStyle' has a wrong offset!");
//static_assert(offsetof(FGSRichZhuYinRow, ZhuYinMargin) == 0x000380, "Member 'FGSRichZhuYinRow::ZhuYinMargin' has a wrong offset!");
//static_assert(offsetof(FGSRichZhuYinRow, ZhuYinTextStyle) == 0x000390, "Member 'FGSRichZhuYinRow::ZhuYinTextStyle' has a wrong offset!");
//static_assert(offsetof(FGSRichZhuYinRow, ZhuYinTextHeightScale) == 0x000700, "Member 'FGSRichZhuYinRow::ZhuYinTextHeightScale' has a wrong offset!");
//static_assert(offsetof(FGSRichZhuYinRow, ZhuYinTextHeightPadding) == 0x000704, "Member 'FGSRichZhuYinRow::ZhuYinTextHeightPadding' has a wrong offset!");

// ScriptStruct GSUMGExt.TestTmp
// 0x0008 (0x0008 - 0x0000)
struct FTestTmp final
{
public:
	class UGCTestA*                               TestA;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(FTestTmp) == 0x000008, "Wrong alignment on FTestTmp");
//static_assert(sizeof(FTestTmp) == 0x000008, "Wrong size on FTestTmp");
//static_assert(offsetof(FTestTmp, TestA) == 0x000000, "Member 'FTestTmp::TestA' has a wrong offset!");

}

