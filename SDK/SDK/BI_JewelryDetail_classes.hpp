#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_JewelryDetail

#include "Basic.hpp"

#include "b1MinusManaged_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BI_JewelryDetail.BI_JewelryDetail_C
// 0x0058 (0x0430 - 0x03D8)
class UBI_JewelryDetail_C final : public UBUI_Widget
{
public:
	class UWidgetAnimation*                       AnimRefreshDetail;                                 // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAKBActionBlock;                                  // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus; // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAKBDetailState;                                  // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAKBShowHide;                                     // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UGSImage*                               ImgLine;                                           // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImgMarker;                                         // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGSImage*                               ImgNameBar;                                        // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGSRichScaleText*                       TxtEffectDesc;                                     // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TxtEquipping;                                      // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGSRichScaleText*                       TxtNameRuby;                                       // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BI_JewelryDetail_C">();
	}
	static class UBI_JewelryDetail_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBI_JewelryDetail_C>();
	}
};
//static_assert(alignof(UBI_JewelryDetail_C) == 0x000008, "Wrong alignment on UBI_JewelryDetail_C");
//static_assert(sizeof(UBI_JewelryDetail_C) == 0x000430, "Wrong size on UBI_JewelryDetail_C");
//static_assert(offsetof(UBI_JewelryDetail_C, AnimRefreshDetail) == 0x0003D8, "Member 'UBI_JewelryDetail_C::AnimRefreshDetail' has a wrong offset!");
//static_assert(offsetof(UBI_JewelryDetail_C, GSAKBActionBlock) == 0x0003E0, "Member 'UBI_JewelryDetail_C::GSAKBActionBlock' has a wrong offset!");
//static_assert(offsetof(UBI_JewelryDetail_C, MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus) == 0x0003E8, "Member 'UBI_JewelryDetail_C::MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus' has a wrong offset!");
//static_assert(offsetof(UBI_JewelryDetail_C, GSAKBDetailState) == 0x0003F0, "Member 'UBI_JewelryDetail_C::GSAKBDetailState' has a wrong offset!");
//static_assert(offsetof(UBI_JewelryDetail_C, GSAKBShowHide) == 0x0003F8, "Member 'UBI_JewelryDetail_C::GSAKBShowHide' has a wrong offset!");
//static_assert(offsetof(UBI_JewelryDetail_C, ImgLine) == 0x000400, "Member 'UBI_JewelryDetail_C::ImgLine' has a wrong offset!");
//static_assert(offsetof(UBI_JewelryDetail_C, ImgMarker) == 0x000408, "Member 'UBI_JewelryDetail_C::ImgMarker' has a wrong offset!");
//static_assert(offsetof(UBI_JewelryDetail_C, ImgNameBar) == 0x000410, "Member 'UBI_JewelryDetail_C::ImgNameBar' has a wrong offset!");
//static_assert(offsetof(UBI_JewelryDetail_C, TxtEffectDesc) == 0x000418, "Member 'UBI_JewelryDetail_C::TxtEffectDesc' has a wrong offset!");
//static_assert(offsetof(UBI_JewelryDetail_C, TxtEquipping) == 0x000420, "Member 'UBI_JewelryDetail_C::TxtEquipping' has a wrong offset!");
//static_assert(offsetof(UBI_JewelryDetail_C, TxtNameRuby) == 0x000428, "Member 'UBI_JewelryDetail_C::TxtNameRuby' has a wrong offset!");

}

