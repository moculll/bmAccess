#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimationWarpingRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// ScriptStruct AnimationWarpingRuntime.AnimNode_OrientationWarping
// 0x0098 (0x0160 - 0x00C8)
struct FAnimNode_OrientationWarping final : public FAnimNode_SkeletalControlBase
{
public:
	EWarpingEvaluationMode                        Mode;                                              // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OrientationAngle;                                  // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LocomotionAngle;                                   // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LocomotionAngleDeltaThreshold;                     // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBoneReference>                 SpineBones;                                        // 0x00D8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         IKFootRootBone;                                    // 0x00E8(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FBoneReference>                 IKFootBones;                                       // 0x00F8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	EAxis                                         RotationAxis;                                      // 0x0108(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DistributedBoneOrientationAlpha;                   // 0x010C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RotationInterpSpeed;                               // 0x0110(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_114[0x4C];                                     // 0x0114(0x004C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(FAnimNode_OrientationWarping) == 0x000008, "Wrong alignment on FAnimNode_OrientationWarping");
//static_assert(sizeof(FAnimNode_OrientationWarping) == 0x000160, "Wrong size on FAnimNode_OrientationWarping");
//static_assert(offsetof(FAnimNode_OrientationWarping, Mode) == 0x0000C8, "Member 'FAnimNode_OrientationWarping::Mode' has a wrong offset!");
//static_assert(offsetof(FAnimNode_OrientationWarping, OrientationAngle) == 0x0000CC, "Member 'FAnimNode_OrientationWarping::OrientationAngle' has a wrong offset!");
//static_assert(offsetof(FAnimNode_OrientationWarping, LocomotionAngle) == 0x0000D0, "Member 'FAnimNode_OrientationWarping::LocomotionAngle' has a wrong offset!");
//static_assert(offsetof(FAnimNode_OrientationWarping, LocomotionAngleDeltaThreshold) == 0x0000D4, "Member 'FAnimNode_OrientationWarping::LocomotionAngleDeltaThreshold' has a wrong offset!");
//static_assert(offsetof(FAnimNode_OrientationWarping, SpineBones) == 0x0000D8, "Member 'FAnimNode_OrientationWarping::SpineBones' has a wrong offset!");
//static_assert(offsetof(FAnimNode_OrientationWarping, IKFootRootBone) == 0x0000E8, "Member 'FAnimNode_OrientationWarping::IKFootRootBone' has a wrong offset!");
//static_assert(offsetof(FAnimNode_OrientationWarping, IKFootBones) == 0x0000F8, "Member 'FAnimNode_OrientationWarping::IKFootBones' has a wrong offset!");
//static_assert(offsetof(FAnimNode_OrientationWarping, RotationAxis) == 0x000108, "Member 'FAnimNode_OrientationWarping::RotationAxis' has a wrong offset!");
//static_assert(offsetof(FAnimNode_OrientationWarping, DistributedBoneOrientationAlpha) == 0x00010C, "Member 'FAnimNode_OrientationWarping::DistributedBoneOrientationAlpha' has a wrong offset!");
//static_assert(offsetof(FAnimNode_OrientationWarping, RotationInterpSpeed) == 0x000110, "Member 'FAnimNode_OrientationWarping::RotationInterpSpeed' has a wrong offset!");

// ScriptStruct AnimationWarpingRuntime.SlopeWarpingFootDefinition
// 0x0028 (0x0028 - 0x0000)
struct FSlopeWarpingFootDefinition final
{
public:
	struct FBoneReference                         IKFootBone;                                        // 0x0000(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         FKFootBone;                                        // 0x0010(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         NumBonesInLimb;                                    // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootSize;                                          // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(FSlopeWarpingFootDefinition) == 0x000004, "Wrong alignment on FSlopeWarpingFootDefinition");
//static_assert(sizeof(FSlopeWarpingFootDefinition) == 0x000028, "Wrong size on FSlopeWarpingFootDefinition");
//static_assert(offsetof(FSlopeWarpingFootDefinition, IKFootBone) == 0x000000, "Member 'FSlopeWarpingFootDefinition::IKFootBone' has a wrong offset!");
//static_assert(offsetof(FSlopeWarpingFootDefinition, FKFootBone) == 0x000010, "Member 'FSlopeWarpingFootDefinition::FKFootBone' has a wrong offset!");
//static_assert(offsetof(FSlopeWarpingFootDefinition, NumBonesInLimb) == 0x000020, "Member 'FSlopeWarpingFootDefinition::NumBonesInLimb' has a wrong offset!");
//static_assert(offsetof(FSlopeWarpingFootDefinition, FootSize) == 0x000024, "Member 'FSlopeWarpingFootDefinition::FootSize' has a wrong offset!");

// ScriptStruct AnimationWarpingRuntime.SlopeWarpingFootData
// 0x00B0 (0x00B0 - 0x0000)
struct alignas(0x10) FSlopeWarpingFootData final
{
public:
	uint8                                         Pad_0[0xB0];                                       // 0x0000(0x00B0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(FSlopeWarpingFootData) == 0x000010, "Wrong alignment on FSlopeWarpingFootData");
//static_assert(sizeof(FSlopeWarpingFootData) == 0x0000B0, "Wrong size on FSlopeWarpingFootData");

// ScriptStruct AnimationWarpingRuntime.AnimNode_SlopeWarping
// 0x0218 (0x02E0 - 0x00C8)
struct FAnimNode_SlopeWarping final : public FAnimNode_SkeletalControlBase
{
public:
	uint8                                         Pad_C8[0x18];                                      // 0x00C8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoneReference                         IKFootRootBone;                                    // 0x00E0(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         PelvisBone;                                        // 0x00F0(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FSlopeWarpingFootDefinition>    FeetDefinitions;                                   // 0x0100(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSlopeWarpingFootData>          FeetData;                                          // 0x0110(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FVectorRK4SpringInterpolator           PelvisOffsetInterpolator;                          // 0x0120(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_128[0x58];                                     // 0x0128(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GravityDir;                                        // 0x0180(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CustomFloorOffset;                                 // 0x0198(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CachedDeltaTime;                                   // 0x01B0(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TargetFloorNormalWorldSpace;                       // 0x01B8(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVectorRK4SpringInterpolator           FloorNormalInterpolator;                           // 0x01D0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D8[0x58];                                     // 0x01D8(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TargetFloorOffsetLocalSpace;                       // 0x0230(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVectorRK4SpringInterpolator           FloorOffsetInterpolator;                           // 0x0248(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_250[0x58];                                     // 0x0250(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxStepHeight;                                     // 0x02A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bKeepMeshInsideOfCapsule : 1;                      // 0x02AC(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPullPelvisDown : 1;                               // 0x02AC(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUseCustomFloorOffset : 1;                         // 0x02AC(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bWasOnGround : 1;                                  // 0x02AC(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bShowDebug : 1;                                    // 0x02AC(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bFloorSmoothingInitialized : 1;                    // 0x02AC(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_2AD[0x3];                                      // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ActorLocation;                                     // 0x02B0(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                GravityDirCompSpace;                               // 0x02C8(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
//static_assert(alignof(FAnimNode_SlopeWarping) == 0x000008, "Wrong alignment on FAnimNode_SlopeWarping");
//static_assert(sizeof(FAnimNode_SlopeWarping) == 0x0002E0, "Wrong size on FAnimNode_SlopeWarping");
//static_assert(offsetof(FAnimNode_SlopeWarping, IKFootRootBone) == 0x0000E0, "Member 'FAnimNode_SlopeWarping::IKFootRootBone' has a wrong offset!");
//static_assert(offsetof(FAnimNode_SlopeWarping, PelvisBone) == 0x0000F0, "Member 'FAnimNode_SlopeWarping::PelvisBone' has a wrong offset!");
//static_assert(offsetof(FAnimNode_SlopeWarping, FeetDefinitions) == 0x000100, "Member 'FAnimNode_SlopeWarping::FeetDefinitions' has a wrong offset!");
//static_assert(offsetof(FAnimNode_SlopeWarping, FeetData) == 0x000110, "Member 'FAnimNode_SlopeWarping::FeetData' has a wrong offset!");
//static_assert(offsetof(FAnimNode_SlopeWarping, PelvisOffsetInterpolator) == 0x000120, "Member 'FAnimNode_SlopeWarping::PelvisOffsetInterpolator' has a wrong offset!");
//static_assert(offsetof(FAnimNode_SlopeWarping, GravityDir) == 0x000180, "Member 'FAnimNode_SlopeWarping::GravityDir' has a wrong offset!");
//static_assert(offsetof(FAnimNode_SlopeWarping, CustomFloorOffset) == 0x000198, "Member 'FAnimNode_SlopeWarping::CustomFloorOffset' has a wrong offset!");
//static_assert(offsetof(FAnimNode_SlopeWarping, CachedDeltaTime) == 0x0001B0, "Member 'FAnimNode_SlopeWarping::CachedDeltaTime' has a wrong offset!");
//static_assert(offsetof(FAnimNode_SlopeWarping, TargetFloorNormalWorldSpace) == 0x0001B8, "Member 'FAnimNode_SlopeWarping::TargetFloorNormalWorldSpace' has a wrong offset!");
//static_assert(offsetof(FAnimNode_SlopeWarping, FloorNormalInterpolator) == 0x0001D0, "Member 'FAnimNode_SlopeWarping::FloorNormalInterpolator' has a wrong offset!");
//static_assert(offsetof(FAnimNode_SlopeWarping, TargetFloorOffsetLocalSpace) == 0x000230, "Member 'FAnimNode_SlopeWarping::TargetFloorOffsetLocalSpace' has a wrong offset!");
//static_assert(offsetof(FAnimNode_SlopeWarping, FloorOffsetInterpolator) == 0x000248, "Member 'FAnimNode_SlopeWarping::FloorOffsetInterpolator' has a wrong offset!");
//static_assert(offsetof(FAnimNode_SlopeWarping, MaxStepHeight) == 0x0002A8, "Member 'FAnimNode_SlopeWarping::MaxStepHeight' has a wrong offset!");
//static_assert(offsetof(FAnimNode_SlopeWarping, ActorLocation) == 0x0002B0, "Member 'FAnimNode_SlopeWarping::ActorLocation' has a wrong offset!");
//static_assert(offsetof(FAnimNode_SlopeWarping, GravityDirCompSpace) == 0x0002C8, "Member 'FAnimNode_SlopeWarping::GravityDirCompSpace' has a wrong offset!");

// ScriptStruct AnimationWarpingRuntime.StrideWarpingFootDefinition
// 0x0030 (0x0030 - 0x0000)
struct FStrideWarpingFootDefinition final
{
public:
	struct FBoneReference                         IKFootBone;                                        // 0x0000(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         FKFootBone;                                        // 0x0010(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         ThighBone;                                         // 0x0020(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
//static_assert(alignof(FStrideWarpingFootDefinition) == 0x000004, "Wrong alignment on FStrideWarpingFootDefinition");
//static_assert(sizeof(FStrideWarpingFootDefinition) == 0x000030, "Wrong size on FStrideWarpingFootDefinition");
//static_assert(offsetof(FStrideWarpingFootDefinition, IKFootBone) == 0x000000, "Member 'FStrideWarpingFootDefinition::IKFootBone' has a wrong offset!");
//static_assert(offsetof(FStrideWarpingFootDefinition, FKFootBone) == 0x000010, "Member 'FStrideWarpingFootDefinition::FKFootBone' has a wrong offset!");
//static_assert(offsetof(FStrideWarpingFootDefinition, ThighBone) == 0x000020, "Member 'FStrideWarpingFootDefinition::ThighBone' has a wrong offset!");

// ScriptStruct AnimationWarpingRuntime.AnimNode_StrideWarping
// 0x0170 (0x0238 - 0x00C8)
struct FAnimNode_StrideWarping final : public FAnimNode_SkeletalControlBase
{
public:
	EWarpingEvaluationMode                        Mode;                                              // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                StrideDirection;                                   // 0x00D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StrideScale;                                       // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LocomotionSpeed;                                   // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinLocomotionSpeedThreshold;                       // 0x00F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBoneReference                         PelvisBone;                                        // 0x00F4(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         IKFootRootBone;                                    // 0x0104(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStrideWarpingFootDefinition>   FootDefinitions;                                   // 0x0118(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FInputClampConstants                   StrideScaleModifier;                               // 0x0128(0x0014)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWarpingVectorValue                    FloorNormalDirection;                              // 0x0140(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FWarpingVectorValue                    GravityDirection;                                  // 0x0160(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FIKFootPelvisPullDownSolver            PelvisIKFootSolver;                                // 0x0180(0x0070)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOrientStrideDirectionUsingFloorNormal;            // 0x01F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCompensateIKUsingFKThighRotation;                 // 0x01F1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bClampIKUsingFKLimits;                             // 0x01F2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F3[0x45];                                     // 0x01F3(0x0045)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(FAnimNode_StrideWarping) == 0x000008, "Wrong alignment on FAnimNode_StrideWarping");
//static_assert(sizeof(FAnimNode_StrideWarping) == 0x000238, "Wrong size on FAnimNode_StrideWarping");
//static_assert(offsetof(FAnimNode_StrideWarping, Mode) == 0x0000C8, "Member 'FAnimNode_StrideWarping::Mode' has a wrong offset!");
//static_assert(offsetof(FAnimNode_StrideWarping, StrideDirection) == 0x0000D0, "Member 'FAnimNode_StrideWarping::StrideDirection' has a wrong offset!");
//static_assert(offsetof(FAnimNode_StrideWarping, StrideScale) == 0x0000E8, "Member 'FAnimNode_StrideWarping::StrideScale' has a wrong offset!");
//static_assert(offsetof(FAnimNode_StrideWarping, LocomotionSpeed) == 0x0000EC, "Member 'FAnimNode_StrideWarping::LocomotionSpeed' has a wrong offset!");
//static_assert(offsetof(FAnimNode_StrideWarping, MinLocomotionSpeedThreshold) == 0x0000F0, "Member 'FAnimNode_StrideWarping::MinLocomotionSpeedThreshold' has a wrong offset!");
//static_assert(offsetof(FAnimNode_StrideWarping, PelvisBone) == 0x0000F4, "Member 'FAnimNode_StrideWarping::PelvisBone' has a wrong offset!");
//static_assert(offsetof(FAnimNode_StrideWarping, IKFootRootBone) == 0x000104, "Member 'FAnimNode_StrideWarping::IKFootRootBone' has a wrong offset!");
//static_assert(offsetof(FAnimNode_StrideWarping, FootDefinitions) == 0x000118, "Member 'FAnimNode_StrideWarping::FootDefinitions' has a wrong offset!");
//static_assert(offsetof(FAnimNode_StrideWarping, StrideScaleModifier) == 0x000128, "Member 'FAnimNode_StrideWarping::StrideScaleModifier' has a wrong offset!");
//static_assert(offsetof(FAnimNode_StrideWarping, FloorNormalDirection) == 0x000140, "Member 'FAnimNode_StrideWarping::FloorNormalDirection' has a wrong offset!");
//static_assert(offsetof(FAnimNode_StrideWarping, GravityDirection) == 0x000160, "Member 'FAnimNode_StrideWarping::GravityDirection' has a wrong offset!");
//static_assert(offsetof(FAnimNode_StrideWarping, PelvisIKFootSolver) == 0x000180, "Member 'FAnimNode_StrideWarping::PelvisIKFootSolver' has a wrong offset!");
//static_assert(offsetof(FAnimNode_StrideWarping, bOrientStrideDirectionUsingFloorNormal) == 0x0001F0, "Member 'FAnimNode_StrideWarping::bOrientStrideDirectionUsingFloorNormal' has a wrong offset!");
//static_assert(offsetof(FAnimNode_StrideWarping, bCompensateIKUsingFKThighRotation) == 0x0001F1, "Member 'FAnimNode_StrideWarping::bCompensateIKUsingFKThighRotation' has a wrong offset!");
//static_assert(offsetof(FAnimNode_StrideWarping, bClampIKUsingFKLimits) == 0x0001F2, "Member 'FAnimNode_StrideWarping::bClampIKUsingFKLimits' has a wrong offset!");

}

