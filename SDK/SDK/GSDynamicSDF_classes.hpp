#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GSDynamicSDF

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DeveloperSettings_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class GSDynamicSDF.GSDynamicSDFConfig
// 0x0030 (0x0068 - 0x0038)
class UGSDynamicSDFConfig final : public UDeveloperSettings
{
public:
	struct FSoftObjectPath                        MPCPath;                                           // 0x0038(0x0018)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        NPCPath;                                           // 0x0050(0x0018)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GSDynamicSDFConfig">();
	}
	static class UGSDynamicSDFConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGSDynamicSDFConfig>();
	}
};
//static_assert(alignof(UGSDynamicSDFConfig) == 0x000008, "Wrong alignment on UGSDynamicSDFConfig");
//static_assert(sizeof(UGSDynamicSDFConfig) == 0x000068, "Wrong size on UGSDynamicSDFConfig");
//static_assert(offsetof(UGSDynamicSDFConfig, MPCPath) == 0x000038, "Member 'UGSDynamicSDFConfig::MPCPath' has a wrong offset!");
//static_assert(offsetof(UGSDynamicSDFConfig, NPCPath) == 0x000050, "Member 'UGSDynamicSDFConfig::NPCPath' has a wrong offset!");

// Class GSDynamicSDF.GSDynamicSDFInitializer
// 0x00F8 (0x0370 - 0x0278)
class AGSDynamicSDFInitializer : public AActor
{
public:
	struct FVector                                CenterSnappedPosWS;                                // 0x0278(0x0018)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CenterSnappedOffset;                               // 0x0290(0x0018)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PreviousCenterSnappedPosWS;                        // 0x02A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PreviousCenterSnappedOffset;                       // 0x02C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CenterPos;                                         // 0x02D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CenterOffset;                                      // 0x02F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PreviousCenterPos;                                 // 0x0308(0x0018)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UsedElementCount;                                  // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector4>                       Data;                                              // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FVector4>                       Velocity;                                          // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FVector4>                       VertexNormal;                                      // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UMaterialParameterCollection*           MPC;                                               // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraParameterCollection*            NPC;                                               // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraParameterCollectionInstance*    NPCInst;                                           // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GSDynamicSDFInitializer">();
	}
	static class AGSDynamicSDFInitializer* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGSDynamicSDFInitializer>();
	}
};
//static_assert(alignof(AGSDynamicSDFInitializer) == 0x000008, "Wrong alignment on AGSDynamicSDFInitializer");
//static_assert(sizeof(AGSDynamicSDFInitializer) == 0x000370, "Wrong size on AGSDynamicSDFInitializer");
//static_assert(offsetof(AGSDynamicSDFInitializer, CenterSnappedPosWS) == 0x000278, "Member 'AGSDynamicSDFInitializer::CenterSnappedPosWS' has a wrong offset!");
//static_assert(offsetof(AGSDynamicSDFInitializer, CenterSnappedOffset) == 0x000290, "Member 'AGSDynamicSDFInitializer::CenterSnappedOffset' has a wrong offset!");
//static_assert(offsetof(AGSDynamicSDFInitializer, PreviousCenterSnappedPosWS) == 0x0002A8, "Member 'AGSDynamicSDFInitializer::PreviousCenterSnappedPosWS' has a wrong offset!");
//static_assert(offsetof(AGSDynamicSDFInitializer, PreviousCenterSnappedOffset) == 0x0002C0, "Member 'AGSDynamicSDFInitializer::PreviousCenterSnappedOffset' has a wrong offset!");
//static_assert(offsetof(AGSDynamicSDFInitializer, CenterPos) == 0x0002D8, "Member 'AGSDynamicSDFInitializer::CenterPos' has a wrong offset!");
//static_assert(offsetof(AGSDynamicSDFInitializer, CenterOffset) == 0x0002F0, "Member 'AGSDynamicSDFInitializer::CenterOffset' has a wrong offset!");
//static_assert(offsetof(AGSDynamicSDFInitializer, PreviousCenterPos) == 0x000308, "Member 'AGSDynamicSDFInitializer::PreviousCenterPos' has a wrong offset!");
//static_assert(offsetof(AGSDynamicSDFInitializer, UsedElementCount) == 0x000320, "Member 'AGSDynamicSDFInitializer::UsedElementCount' has a wrong offset!");
//static_assert(offsetof(AGSDynamicSDFInitializer, Data) == 0x000328, "Member 'AGSDynamicSDFInitializer::Data' has a wrong offset!");
//static_assert(offsetof(AGSDynamicSDFInitializer, Velocity) == 0x000338, "Member 'AGSDynamicSDFInitializer::Velocity' has a wrong offset!");
//static_assert(offsetof(AGSDynamicSDFInitializer, VertexNormal) == 0x000348, "Member 'AGSDynamicSDFInitializer::VertexNormal' has a wrong offset!");
//static_assert(offsetof(AGSDynamicSDFInitializer, MPC) == 0x000358, "Member 'AGSDynamicSDFInitializer::MPC' has a wrong offset!");
//static_assert(offsetof(AGSDynamicSDFInitializer, NPC) == 0x000360, "Member 'AGSDynamicSDFInitializer::NPC' has a wrong offset!");
//static_assert(offsetof(AGSDynamicSDFInitializer, NPCInst) == 0x000368, "Member 'AGSDynamicSDFInitializer::NPCInst' has a wrong offset!");

}

