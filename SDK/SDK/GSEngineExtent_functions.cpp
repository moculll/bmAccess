#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GSEngineExtent

#include "Basic.hpp"

#include "GSEngineExtent_classes.hpp"
#include "GSEngineExtent_parameters.hpp"


namespace SDK
{

// Function GSEngineExtent.GSEDestructibleMeshGenComponent.CallFloatCurve
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGSEDestructibleMeshGenComponent::CallFloatCurve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSEDestructibleMeshGenComponent", "CallFloatCurve");

	Params::GSEDestructibleMeshGenComponent_CallFloatCurve Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GSEngineExtent.GSEDestructibleMeshGenComponent.SetAllCollisionEnabledForce
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECollisionEnabled                       NewType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGSEDestructibleMeshGenComponent::SetAllCollisionEnabledForce(ECollisionEnabled NewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSEDestructibleMeshGenComponent", "SetAllCollisionEnabledForce");

	Params::GSEDestructibleMeshGenComponent_SetAllCollisionEnabledForce Parms{};

	Parms.NewType = NewType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GSEngineExtent.GSEDestructibleMeshGenComponent.SetAllCollisionObjectType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECollisionChannel                       Channel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGSEDestructibleMeshGenComponent::SetAllCollisionObjectType(ECollisionChannel Channel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSEDestructibleMeshGenComponent", "SetAllCollisionObjectType");

	Params::GSEDestructibleMeshGenComponent_SetAllCollisionObjectType Parms{};

	Parms.Channel = Channel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GSEngineExtent.GSEDestructibleMeshGenComponent.SetAllCollisionResponseToAllChannels
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECollisionResponse                      NewResponse                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGSEDestructibleMeshGenComponent::SetAllCollisionResponseToAllChannels(ECollisionResponse NewResponse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSEDestructibleMeshGenComponent", "SetAllCollisionResponseToAllChannels");

	Params::GSEDestructibleMeshGenComponent_SetAllCollisionResponseToAllChannels Parms{};

	Parms.NewResponse = NewResponse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GSEngineExtent.GSEDestructibleMeshGenComponent.SetAllCollisionResponseToChannel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECollisionChannel                       Channel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECollisionResponse                      NewResponse                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGSEDestructibleMeshGenComponent::SetAllCollisionResponseToChannel(ECollisionChannel Channel, ECollisionResponse NewResponse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSEDestructibleMeshGenComponent", "SetAllCollisionResponseToChannel");

	Params::GSEDestructibleMeshGenComponent_SetAllCollisionResponseToChannel Parms{};

	Parms.Channel = Channel;
	Parms.NewResponse = NewResponse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GSEngineExtent.GSEDestructibleMeshGenComponent.SetCollisionEnabledForce
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECollisionEnabled                       NewType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDestructibleComponent*           Comp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGSEDestructibleMeshGenComponent::SetCollisionEnabledForce(ECollisionEnabled NewType, class UDestructibleComponent* Comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSEDestructibleMeshGenComponent", "SetCollisionEnabledForce");

	Params::GSEDestructibleMeshGenComponent_SetCollisionEnabledForce Parms{};

	Parms.NewType = NewType;
	Parms.Comp = Comp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GSEngineExtent.GSEDestructibleMeshGenComponent.SetCollisionEnabledForceByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECollisionEnabled                       NewType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGSEDestructibleMeshGenComponent::SetCollisionEnabledForceByName(ECollisionEnabled NewType, const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSEDestructibleMeshGenComponent", "SetCollisionEnabledForceByName");

	Params::GSEDestructibleMeshGenComponent_SetCollisionEnabledForceByName Parms{};

	Parms.NewType = NewType;
	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GSEngineExtent.GSEDestructibleMeshGenComponent.SetCollisionObjectType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECollisionChannel                       Channel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDestructibleComponent*           Comp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGSEDestructibleMeshGenComponent::SetCollisionObjectType(ECollisionChannel Channel, class UDestructibleComponent* Comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSEDestructibleMeshGenComponent", "SetCollisionObjectType");

	Params::GSEDestructibleMeshGenComponent_SetCollisionObjectType Parms{};

	Parms.Channel = Channel;
	Parms.Comp = Comp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GSEngineExtent.GSEDestructibleMeshGenComponent.SetCollisionObjectTypeByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECollisionChannel                       Channel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGSEDestructibleMeshGenComponent::SetCollisionObjectTypeByName(ECollisionChannel Channel, const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSEDestructibleMeshGenComponent", "SetCollisionObjectTypeByName");

	Params::GSEDestructibleMeshGenComponent_SetCollisionObjectTypeByName Parms{};

	Parms.Channel = Channel;
	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GSEngineExtent.GSEDestructibleMeshGenComponent.SetCollisionResponseToAllChannels
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECollisionResponse                      NewResponse                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDestructibleComponent*           Comp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGSEDestructibleMeshGenComponent::SetCollisionResponseToAllChannels(ECollisionResponse NewResponse, class UDestructibleComponent* Comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSEDestructibleMeshGenComponent", "SetCollisionResponseToAllChannels");

	Params::GSEDestructibleMeshGenComponent_SetCollisionResponseToAllChannels Parms{};

	Parms.NewResponse = NewResponse;
	Parms.Comp = Comp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GSEngineExtent.GSEDestructibleMeshGenComponent.SetCollisionResponseToAllChannelsByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECollisionResponse                      NewResponse                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGSEDestructibleMeshGenComponent::SetCollisionResponseToAllChannelsByName(ECollisionResponse NewResponse, const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSEDestructibleMeshGenComponent", "SetCollisionResponseToAllChannelsByName");

	Params::GSEDestructibleMeshGenComponent_SetCollisionResponseToAllChannelsByName Parms{};

	Parms.NewResponse = NewResponse;
	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GSEngineExtent.GSEDestructibleMeshGenComponent.SetCollisionResponseToChannel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECollisionChannel                       Channel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECollisionResponse                      NewResponse                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDestructibleComponent*           Comp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGSEDestructibleMeshGenComponent::SetCollisionResponseToChannel(ECollisionChannel Channel, ECollisionResponse NewResponse, class UDestructibleComponent* Comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSEDestructibleMeshGenComponent", "SetCollisionResponseToChannel");

	Params::GSEDestructibleMeshGenComponent_SetCollisionResponseToChannel Parms{};

	Parms.Channel = Channel;
	Parms.NewResponse = NewResponse;
	Parms.Comp = Comp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GSEngineExtent.GSEDestructibleMeshGenComponent.SetCollisionResponseToChannelByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECollisionChannel                       Channel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECollisionResponse                      NewResponse                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGSEDestructibleMeshGenComponent::SetCollisionResponseToChannelByName(ECollisionChannel Channel, ECollisionResponse NewResponse, const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSEDestructibleMeshGenComponent", "SetCollisionResponseToChannelByName");

	Params::GSEDestructibleMeshGenComponent_SetCollisionResponseToChannelByName Parms{};

	Parms.Channel = Channel;
	Parms.NewResponse = NewResponse;
	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GSEngineExtent.EditorFuncLibCommon.UMGTemplate_GetLearnID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   UnitID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LearnID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEditorFuncLibCommon::UMGTemplate_GetLearnID(int32 UnitID, int32 LearnID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EditorFuncLibCommon", "UMGTemplate_GetLearnID");

	Params::EditorFuncLibCommon_UMGTemplate_GetLearnID Parms{};

	Parms.UnitID = UnitID;
	Parms.LearnID = LearnID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GSEngineExtent.GSECameraRig_Rail.GetSplineLength
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AGSECameraRig_Rail::GetSplineLength()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSECameraRig_Rail", "GetSplineLength");

	Params::GSECameraRig_Rail_GetSplineLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GSEngineExtent.GSViewPortRatioUtil.CalcCachedData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutRefViewPortWidth                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutRefViewPortHeight                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutCfgMaxRatioMin                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutCfgMaxRatioMax                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutCfgMinRatio                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutCfgRefHeightDPIScale                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGSForceRatioType                       OutForceRatioTye                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGSConstraintAspectRatioType            OutConstraintAspectRatioType                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutRatio                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGSViewPortRatioUtil::CalcCachedData(class UObject* WorldContext, int32* OutRefViewPortWidth, int32* OutRefViewPortHeight, float* OutCfgMaxRatioMin, float* OutCfgMaxRatioMax, float* OutCfgMinRatio, float* OutCfgRefHeightDPIScale, EGSForceRatioType* OutForceRatioTye, EGSConstraintAspectRatioType* OutConstraintAspectRatioType, float* OutRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GSViewPortRatioUtil", "CalcCachedData");

	Params::GSViewPortRatioUtil_CalcCachedData Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRefViewPortWidth != nullptr)
		*OutRefViewPortWidth = Parms.OutRefViewPortWidth;

	if (OutRefViewPortHeight != nullptr)
		*OutRefViewPortHeight = Parms.OutRefViewPortHeight;

	if (OutCfgMaxRatioMin != nullptr)
		*OutCfgMaxRatioMin = Parms.OutCfgMaxRatioMin;

	if (OutCfgMaxRatioMax != nullptr)
		*OutCfgMaxRatioMax = Parms.OutCfgMaxRatioMax;

	if (OutCfgMinRatio != nullptr)
		*OutCfgMinRatio = Parms.OutCfgMinRatio;

	if (OutCfgRefHeightDPIScale != nullptr)
		*OutCfgRefHeightDPIScale = Parms.OutCfgRefHeightDPIScale;

	if (OutForceRatioTye != nullptr)
		*OutForceRatioTye = Parms.OutForceRatioTye;

	if (OutConstraintAspectRatioType != nullptr)
		*OutConstraintAspectRatioType = Parms.OutConstraintAspectRatioType;

	if (OutRatio != nullptr)
		*OutRatio = Parms.OutRatio;
}


// Function GSEngineExtent.GSViewPortRatioUtil.CalcCameraRatioInner
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RefViewPortWidth                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RefViewPortHeight                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TargetRatio                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGSConstraintAspectRatioType            ConstraintAspectRatioType                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGSViewPortRatioUtil::CalcCameraRatioInner(int32 RefViewPortWidth, int32 RefViewPortHeight, float* TargetRatio, EGSConstraintAspectRatioType* ConstraintAspectRatioType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GSViewPortRatioUtil", "CalcCameraRatioInner");

	Params::GSViewPortRatioUtil_CalcCameraRatioInner Parms{};

	Parms.RefViewPortWidth = RefViewPortWidth;
	Parms.RefViewPortHeight = RefViewPortHeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TargetRatio != nullptr)
		*TargetRatio = Parms.TargetRatio;

	if (ConstraintAspectRatioType != nullptr)
		*ConstraintAspectRatioType = Parms.ConstraintAspectRatioType;
}


// Function GSEngineExtent.GSViewPortRatioUtil.CalcCameraRatioInnerWithRatioType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RefViewPortWidth                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RefViewPortHeight                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGSForceRatioType                       InForceRatioType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TargetRatio                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGSConstraintAspectRatioType            ConstraintAspectRatioType                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGSViewPortRatioUtil::CalcCameraRatioInnerWithRatioType(int32 RefViewPortWidth, int32 RefViewPortHeight, EGSForceRatioType InForceRatioType, float* TargetRatio, EGSConstraintAspectRatioType* ConstraintAspectRatioType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GSViewPortRatioUtil", "CalcCameraRatioInnerWithRatioType");

	Params::GSViewPortRatioUtil_CalcCameraRatioInnerWithRatioType Parms{};

	Parms.RefViewPortWidth = RefViewPortWidth;
	Parms.RefViewPortHeight = RefViewPortHeight;
	Parms.InForceRatioType = InForceRatioType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TargetRatio != nullptr)
		*TargetRatio = Parms.TargetRatio;

	if (ConstraintAspectRatioType != nullptr)
		*ConstraintAspectRatioType = Parms.ConstraintAspectRatioType;
}


// Function GSEngineExtent.GSViewPortRatioUtil.GetForceRatioType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EGSForceRatioType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGSForceRatioType UGSViewPortRatioUtil::GetForceRatioType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GSViewPortRatioUtil", "GetForceRatioType");

	Params::GSViewPortRatioUtil_GetForceRatioType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GSEngineExtent.GSViewPortRatioUtil.InitSetCfg
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   InCfgMaxRatioMin                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCfgMaxRatioMax                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCfgMinRatio                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCfgRefHeightDPIScale                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGSViewPortRatioUtil::InitSetCfg(float InCfgMaxRatioMin, float InCfgMaxRatioMax, float InCfgMinRatio, float InCfgRefHeightDPIScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GSViewPortRatioUtil", "InitSetCfg");

	Params::GSViewPortRatioUtil_InitSetCfg Parms{};

	Parms.InCfgMaxRatioMin = InCfgMaxRatioMin;
	Parms.InCfgMaxRatioMax = InCfgMaxRatioMax;
	Parms.InCfgMinRatio = InCfgMinRatio;
	Parms.InCfgRefHeightDPIScale = InCfgRefHeightDPIScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GSEngineExtent.GSViewPortRatioUtil.SetForceRatioType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EGSForceRatioType                       NewType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGSViewPortRatioUtil::SetForceRatioType(EGSForceRatioType NewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GSViewPortRatioUtil", "SetForceRatioType");

	Params::GSViewPortRatioUtil_SetForceRatioType Parms{};

	Parms.NewType = NewType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

