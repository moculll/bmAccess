#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NiagaraUIRenderer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// ScriptStruct NiagaraUIRenderer.SlateMeshData
// 0x0048 (0x0048 - 0x0000)
struct FSlateMeshData final
{
public:
	class FName                                   MeshPackageName;                                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector2f>                      Vertex;                                            // 0x0008(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FColor>                         VertexColor;                                       // 0x0018(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVector2f>                      UV;                                                // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<uint32>                                Index;                                             // 0x0038(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
//static_assert(alignof(FSlateMeshData) == 0x000008, "Wrong alignment on FSlateMeshData");
//static_assert(sizeof(FSlateMeshData) == 0x000048, "Wrong size on FSlateMeshData");
//static_assert(offsetof(FSlateMeshData, MeshPackageName) == 0x000000, "Member 'FSlateMeshData::MeshPackageName' has a wrong offset!");
//static_assert(offsetof(FSlateMeshData, Vertex) == 0x000008, "Member 'FSlateMeshData::Vertex' has a wrong offset!");
//static_assert(offsetof(FSlateMeshData, VertexColor) == 0x000018, "Member 'FSlateMeshData::VertexColor' has a wrong offset!");
//static_assert(offsetof(FSlateMeshData, UV) == 0x000028, "Member 'FSlateMeshData::UV' has a wrong offset!");
//static_assert(offsetof(FSlateMeshData, Index) == 0x000038, "Member 'FSlateMeshData::Index' has a wrong offset!");

}

