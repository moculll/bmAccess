#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JavascriptUMG

#include "Basic.hpp"

#include "JavascriptUMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// DelegateFunction JavascriptUMG.JavascriptComboButton.OnGetContent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct JavascriptComboButton_OnGetContent__DelegateSignature final
{
public:
	struct FJavascriptSlateWidget                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptComboButton_OnGetContent__DelegateSignature) == 0x000008, "Wrong alignment on JavascriptComboButton_OnGetContent__DelegateSignature");
//static_assert(sizeof(JavascriptComboButton_OnGetContent__DelegateSignature) == 0x000010, "Wrong size on JavascriptComboButton_OnGetContent__DelegateSignature");
//static_assert(offsetof(JavascriptComboButton_OnGetContent__DelegateSignature, ReturnValue) == 0x000000, "Member 'JavascriptComboButton_OnGetContent__DelegateSignature::ReturnValue' has a wrong offset!");

// DelegateFunction JavascriptUMG.JavascriptComboButton.OnIsOpenChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct JavascriptComboButton_OnIsOpenChanged__DelegateSignature final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptComboButton_OnIsOpenChanged__DelegateSignature) == 0x000001, "Wrong alignment on JavascriptComboButton_OnIsOpenChanged__DelegateSignature");
//static_assert(sizeof(JavascriptComboButton_OnIsOpenChanged__DelegateSignature) == 0x000001, "Wrong size on JavascriptComboButton_OnIsOpenChanged__DelegateSignature");
//static_assert(offsetof(JavascriptComboButton_OnIsOpenChanged__DelegateSignature, Value) == 0x000000, "Member 'JavascriptComboButton_OnIsOpenChanged__DelegateSignature::Value' has a wrong offset!");

// Function JavascriptUMG.JavascriptComboButton.SetIsOpen
// 0x0002 (0x0002 - 0x0000)
struct JavascriptComboButton_SetIsOpen final
{
public:
	bool                                          InIsOpen;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFocusMenu;                                        // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptComboButton_SetIsOpen) == 0x000001, "Wrong alignment on JavascriptComboButton_SetIsOpen");
//static_assert(sizeof(JavascriptComboButton_SetIsOpen) == 0x000002, "Wrong size on JavascriptComboButton_SetIsOpen");
//static_assert(offsetof(JavascriptComboButton_SetIsOpen, InIsOpen) == 0x000000, "Member 'JavascriptComboButton_SetIsOpen::InIsOpen' has a wrong offset!");
//static_assert(offsetof(JavascriptComboButton_SetIsOpen, bFocusMenu) == 0x000001, "Member 'JavascriptComboButton_SetIsOpen::bFocusMenu' has a wrong offset!");

// Function JavascriptUMG.JavascriptTextModel.CreateRun
// 0x0390 (0x0390 - 0x0000)
struct JavascriptTextModel_CreateRun final
{
public:
	struct FTextBlockStyle                        MessageTextStyle;                                  // 0x0000(0x0370)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         BeginIndex;                                        // 0x0370(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EndIndex;                                          // 0x0374(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJavascriptSlateTextRun                ReturnValue;                                       // 0x0378(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
	uint8                                         Pad_388[0x8];                                      // 0x0388(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(JavascriptTextModel_CreateRun) == 0x000010, "Wrong alignment on JavascriptTextModel_CreateRun");
//static_assert(sizeof(JavascriptTextModel_CreateRun) == 0x000390, "Wrong size on JavascriptTextModel_CreateRun");
//static_assert(offsetof(JavascriptTextModel_CreateRun, MessageTextStyle) == 0x000000, "Member 'JavascriptTextModel_CreateRun::MessageTextStyle' has a wrong offset!");
//static_assert(offsetof(JavascriptTextModel_CreateRun, BeginIndex) == 0x000370, "Member 'JavascriptTextModel_CreateRun::BeginIndex' has a wrong offset!");
//static_assert(offsetof(JavascriptTextModel_CreateRun, EndIndex) == 0x000374, "Member 'JavascriptTextModel_CreateRun::EndIndex' has a wrong offset!");
//static_assert(offsetof(JavascriptTextModel_CreateRun, ReturnValue) == 0x000378, "Member 'JavascriptTextModel_CreateRun::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptTextModel.GetString
// 0x0010 (0x0010 - 0x0000)
struct JavascriptTextModel_GetString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptTextModel_GetString) == 0x000008, "Wrong alignment on JavascriptTextModel_GetString");
//static_assert(sizeof(JavascriptTextModel_GetString) == 0x000010, "Wrong size on JavascriptTextModel_GetString");
//static_assert(offsetof(JavascriptTextModel_GetString, ReturnValue) == 0x000000, "Member 'JavascriptTextModel_GetString::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptTextModel.SetString
// 0x0010 (0x0010 - 0x0000)
struct JavascriptTextModel_SetString final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptTextModel_SetString) == 0x000008, "Wrong alignment on JavascriptTextModel_SetString");
//static_assert(sizeof(JavascriptTextModel_SetString) == 0x000010, "Wrong size on JavascriptTextModel_SetString");
//static_assert(offsetof(JavascriptTextModel_SetString, String) == 0x000000, "Member 'JavascriptTextModel_SetString::String' has a wrong offset!");

// DelegateFunction JavascriptUMG.JavascriptMultiLineEditableTextBox.GetText__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct JavascriptMultiLineEditableTextBox_GetText__DelegateSignature final
{
public:
	struct FJavascriptTextLayout                  TextLayout;                                        // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptMultiLineEditableTextBox_GetText__DelegateSignature) == 0x000008, "Wrong alignment on JavascriptMultiLineEditableTextBox_GetText__DelegateSignature");
//static_assert(sizeof(JavascriptMultiLineEditableTextBox_GetText__DelegateSignature) == 0x000030, "Wrong size on JavascriptMultiLineEditableTextBox_GetText__DelegateSignature");
//static_assert(offsetof(JavascriptMultiLineEditableTextBox_GetText__DelegateSignature, TextLayout) == 0x000000, "Member 'JavascriptMultiLineEditableTextBox_GetText__DelegateSignature::TextLayout' has a wrong offset!");
//static_assert(offsetof(JavascriptMultiLineEditableTextBox_GetText__DelegateSignature, ReturnValue) == 0x000020, "Member 'JavascriptMultiLineEditableTextBox_GetText__DelegateSignature::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptMultiLineEditableTextBox.GoTo
// 0x0008 (0x0008 - 0x0000)
struct JavascriptMultiLineEditableTextBox_GoTo final
{
public:
	int32                                         Line;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Offset;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptMultiLineEditableTextBox_GoTo) == 0x000004, "Wrong alignment on JavascriptMultiLineEditableTextBox_GoTo");
//static_assert(sizeof(JavascriptMultiLineEditableTextBox_GoTo) == 0x000008, "Wrong size on JavascriptMultiLineEditableTextBox_GoTo");
//static_assert(offsetof(JavascriptMultiLineEditableTextBox_GoTo, Line) == 0x000000, "Member 'JavascriptMultiLineEditableTextBox_GoTo::Line' has a wrong offset!");
//static_assert(offsetof(JavascriptMultiLineEditableTextBox_GoTo, Offset) == 0x000004, "Member 'JavascriptMultiLineEditableTextBox_GoTo::Offset' has a wrong offset!");

// DelegateFunction JavascriptUMG.JavascriptMultiLineEditableTextBox.OnVScrollBarUserScrolled__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct JavascriptMultiLineEditableTextBox_OnVScrollBarUserScrolled__DelegateSignature final
{
public:
	float                                         Offset;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptMultiLineEditableTextBox_OnVScrollBarUserScrolled__DelegateSignature) == 0x000004, "Wrong alignment on JavascriptMultiLineEditableTextBox_OnVScrollBarUserScrolled__DelegateSignature");
//static_assert(sizeof(JavascriptMultiLineEditableTextBox_OnVScrollBarUserScrolled__DelegateSignature) == 0x000004, "Wrong size on JavascriptMultiLineEditableTextBox_OnVScrollBarUserScrolled__DelegateSignature");
//static_assert(offsetof(JavascriptMultiLineEditableTextBox_OnVScrollBarUserScrolled__DelegateSignature, Offset) == 0x000000, "Member 'JavascriptMultiLineEditableTextBox_OnVScrollBarUserScrolled__DelegateSignature::Offset' has a wrong offset!");

// Function JavascriptUMG.JavascriptMultiLineEditableTextBox.ScrollTo
// 0x0008 (0x0008 - 0x0000)
struct JavascriptMultiLineEditableTextBox_ScrollTo final
{
public:
	int32                                         Line;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Offset;                                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptMultiLineEditableTextBox_ScrollTo) == 0x000004, "Wrong alignment on JavascriptMultiLineEditableTextBox_ScrollTo");
//static_assert(sizeof(JavascriptMultiLineEditableTextBox_ScrollTo) == 0x000008, "Wrong size on JavascriptMultiLineEditableTextBox_ScrollTo");
//static_assert(offsetof(JavascriptMultiLineEditableTextBox_ScrollTo, Line) == 0x000000, "Member 'JavascriptMultiLineEditableTextBox_ScrollTo::Line' has a wrong offset!");
//static_assert(offsetof(JavascriptMultiLineEditableTextBox_ScrollTo, Offset) == 0x000004, "Member 'JavascriptMultiLineEditableTextBox_ScrollTo::Offset' has a wrong offset!");

// DelegateFunction JavascriptUMG.JavascriptMultiLineEditableTextBox.SetText__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct JavascriptMultiLineEditableTextBox_SetText__DelegateSignature final
{
public:
	class FString                                 InText;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJavascriptTextLayout                  TextLayout;                                        // 0x0010(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptMultiLineEditableTextBox_SetText__DelegateSignature) == 0x000008, "Wrong alignment on JavascriptMultiLineEditableTextBox_SetText__DelegateSignature");
//static_assert(sizeof(JavascriptMultiLineEditableTextBox_SetText__DelegateSignature) == 0x000030, "Wrong size on JavascriptMultiLineEditableTextBox_SetText__DelegateSignature");
//static_assert(offsetof(JavascriptMultiLineEditableTextBox_SetText__DelegateSignature, InText) == 0x000000, "Member 'JavascriptMultiLineEditableTextBox_SetText__DelegateSignature::InText' has a wrong offset!");
//static_assert(offsetof(JavascriptMultiLineEditableTextBox_SetText__DelegateSignature, TextLayout) == 0x000010, "Member 'JavascriptMultiLineEditableTextBox_SetText__DelegateSignature::TextLayout' has a wrong offset!");

// Function JavascriptUMG.JavascriptGameViewport.SetViewLocation
// 0x0018 (0x0018 - 0x0000)
struct JavascriptGameViewport_SetViewLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptGameViewport_SetViewLocation) == 0x000008, "Wrong alignment on JavascriptGameViewport_SetViewLocation");
//static_assert(sizeof(JavascriptGameViewport_SetViewLocation) == 0x000018, "Wrong size on JavascriptGameViewport_SetViewLocation");
//static_assert(offsetof(JavascriptGameViewport_SetViewLocation, Location) == 0x000000, "Member 'JavascriptGameViewport_SetViewLocation::Location' has a wrong offset!");

// Function JavascriptUMG.JavascriptGameViewport.SetViewRotation
// 0x0018 (0x0018 - 0x0000)
struct JavascriptGameViewport_SetViewRotation final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptGameViewport_SetViewRotation) == 0x000008, "Wrong alignment on JavascriptGameViewport_SetViewRotation");
//static_assert(sizeof(JavascriptGameViewport_SetViewRotation) == 0x000018, "Wrong size on JavascriptGameViewport_SetViewRotation");
//static_assert(offsetof(JavascriptGameViewport_SetViewRotation, Rotation) == 0x000000, "Member 'JavascriptGameViewport_SetViewRotation::Rotation' has a wrong offset!");

// Function JavascriptUMG.JavascriptGameViewport.Spawn
// 0x0010 (0x0010 - 0x0000)
struct JavascriptGameViewport_Spawn final
{
public:
	TSubclassOf<class AActor>                     ActorClass;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptGameViewport_Spawn) == 0x000008, "Wrong alignment on JavascriptGameViewport_Spawn");
//static_assert(sizeof(JavascriptGameViewport_Spawn) == 0x000010, "Wrong size on JavascriptGameViewport_Spawn");
//static_assert(offsetof(JavascriptGameViewport_Spawn, ActorClass) == 0x000000, "Member 'JavascriptGameViewport_Spawn::ActorClass' has a wrong offset!");
//static_assert(offsetof(JavascriptGameViewport_Spawn, ReturnValue) == 0x000008, "Member 'JavascriptGameViewport_Spawn::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptGameViewport.GetViewLocation
// 0x0018 (0x0018 - 0x0000)
struct JavascriptGameViewport_GetViewLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptGameViewport_GetViewLocation) == 0x000008, "Wrong alignment on JavascriptGameViewport_GetViewLocation");
//static_assert(sizeof(JavascriptGameViewport_GetViewLocation) == 0x000018, "Wrong size on JavascriptGameViewport_GetViewLocation");
//static_assert(offsetof(JavascriptGameViewport_GetViewLocation, ReturnValue) == 0x000000, "Member 'JavascriptGameViewport_GetViewLocation::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptGameViewport.GetViewportWorld
// 0x0008 (0x0008 - 0x0000)
struct JavascriptGameViewport_GetViewportWorld final
{
public:
	class UWorld*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptGameViewport_GetViewportWorld) == 0x000008, "Wrong alignment on JavascriptGameViewport_GetViewportWorld");
//static_assert(sizeof(JavascriptGameViewport_GetViewportWorld) == 0x000008, "Wrong size on JavascriptGameViewport_GetViewportWorld");
//static_assert(offsetof(JavascriptGameViewport_GetViewportWorld, ReturnValue) == 0x000000, "Member 'JavascriptGameViewport_GetViewportWorld::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptGameViewport.GetViewRotation
// 0x0018 (0x0018 - 0x0000)
struct JavascriptGameViewport_GetViewRotation final
{
public:
	struct FRotator                               ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptGameViewport_GetViewRotation) == 0x000008, "Wrong alignment on JavascriptGameViewport_GetViewRotation");
//static_assert(sizeof(JavascriptGameViewport_GetViewRotation) == 0x000018, "Wrong size on JavascriptGameViewport_GetViewRotation");
//static_assert(offsetof(JavascriptGameViewport_GetViewRotation, ReturnValue) == 0x000000, "Member 'JavascriptGameViewport_GetViewRotation::ReturnValue' has a wrong offset!");

// DelegateFunction JavascriptUMG.JavascriptIntSpinBox.OnSpinBoxValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct JavascriptIntSpinBox_OnSpinBoxValueChangedEvent__DelegateSignature final
{
public:
	int32                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptIntSpinBox_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on JavascriptIntSpinBox_OnSpinBoxValueChangedEvent__DelegateSignature");
//static_assert(sizeof(JavascriptIntSpinBox_OnSpinBoxValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on JavascriptIntSpinBox_OnSpinBoxValueChangedEvent__DelegateSignature");
//static_assert(offsetof(JavascriptIntSpinBox_OnSpinBoxValueChangedEvent__DelegateSignature, InValue) == 0x000000, "Member 'JavascriptIntSpinBox_OnSpinBoxValueChangedEvent__DelegateSignature::InValue' has a wrong offset!");

// DelegateFunction JavascriptUMG.JavascriptIntSpinBox.OnSpinBoxValueCommittedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct JavascriptIntSpinBox_OnSpinBoxValueCommittedEvent__DelegateSignature final
{
public:
	int32                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   CommitMethod;                                      // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(JavascriptIntSpinBox_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000004, "Wrong alignment on JavascriptIntSpinBox_OnSpinBoxValueCommittedEvent__DelegateSignature");
//static_assert(sizeof(JavascriptIntSpinBox_OnSpinBoxValueCommittedEvent__DelegateSignature) == 0x000008, "Wrong size on JavascriptIntSpinBox_OnSpinBoxValueCommittedEvent__DelegateSignature");
//static_assert(offsetof(JavascriptIntSpinBox_OnSpinBoxValueCommittedEvent__DelegateSignature, InValue) == 0x000000, "Member 'JavascriptIntSpinBox_OnSpinBoxValueCommittedEvent__DelegateSignature::InValue' has a wrong offset!");
//static_assert(offsetof(JavascriptIntSpinBox_OnSpinBoxValueCommittedEvent__DelegateSignature, CommitMethod) == 0x000004, "Member 'JavascriptIntSpinBox_OnSpinBoxValueCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function JavascriptUMG.JavascriptIntSpinBox.SetForegroundColor
// 0x0014 (0x0014 - 0x0000)
struct JavascriptIntSpinBox_SetForegroundColor final
{
public:
	struct FSlateColor                            InForegroundColor;                                 // 0x0000(0x0014)(Parm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptIntSpinBox_SetForegroundColor) == 0x000004, "Wrong alignment on JavascriptIntSpinBox_SetForegroundColor");
//static_assert(sizeof(JavascriptIntSpinBox_SetForegroundColor) == 0x000014, "Wrong size on JavascriptIntSpinBox_SetForegroundColor");
//static_assert(offsetof(JavascriptIntSpinBox_SetForegroundColor, InForegroundColor) == 0x000000, "Member 'JavascriptIntSpinBox_SetForegroundColor::InForegroundColor' has a wrong offset!");

// Function JavascriptUMG.JavascriptIntSpinBox.SetMaxSliderValue
// 0x0004 (0x0004 - 0x0000)
struct JavascriptIntSpinBox_SetMaxSliderValue final
{
public:
	int32                                         NewValue;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptIntSpinBox_SetMaxSliderValue) == 0x000004, "Wrong alignment on JavascriptIntSpinBox_SetMaxSliderValue");
//static_assert(sizeof(JavascriptIntSpinBox_SetMaxSliderValue) == 0x000004, "Wrong size on JavascriptIntSpinBox_SetMaxSliderValue");
//static_assert(offsetof(JavascriptIntSpinBox_SetMaxSliderValue, NewValue) == 0x000000, "Member 'JavascriptIntSpinBox_SetMaxSliderValue::NewValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptIntSpinBox.SetMaxValue
// 0x0004 (0x0004 - 0x0000)
struct JavascriptIntSpinBox_SetMaxValue final
{
public:
	int32                                         NewValue;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptIntSpinBox_SetMaxValue) == 0x000004, "Wrong alignment on JavascriptIntSpinBox_SetMaxValue");
//static_assert(sizeof(JavascriptIntSpinBox_SetMaxValue) == 0x000004, "Wrong size on JavascriptIntSpinBox_SetMaxValue");
//static_assert(offsetof(JavascriptIntSpinBox_SetMaxValue, NewValue) == 0x000000, "Member 'JavascriptIntSpinBox_SetMaxValue::NewValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptIntSpinBox.SetMinSliderValue
// 0x0004 (0x0004 - 0x0000)
struct JavascriptIntSpinBox_SetMinSliderValue final
{
public:
	int32                                         NewValue;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptIntSpinBox_SetMinSliderValue) == 0x000004, "Wrong alignment on JavascriptIntSpinBox_SetMinSliderValue");
//static_assert(sizeof(JavascriptIntSpinBox_SetMinSliderValue) == 0x000004, "Wrong size on JavascriptIntSpinBox_SetMinSliderValue");
//static_assert(offsetof(JavascriptIntSpinBox_SetMinSliderValue, NewValue) == 0x000000, "Member 'JavascriptIntSpinBox_SetMinSliderValue::NewValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptIntSpinBox.SetMinValue
// 0x0004 (0x0004 - 0x0000)
struct JavascriptIntSpinBox_SetMinValue final
{
public:
	int32                                         NewValue;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptIntSpinBox_SetMinValue) == 0x000004, "Wrong alignment on JavascriptIntSpinBox_SetMinValue");
//static_assert(sizeof(JavascriptIntSpinBox_SetMinValue) == 0x000004, "Wrong size on JavascriptIntSpinBox_SetMinValue");
//static_assert(offsetof(JavascriptIntSpinBox_SetMinValue, NewValue) == 0x000000, "Member 'JavascriptIntSpinBox_SetMinValue::NewValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptIntSpinBox.SetValue
// 0x0004 (0x0004 - 0x0000)
struct JavascriptIntSpinBox_SetValue final
{
public:
	int32                                         NewValue;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptIntSpinBox_SetValue) == 0x000004, "Wrong alignment on JavascriptIntSpinBox_SetValue");
//static_assert(sizeof(JavascriptIntSpinBox_SetValue) == 0x000004, "Wrong size on JavascriptIntSpinBox_SetValue");
//static_assert(offsetof(JavascriptIntSpinBox_SetValue, NewValue) == 0x000000, "Member 'JavascriptIntSpinBox_SetValue::NewValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptIntSpinBox.GetMaxSliderValue
// 0x0004 (0x0004 - 0x0000)
struct JavascriptIntSpinBox_GetMaxSliderValue final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptIntSpinBox_GetMaxSliderValue) == 0x000004, "Wrong alignment on JavascriptIntSpinBox_GetMaxSliderValue");
//static_assert(sizeof(JavascriptIntSpinBox_GetMaxSliderValue) == 0x000004, "Wrong size on JavascriptIntSpinBox_GetMaxSliderValue");
//static_assert(offsetof(JavascriptIntSpinBox_GetMaxSliderValue, ReturnValue) == 0x000000, "Member 'JavascriptIntSpinBox_GetMaxSliderValue::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptIntSpinBox.GetMaxValue
// 0x0004 (0x0004 - 0x0000)
struct JavascriptIntSpinBox_GetMaxValue final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptIntSpinBox_GetMaxValue) == 0x000004, "Wrong alignment on JavascriptIntSpinBox_GetMaxValue");
//static_assert(sizeof(JavascriptIntSpinBox_GetMaxValue) == 0x000004, "Wrong size on JavascriptIntSpinBox_GetMaxValue");
//static_assert(offsetof(JavascriptIntSpinBox_GetMaxValue, ReturnValue) == 0x000000, "Member 'JavascriptIntSpinBox_GetMaxValue::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptIntSpinBox.GetMinSliderValue
// 0x0004 (0x0004 - 0x0000)
struct JavascriptIntSpinBox_GetMinSliderValue final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptIntSpinBox_GetMinSliderValue) == 0x000004, "Wrong alignment on JavascriptIntSpinBox_GetMinSliderValue");
//static_assert(sizeof(JavascriptIntSpinBox_GetMinSliderValue) == 0x000004, "Wrong size on JavascriptIntSpinBox_GetMinSliderValue");
//static_assert(offsetof(JavascriptIntSpinBox_GetMinSliderValue, ReturnValue) == 0x000000, "Member 'JavascriptIntSpinBox_GetMinSliderValue::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptIntSpinBox.GetMinValue
// 0x0004 (0x0004 - 0x0000)
struct JavascriptIntSpinBox_GetMinValue final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptIntSpinBox_GetMinValue) == 0x000004, "Wrong alignment on JavascriptIntSpinBox_GetMinValue");
//static_assert(sizeof(JavascriptIntSpinBox_GetMinValue) == 0x000004, "Wrong size on JavascriptIntSpinBox_GetMinValue");
//static_assert(offsetof(JavascriptIntSpinBox_GetMinValue, ReturnValue) == 0x000000, "Member 'JavascriptIntSpinBox_GetMinValue::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptIntSpinBox.GetValue
// 0x0004 (0x0004 - 0x0000)
struct JavascriptIntSpinBox_GetValue final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptIntSpinBox_GetValue) == 0x000004, "Wrong alignment on JavascriptIntSpinBox_GetValue");
//static_assert(sizeof(JavascriptIntSpinBox_GetValue) == 0x000004, "Wrong size on JavascriptIntSpinBox_GetValue");
//static_assert(offsetof(JavascriptIntSpinBox_GetValue, ReturnValue) == 0x000000, "Member 'JavascriptIntSpinBox_GetValue::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptTreeView.GetDoubleClickedItems
// 0x0010 (0x0010 - 0x0000)
struct JavascriptTreeView_GetDoubleClickedItems final
{
public:
	TArray<class UObject*>                        OutItems;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptTreeView_GetDoubleClickedItems) == 0x000008, "Wrong alignment on JavascriptTreeView_GetDoubleClickedItems");
//static_assert(sizeof(JavascriptTreeView_GetDoubleClickedItems) == 0x000010, "Wrong size on JavascriptTreeView_GetDoubleClickedItems");
//static_assert(offsetof(JavascriptTreeView_GetDoubleClickedItems, OutItems) == 0x000000, "Member 'JavascriptTreeView_GetDoubleClickedItems::OutItems' has a wrong offset!");

// Function JavascriptUMG.JavascriptTreeView.GetSelectedItems
// 0x0018 (0x0018 - 0x0000)
struct JavascriptTreeView_GetSelectedItems final
{
public:
	TArray<class UObject*>                        OutItems;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(JavascriptTreeView_GetSelectedItems) == 0x000008, "Wrong alignment on JavascriptTreeView_GetSelectedItems");
//static_assert(sizeof(JavascriptTreeView_GetSelectedItems) == 0x000018, "Wrong size on JavascriptTreeView_GetSelectedItems");
//static_assert(offsetof(JavascriptTreeView_GetSelectedItems, OutItems) == 0x000000, "Member 'JavascriptTreeView_GetSelectedItems::OutItems' has a wrong offset!");
//static_assert(offsetof(JavascriptTreeView_GetSelectedItems, ReturnValue) == 0x000010, "Member 'JavascriptTreeView_GetSelectedItems::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptTreeView.IsDoubleClickSelection
// 0x0010 (0x0010 - 0x0000)
struct JavascriptTreeView_IsDoubleClickSelection final
{
public:
	class UObject*                                SelectedItem;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(JavascriptTreeView_IsDoubleClickSelection) == 0x000008, "Wrong alignment on JavascriptTreeView_IsDoubleClickSelection");
//static_assert(sizeof(JavascriptTreeView_IsDoubleClickSelection) == 0x000010, "Wrong size on JavascriptTreeView_IsDoubleClickSelection");
//static_assert(offsetof(JavascriptTreeView_IsDoubleClickSelection, SelectedItem) == 0x000000, "Member 'JavascriptTreeView_IsDoubleClickSelection::SelectedItem' has a wrong offset!");
//static_assert(offsetof(JavascriptTreeView_IsDoubleClickSelection, ReturnValue) == 0x000008, "Member 'JavascriptTreeView_IsDoubleClickSelection::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptTreeView.IsItemExpanded
// 0x0010 (0x0010 - 0x0000)
struct JavascriptTreeView_IsItemExpanded final
{
public:
	class UObject*                                InItem;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(JavascriptTreeView_IsItemExpanded) == 0x000008, "Wrong alignment on JavascriptTreeView_IsItemExpanded");
//static_assert(sizeof(JavascriptTreeView_IsItemExpanded) == 0x000010, "Wrong size on JavascriptTreeView_IsItemExpanded");
//static_assert(offsetof(JavascriptTreeView_IsItemExpanded, InItem) == 0x000000, "Member 'JavascriptTreeView_IsItemExpanded::InItem' has a wrong offset!");
//static_assert(offsetof(JavascriptTreeView_IsItemExpanded, ReturnValue) == 0x000008, "Member 'JavascriptTreeView_IsItemExpanded::ReturnValue' has a wrong offset!");

// DelegateFunction JavascriptUMG.JavascriptTreeView.OnContextMenuOpening__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct JavascriptTreeView_OnContextMenuOpening__DelegateSignature final
{
public:
	class UJavascriptTreeView*                    Instance;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptTreeView_OnContextMenuOpening__DelegateSignature) == 0x000008, "Wrong alignment on JavascriptTreeView_OnContextMenuOpening__DelegateSignature");
//static_assert(sizeof(JavascriptTreeView_OnContextMenuOpening__DelegateSignature) == 0x000010, "Wrong size on JavascriptTreeView_OnContextMenuOpening__DelegateSignature");
//static_assert(offsetof(JavascriptTreeView_OnContextMenuOpening__DelegateSignature, Instance) == 0x000000, "Member 'JavascriptTreeView_OnContextMenuOpening__DelegateSignature::Instance' has a wrong offset!");
//static_assert(offsetof(JavascriptTreeView_OnContextMenuOpening__DelegateSignature, ReturnValue) == 0x000008, "Member 'JavascriptTreeView_OnContextMenuOpening__DelegateSignature::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptTreeView.OnDoubleClick
// 0x0008 (0x0008 - 0x0000)
struct JavascriptTreeView_OnDoubleClick final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptTreeView_OnDoubleClick) == 0x000008, "Wrong alignment on JavascriptTreeView_OnDoubleClick");
//static_assert(sizeof(JavascriptTreeView_OnDoubleClick) == 0x000008, "Wrong size on JavascriptTreeView_OnDoubleClick");
//static_assert(offsetof(JavascriptTreeView_OnDoubleClick, Object) == 0x000000, "Member 'JavascriptTreeView_OnDoubleClick::Object' has a wrong offset!");

// DelegateFunction JavascriptUMG.JavascriptTreeView.OnExpansionChanged__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct JavascriptTreeView_OnExpansionChanged__DelegateSignature final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExpanded;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJavascriptTreeView*                    Instance;                                          // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptTreeView_OnExpansionChanged__DelegateSignature) == 0x000008, "Wrong alignment on JavascriptTreeView_OnExpansionChanged__DelegateSignature");
//static_assert(sizeof(JavascriptTreeView_OnExpansionChanged__DelegateSignature) == 0x000018, "Wrong size on JavascriptTreeView_OnExpansionChanged__DelegateSignature");
//static_assert(offsetof(JavascriptTreeView_OnExpansionChanged__DelegateSignature, Item) == 0x000000, "Member 'JavascriptTreeView_OnExpansionChanged__DelegateSignature::Item' has a wrong offset!");
//static_assert(offsetof(JavascriptTreeView_OnExpansionChanged__DelegateSignature, bExpanded) == 0x000008, "Member 'JavascriptTreeView_OnExpansionChanged__DelegateSignature::bExpanded' has a wrong offset!");
//static_assert(offsetof(JavascriptTreeView_OnExpansionChanged__DelegateSignature, Instance) == 0x000010, "Member 'JavascriptTreeView_OnExpansionChanged__DelegateSignature::Instance' has a wrong offset!");

// DelegateFunction JavascriptUMG.JavascriptTreeView.OnGenerateRow__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct JavascriptTreeView_OnGenerateRow__DelegateSignature final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ID;                                                // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJavascriptTreeView*                    Instance;                                          // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                ReturnValue;                                       // 0x0018(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptTreeView_OnGenerateRow__DelegateSignature) == 0x000008, "Wrong alignment on JavascriptTreeView_OnGenerateRow__DelegateSignature");
//static_assert(sizeof(JavascriptTreeView_OnGenerateRow__DelegateSignature) == 0x000020, "Wrong size on JavascriptTreeView_OnGenerateRow__DelegateSignature");
//static_assert(offsetof(JavascriptTreeView_OnGenerateRow__DelegateSignature, Object) == 0x000000, "Member 'JavascriptTreeView_OnGenerateRow__DelegateSignature::Object' has a wrong offset!");
//static_assert(offsetof(JavascriptTreeView_OnGenerateRow__DelegateSignature, ID) == 0x000008, "Member 'JavascriptTreeView_OnGenerateRow__DelegateSignature::ID' has a wrong offset!");
//static_assert(offsetof(JavascriptTreeView_OnGenerateRow__DelegateSignature, Instance) == 0x000010, "Member 'JavascriptTreeView_OnGenerateRow__DelegateSignature::Instance' has a wrong offset!");
//static_assert(offsetof(JavascriptTreeView_OnGenerateRow__DelegateSignature, ReturnValue) == 0x000018, "Member 'JavascriptTreeView_OnGenerateRow__DelegateSignature::ReturnValue' has a wrong offset!");

// DelegateFunction JavascriptUMG.JavascriptTreeView.OnGetChildrenUObject__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct JavascriptTreeView_OnGetChildrenUObject__DelegateSignature final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UJavascriptTreeView*                    Instance;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptTreeView_OnGetChildrenUObject__DelegateSignature) == 0x000008, "Wrong alignment on JavascriptTreeView_OnGetChildrenUObject__DelegateSignature");
//static_assert(sizeof(JavascriptTreeView_OnGetChildrenUObject__DelegateSignature) == 0x000010, "Wrong size on JavascriptTreeView_OnGetChildrenUObject__DelegateSignature");
//static_assert(offsetof(JavascriptTreeView_OnGetChildrenUObject__DelegateSignature, Item) == 0x000000, "Member 'JavascriptTreeView_OnGetChildrenUObject__DelegateSignature::Item' has a wrong offset!");
//static_assert(offsetof(JavascriptTreeView_OnGetChildrenUObject__DelegateSignature, Instance) == 0x000008, "Member 'JavascriptTreeView_OnGetChildrenUObject__DelegateSignature::Instance' has a wrong offset!");

// Function JavascriptUMG.JavascriptTreeView.OnSelectionChanged
// 0x0010 (0x0010 - 0x0000)
struct JavascriptTreeView_OnSelectionChanged final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESelectInfo                                   Type;                                              // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(JavascriptTreeView_OnSelectionChanged) == 0x000008, "Wrong alignment on JavascriptTreeView_OnSelectionChanged");
//static_assert(sizeof(JavascriptTreeView_OnSelectionChanged) == 0x000010, "Wrong size on JavascriptTreeView_OnSelectionChanged");
//static_assert(offsetof(JavascriptTreeView_OnSelectionChanged, Object) == 0x000000, "Member 'JavascriptTreeView_OnSelectionChanged::Object' has a wrong offset!");
//static_assert(offsetof(JavascriptTreeView_OnSelectionChanged, Type) == 0x000008, "Member 'JavascriptTreeView_OnSelectionChanged::Type' has a wrong offset!");

// Function JavascriptUMG.JavascriptTreeView.SetDoubleClickSelection
// 0x0008 (0x0008 - 0x0000)
struct JavascriptTreeView_SetDoubleClickSelection final
{
public:
	class UObject*                                SelectedItem;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptTreeView_SetDoubleClickSelection) == 0x000008, "Wrong alignment on JavascriptTreeView_SetDoubleClickSelection");
//static_assert(sizeof(JavascriptTreeView_SetDoubleClickSelection) == 0x000008, "Wrong size on JavascriptTreeView_SetDoubleClickSelection");
//static_assert(offsetof(JavascriptTreeView_SetDoubleClickSelection, SelectedItem) == 0x000000, "Member 'JavascriptTreeView_SetDoubleClickSelection::SelectedItem' has a wrong offset!");

// Function JavascriptUMG.JavascriptTreeView.SetItemExpansion
// 0x0010 (0x0010 - 0x0000)
struct JavascriptTreeView_SetItemExpansion final
{
public:
	class UObject*                                InItem;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InShouldExpandItem;                                // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(JavascriptTreeView_SetItemExpansion) == 0x000008, "Wrong alignment on JavascriptTreeView_SetItemExpansion");
//static_assert(sizeof(JavascriptTreeView_SetItemExpansion) == 0x000010, "Wrong size on JavascriptTreeView_SetItemExpansion");
//static_assert(offsetof(JavascriptTreeView_SetItemExpansion, InItem) == 0x000000, "Member 'JavascriptTreeView_SetItemExpansion::InItem' has a wrong offset!");
//static_assert(offsetof(JavascriptTreeView_SetItemExpansion, InShouldExpandItem) == 0x000008, "Member 'JavascriptTreeView_SetItemExpansion::InShouldExpandItem' has a wrong offset!");

// Function JavascriptUMG.JavascriptTreeView.SetSelection
// 0x0008 (0x0008 - 0x0000)
struct JavascriptTreeView_SetSelection final
{
public:
	class UObject*                                SoleSelectedItem;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptTreeView_SetSelection) == 0x000008, "Wrong alignment on JavascriptTreeView_SetSelection");
//static_assert(sizeof(JavascriptTreeView_SetSelection) == 0x000008, "Wrong size on JavascriptTreeView_SetSelection");
//static_assert(offsetof(JavascriptTreeView_SetSelection, SoleSelectedItem) == 0x000000, "Member 'JavascriptTreeView_SetSelection::SoleSelectedItem' has a wrong offset!");

// Function JavascriptUMG.JavascriptTreeView.SetSingleExpandedItem
// 0x0008 (0x0008 - 0x0000)
struct JavascriptTreeView_SetSingleExpandedItem final
{
public:
	class UObject*                                InItem;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptTreeView_SetSingleExpandedItem) == 0x000008, "Wrong alignment on JavascriptTreeView_SetSingleExpandedItem");
//static_assert(sizeof(JavascriptTreeView_SetSingleExpandedItem) == 0x000008, "Wrong size on JavascriptTreeView_SetSingleExpandedItem");
//static_assert(offsetof(JavascriptTreeView_SetSingleExpandedItem, InItem) == 0x000000, "Member 'JavascriptTreeView_SetSingleExpandedItem::InItem' has a wrong offset!");

// Function JavascriptUMG.JavascriptListView.OnClick
// 0x0008 (0x0008 - 0x0000)
struct JavascriptListView_OnClick final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptListView_OnClick) == 0x000008, "Wrong alignment on JavascriptListView_OnClick");
//static_assert(sizeof(JavascriptListView_OnClick) == 0x000008, "Wrong size on JavascriptListView_OnClick");
//static_assert(offsetof(JavascriptListView_OnClick, Object) == 0x000000, "Member 'JavascriptListView_OnClick::Object' has a wrong offset!");

// Function JavascriptUMG.JavascriptRichTextBlockHyperlinkDecorator.GetMetaData
// 0x0020 (0x0020 - 0x0000)
struct JavascriptRichTextBlockHyperlinkDecorator_GetMetaData final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptRichTextBlockHyperlinkDecorator_GetMetaData) == 0x000008, "Wrong alignment on JavascriptRichTextBlockHyperlinkDecorator_GetMetaData");
//static_assert(sizeof(JavascriptRichTextBlockHyperlinkDecorator_GetMetaData) == 0x000020, "Wrong size on JavascriptRichTextBlockHyperlinkDecorator_GetMetaData");
//static_assert(offsetof(JavascriptRichTextBlockHyperlinkDecorator_GetMetaData, Key) == 0x000000, "Member 'JavascriptRichTextBlockHyperlinkDecorator_GetMetaData::Key' has a wrong offset!");
//static_assert(offsetof(JavascriptRichTextBlockHyperlinkDecorator_GetMetaData, ReturnValue) == 0x000010, "Member 'JavascriptRichTextBlockHyperlinkDecorator_GetMetaData::ReturnValue' has a wrong offset!");

// DelegateFunction JavascriptUMG.JavascriptSearchBox.OnEditableTextChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct JavascriptSearchBox_OnEditableTextChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text_0;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptSearchBox_OnEditableTextChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on JavascriptSearchBox_OnEditableTextChangedEvent__DelegateSignature");
//static_assert(sizeof(JavascriptSearchBox_OnEditableTextChangedEvent__DelegateSignature) == 0x000018, "Wrong size on JavascriptSearchBox_OnEditableTextChangedEvent__DelegateSignature");
//static_assert(offsetof(JavascriptSearchBox_OnEditableTextChangedEvent__DelegateSignature, Text_0) == 0x000000, "Member 'JavascriptSearchBox_OnEditableTextChangedEvent__DelegateSignature::Text_0' has a wrong offset!");

// DelegateFunction JavascriptUMG.JavascriptSearchBox.OnEditableTextCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct JavascriptSearchBox_OnEditableTextCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text_0;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(JavascriptSearchBox_OnEditableTextCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on JavascriptSearchBox_OnEditableTextCommittedEvent__DelegateSignature");
//static_assert(sizeof(JavascriptSearchBox_OnEditableTextCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on JavascriptSearchBox_OnEditableTextCommittedEvent__DelegateSignature");
//static_assert(offsetof(JavascriptSearchBox_OnEditableTextCommittedEvent__DelegateSignature, Text_0) == 0x000000, "Member 'JavascriptSearchBox_OnEditableTextCommittedEvent__DelegateSignature::Text_0' has a wrong offset!");
//static_assert(offsetof(JavascriptSearchBox_OnEditableTextCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'JavascriptSearchBox_OnEditableTextCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function JavascriptUMG.JavascriptSearchBox.OnKeyDown
// 0x0130 (0x0130 - 0x0000)
struct JavascriptSearchBox_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0040(0x0038)(Parm, NativeAccessSpecifierPublic)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptSearchBox_OnKeyDown) == 0x000008, "Wrong alignment on JavascriptSearchBox_OnKeyDown");
//static_assert(sizeof(JavascriptSearchBox_OnKeyDown) == 0x000130, "Wrong size on JavascriptSearchBox_OnKeyDown");
//static_assert(offsetof(JavascriptSearchBox_OnKeyDown, MyGeometry) == 0x000000, "Member 'JavascriptSearchBox_OnKeyDown::MyGeometry' has a wrong offset!");
//static_assert(offsetof(JavascriptSearchBox_OnKeyDown, InKeyEvent) == 0x000040, "Member 'JavascriptSearchBox_OnKeyDown::InKeyEvent' has a wrong offset!");
//static_assert(offsetof(JavascriptSearchBox_OnKeyDown, ReturnValue) == 0x000078, "Member 'JavascriptSearchBox_OnKeyDown::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptSearchBox.SetHintText
// 0x0018 (0x0018 - 0x0000)
struct JavascriptSearchBox_SetHintText final
{
public:
	class FText                                   InHintText;                                        // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptSearchBox_SetHintText) == 0x000008, "Wrong alignment on JavascriptSearchBox_SetHintText");
//static_assert(sizeof(JavascriptSearchBox_SetHintText) == 0x000018, "Wrong size on JavascriptSearchBox_SetHintText");
//static_assert(offsetof(JavascriptSearchBox_SetHintText, InHintText) == 0x000000, "Member 'JavascriptSearchBox_SetHintText::InHintText' has a wrong offset!");

// Function JavascriptUMG.JavascriptSearchBox.SetText
// 0x0018 (0x0018 - 0x0000)
struct JavascriptSearchBox_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptSearchBox_SetText) == 0x000008, "Wrong alignment on JavascriptSearchBox_SetText");
//static_assert(sizeof(JavascriptSearchBox_SetText) == 0x000018, "Wrong size on JavascriptSearchBox_SetText");
//static_assert(offsetof(JavascriptSearchBox_SetText, InText) == 0x000000, "Member 'JavascriptSearchBox_SetText::InText' has a wrong offset!");

// DelegateFunction JavascriptUMG.JavascriptToolbarButtonContext.BoolDelegate__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct JavascriptToolbarButtonContext_BoolDelegate__DelegateSignature final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptToolbarButtonContext_BoolDelegate__DelegateSignature) == 0x000001, "Wrong alignment on JavascriptToolbarButtonContext_BoolDelegate__DelegateSignature");
//static_assert(sizeof(JavascriptToolbarButtonContext_BoolDelegate__DelegateSignature) == 0x000001, "Wrong size on JavascriptToolbarButtonContext_BoolDelegate__DelegateSignature");
//static_assert(offsetof(JavascriptToolbarButtonContext_BoolDelegate__DelegateSignature, ReturnValue) == 0x000000, "Member 'JavascriptToolbarButtonContext_BoolDelegate__DelegateSignature::ReturnValue' has a wrong offset!");

// DelegateFunction JavascriptUMG.JavascriptToolbarButtonContext.IconDelegate__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct JavascriptToolbarButtonContext_IconDelegate__DelegateSignature final
{
public:
	struct FJavascriptSlateIcon                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptToolbarButtonContext_IconDelegate__DelegateSignature) == 0x000004, "Wrong alignment on JavascriptToolbarButtonContext_IconDelegate__DelegateSignature");
//static_assert(sizeof(JavascriptToolbarButtonContext_IconDelegate__DelegateSignature) == 0x000018, "Wrong size on JavascriptToolbarButtonContext_IconDelegate__DelegateSignature");
//static_assert(offsetof(JavascriptToolbarButtonContext_IconDelegate__DelegateSignature, ReturnValue) == 0x000000, "Member 'JavascriptToolbarButtonContext_IconDelegate__DelegateSignature::ReturnValue' has a wrong offset!");

// DelegateFunction JavascriptUMG.JavascriptToolbarButtonContext.JavascriptCanExecuteActionWithEditingObject__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct JavascriptToolbarButtonContext_JavascriptCanExecuteActionWithEditingObject__DelegateSignature final
{
public:
	class UObject*                                EditingObject;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(JavascriptToolbarButtonContext_JavascriptCanExecuteActionWithEditingObject__DelegateSignature) == 0x000008, "Wrong alignment on JavascriptToolbarButtonContext_JavascriptCanExecuteActionWithEditingObject__DelegateSignature");
//static_assert(sizeof(JavascriptToolbarButtonContext_JavascriptCanExecuteActionWithEditingObject__DelegateSignature) == 0x000010, "Wrong size on JavascriptToolbarButtonContext_JavascriptCanExecuteActionWithEditingObject__DelegateSignature");
//static_assert(offsetof(JavascriptToolbarButtonContext_JavascriptCanExecuteActionWithEditingObject__DelegateSignature, EditingObject) == 0x000000, "Member 'JavascriptToolbarButtonContext_JavascriptCanExecuteActionWithEditingObject__DelegateSignature::EditingObject' has a wrong offset!");
//static_assert(offsetof(JavascriptToolbarButtonContext_JavascriptCanExecuteActionWithEditingObject__DelegateSignature, ReturnValue) == 0x000008, "Member 'JavascriptToolbarButtonContext_JavascriptCanExecuteActionWithEditingObject__DelegateSignature::ReturnValue' has a wrong offset!");

// DelegateFunction JavascriptUMG.JavascriptToolbarButtonContext.JavascriptExecuteActionWithEditingObject__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct JavascriptToolbarButtonContext_JavascriptExecuteActionWithEditingObject__DelegateSignature final
{
public:
	class UObject*                                EditingObject;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptToolbarButtonContext_JavascriptExecuteActionWithEditingObject__DelegateSignature) == 0x000008, "Wrong alignment on JavascriptToolbarButtonContext_JavascriptExecuteActionWithEditingObject__DelegateSignature");
//static_assert(sizeof(JavascriptToolbarButtonContext_JavascriptExecuteActionWithEditingObject__DelegateSignature) == 0x000008, "Wrong size on JavascriptToolbarButtonContext_JavascriptExecuteActionWithEditingObject__DelegateSignature");
//static_assert(offsetof(JavascriptToolbarButtonContext_JavascriptExecuteActionWithEditingObject__DelegateSignature, EditingObject) == 0x000000, "Member 'JavascriptToolbarButtonContext_JavascriptExecuteActionWithEditingObject__DelegateSignature::EditingObject' has a wrong offset!");

// DelegateFunction JavascriptUMG.JavascriptToolbarButtonContext.TextDelegate__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct JavascriptToolbarButtonContext_TextDelegate__DelegateSignature final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptToolbarButtonContext_TextDelegate__DelegateSignature) == 0x000008, "Wrong alignment on JavascriptToolbarButtonContext_TextDelegate__DelegateSignature");
//static_assert(sizeof(JavascriptToolbarButtonContext_TextDelegate__DelegateSignature) == 0x000018, "Wrong size on JavascriptToolbarButtonContext_TextDelegate__DelegateSignature");
//static_assert(offsetof(JavascriptToolbarButtonContext_TextDelegate__DelegateSignature, ReturnValue) == 0x000000, "Member 'JavascriptToolbarButtonContext_TextDelegate__DelegateSignature::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptStyleSetLibrary.GetBrush
// 0x00E0 (0x00E0 - 0x0000)
struct JavascriptStyleSetLibrary_GetBrush final
{
public:
	struct FJavascriptStyleSet                    Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   StyleName;                                         // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                            ReturnValue;                                       // 0x0010(0x00D0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptStyleSetLibrary_GetBrush) == 0x000010, "Wrong alignment on JavascriptStyleSetLibrary_GetBrush");
//static_assert(sizeof(JavascriptStyleSetLibrary_GetBrush) == 0x0000E0, "Wrong size on JavascriptStyleSetLibrary_GetBrush");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetBrush, Handle) == 0x000000, "Member 'JavascriptStyleSetLibrary_GetBrush::Handle' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetBrush, StyleName) == 0x000008, "Member 'JavascriptStyleSetLibrary_GetBrush::StyleName' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetBrush, ReturnValue) == 0x000010, "Member 'JavascriptStyleSetLibrary_GetBrush::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptStyleSetLibrary.GetButtonStyle
// 0x0400 (0x0400 - 0x0000)
struct JavascriptStyleSetLibrary_GetButtonStyle final
{
public:
	struct FJavascriptStyleSet                    Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   StyleName;                                         // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FButtonStyle                           ReturnValue;                                       // 0x0010(0x03F0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptStyleSetLibrary_GetButtonStyle) == 0x000010, "Wrong alignment on JavascriptStyleSetLibrary_GetButtonStyle");
//static_assert(sizeof(JavascriptStyleSetLibrary_GetButtonStyle) == 0x000400, "Wrong size on JavascriptStyleSetLibrary_GetButtonStyle");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetButtonStyle, Handle) == 0x000000, "Member 'JavascriptStyleSetLibrary_GetButtonStyle::Handle' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetButtonStyle, StyleName) == 0x000008, "Member 'JavascriptStyleSetLibrary_GetButtonStyle::StyleName' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetButtonStyle, ReturnValue) == 0x000010, "Member 'JavascriptStyleSetLibrary_GetButtonStyle::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptStyleSetLibrary.GetCheckBoxStyle
// 0x0AE0 (0x0AE0 - 0x0000)
struct JavascriptStyleSetLibrary_GetCheckBoxStyle final
{
public:
	struct FJavascriptStyleSet                    Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   StyleName;                                         // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCheckBoxStyle                         ReturnValue;                                       // 0x0010(0x0AD0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptStyleSetLibrary_GetCheckBoxStyle) == 0x000010, "Wrong alignment on JavascriptStyleSetLibrary_GetCheckBoxStyle");
//static_assert(sizeof(JavascriptStyleSetLibrary_GetCheckBoxStyle) == 0x000AE0, "Wrong size on JavascriptStyleSetLibrary_GetCheckBoxStyle");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetCheckBoxStyle, Handle) == 0x000000, "Member 'JavascriptStyleSetLibrary_GetCheckBoxStyle::Handle' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetCheckBoxStyle, StyleName) == 0x000008, "Member 'JavascriptStyleSetLibrary_GetCheckBoxStyle::StyleName' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetCheckBoxStyle, ReturnValue) == 0x000010, "Member 'JavascriptStyleSetLibrary_GetCheckBoxStyle::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptStyleSetLibrary.GetColor
// 0x0020 (0x0020 - 0x0000)
struct JavascriptStyleSetLibrary_GetColor final
{
public:
	struct FJavascriptStyleSet                    Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   StyleName;                                         // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptStyleSetLibrary_GetColor) == 0x000004, "Wrong alignment on JavascriptStyleSetLibrary_GetColor");
//static_assert(sizeof(JavascriptStyleSetLibrary_GetColor) == 0x000020, "Wrong size on JavascriptStyleSetLibrary_GetColor");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetColor, Handle) == 0x000000, "Member 'JavascriptStyleSetLibrary_GetColor::Handle' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetColor, StyleName) == 0x000008, "Member 'JavascriptStyleSetLibrary_GetColor::StyleName' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetColor, ReturnValue) == 0x000010, "Member 'JavascriptStyleSetLibrary_GetColor::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptStyleSetLibrary.GetComboBoxStyle
// 0x0670 (0x0670 - 0x0000)
struct JavascriptStyleSetLibrary_GetComboBoxStyle final
{
public:
	struct FJavascriptStyleSet                    Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   StyleName;                                         // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FComboBoxStyle                         ReturnValue;                                       // 0x0010(0x0660)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptStyleSetLibrary_GetComboBoxStyle) == 0x000010, "Wrong alignment on JavascriptStyleSetLibrary_GetComboBoxStyle");
//static_assert(sizeof(JavascriptStyleSetLibrary_GetComboBoxStyle) == 0x000670, "Wrong size on JavascriptStyleSetLibrary_GetComboBoxStyle");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetComboBoxStyle, Handle) == 0x000000, "Member 'JavascriptStyleSetLibrary_GetComboBoxStyle::Handle' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetComboBoxStyle, StyleName) == 0x000008, "Member 'JavascriptStyleSetLibrary_GetComboBoxStyle::StyleName' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetComboBoxStyle, ReturnValue) == 0x000010, "Member 'JavascriptStyleSetLibrary_GetComboBoxStyle::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptStyleSetLibrary.GetComboButtonStyle
// 0x0610 (0x0610 - 0x0000)
struct JavascriptStyleSetLibrary_GetComboButtonStyle final
{
public:
	struct FJavascriptStyleSet                    Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   StyleName;                                         // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FComboButtonStyle                      ReturnValue;                                       // 0x0010(0x0600)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptStyleSetLibrary_GetComboButtonStyle) == 0x000010, "Wrong alignment on JavascriptStyleSetLibrary_GetComboButtonStyle");
//static_assert(sizeof(JavascriptStyleSetLibrary_GetComboButtonStyle) == 0x000610, "Wrong size on JavascriptStyleSetLibrary_GetComboButtonStyle");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetComboButtonStyle, Handle) == 0x000000, "Member 'JavascriptStyleSetLibrary_GetComboButtonStyle::Handle' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetComboButtonStyle, StyleName) == 0x000008, "Member 'JavascriptStyleSetLibrary_GetComboButtonStyle::StyleName' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetComboButtonStyle, ReturnValue) == 0x000010, "Member 'JavascriptStyleSetLibrary_GetComboButtonStyle::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptStyleSetLibrary.GetEditableTextBoxStyle
// 0x0BE0 (0x0BE0 - 0x0000)
struct JavascriptStyleSetLibrary_GetEditableTextBoxStyle final
{
public:
	struct FJavascriptStyleSet                    Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   StyleName;                                         // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEditableTextBoxStyle                  ReturnValue;                                       // 0x0010(0x0BD0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptStyleSetLibrary_GetEditableTextBoxStyle) == 0x000010, "Wrong alignment on JavascriptStyleSetLibrary_GetEditableTextBoxStyle");
//static_assert(sizeof(JavascriptStyleSetLibrary_GetEditableTextBoxStyle) == 0x000BE0, "Wrong size on JavascriptStyleSetLibrary_GetEditableTextBoxStyle");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetEditableTextBoxStyle, Handle) == 0x000000, "Member 'JavascriptStyleSetLibrary_GetEditableTextBoxStyle::Handle' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetEditableTextBoxStyle, StyleName) == 0x000008, "Member 'JavascriptStyleSetLibrary_GetEditableTextBoxStyle::StyleName' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetEditableTextBoxStyle, ReturnValue) == 0x000010, "Member 'JavascriptStyleSetLibrary_GetEditableTextBoxStyle::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptStyleSetLibrary.GetEditableTextStyle
// 0x0330 (0x0330 - 0x0000)
struct JavascriptStyleSetLibrary_GetEditableTextStyle final
{
public:
	struct FJavascriptStyleSet                    Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   StyleName;                                         // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEditableTextStyle                     ReturnValue;                                       // 0x0010(0x0320)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptStyleSetLibrary_GetEditableTextStyle) == 0x000010, "Wrong alignment on JavascriptStyleSetLibrary_GetEditableTextStyle");
//static_assert(sizeof(JavascriptStyleSetLibrary_GetEditableTextStyle) == 0x000330, "Wrong size on JavascriptStyleSetLibrary_GetEditableTextStyle");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetEditableTextStyle, Handle) == 0x000000, "Member 'JavascriptStyleSetLibrary_GetEditableTextStyle::Handle' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetEditableTextStyle, StyleName) == 0x000008, "Member 'JavascriptStyleSetLibrary_GetEditableTextStyle::StyleName' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetEditableTextStyle, ReturnValue) == 0x000010, "Member 'JavascriptStyleSetLibrary_GetEditableTextStyle::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptStyleSetLibrary.GetFloat
// 0x0014 (0x0014 - 0x0000)
struct JavascriptStyleSetLibrary_GetFloat final
{
public:
	struct FJavascriptStyleSet                    Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   StyleName;                                         // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptStyleSetLibrary_GetFloat) == 0x000004, "Wrong alignment on JavascriptStyleSetLibrary_GetFloat");
//static_assert(sizeof(JavascriptStyleSetLibrary_GetFloat) == 0x000014, "Wrong size on JavascriptStyleSetLibrary_GetFloat");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetFloat, Handle) == 0x000000, "Member 'JavascriptStyleSetLibrary_GetFloat::Handle' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetFloat, StyleName) == 0x000008, "Member 'JavascriptStyleSetLibrary_GetFloat::StyleName' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetFloat, ReturnValue) == 0x000010, "Member 'JavascriptStyleSetLibrary_GetFloat::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptStyleSetLibrary.GetFontStyle
// 0x0098 (0x0098 - 0x0000)
struct JavascriptStyleSetLibrary_GetFontStyle final
{
public:
	struct FJavascriptStyleSet                    Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   StyleName;                                         // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                         ReturnValue;                                       // 0x0010(0x0088)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptStyleSetLibrary_GetFontStyle) == 0x000008, "Wrong alignment on JavascriptStyleSetLibrary_GetFontStyle");
//static_assert(sizeof(JavascriptStyleSetLibrary_GetFontStyle) == 0x000098, "Wrong size on JavascriptStyleSetLibrary_GetFontStyle");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetFontStyle, Handle) == 0x000000, "Member 'JavascriptStyleSetLibrary_GetFontStyle::Handle' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetFontStyle, StyleName) == 0x000008, "Member 'JavascriptStyleSetLibrary_GetFontStyle::StyleName' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetFontStyle, ReturnValue) == 0x000010, "Member 'JavascriptStyleSetLibrary_GetFontStyle::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptStyleSetLibrary.GetMargin
// 0x0020 (0x0020 - 0x0000)
struct JavascriptStyleSetLibrary_GetMargin final
{
public:
	struct FJavascriptStyleSet                    Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   StyleName;                                         // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMargin                                ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptStyleSetLibrary_GetMargin) == 0x000004, "Wrong alignment on JavascriptStyleSetLibrary_GetMargin");
//static_assert(sizeof(JavascriptStyleSetLibrary_GetMargin) == 0x000020, "Wrong size on JavascriptStyleSetLibrary_GetMargin");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetMargin, Handle) == 0x000000, "Member 'JavascriptStyleSetLibrary_GetMargin::Handle' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetMargin, StyleName) == 0x000008, "Member 'JavascriptStyleSetLibrary_GetMargin::StyleName' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetMargin, ReturnValue) == 0x000010, "Member 'JavascriptStyleSetLibrary_GetMargin::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptStyleSetLibrary.GetProgressBarStyle
// 0x02A0 (0x02A0 - 0x0000)
struct JavascriptStyleSetLibrary_GetProgressBarStyle final
{
public:
	struct FJavascriptStyleSet                    Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   StyleName;                                         // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProgressBarStyle                      ReturnValue;                                       // 0x0010(0x0290)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptStyleSetLibrary_GetProgressBarStyle) == 0x000010, "Wrong alignment on JavascriptStyleSetLibrary_GetProgressBarStyle");
//static_assert(sizeof(JavascriptStyleSetLibrary_GetProgressBarStyle) == 0x0002A0, "Wrong size on JavascriptStyleSetLibrary_GetProgressBarStyle");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetProgressBarStyle, Handle) == 0x000000, "Member 'JavascriptStyleSetLibrary_GetProgressBarStyle::Handle' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetProgressBarStyle, StyleName) == 0x000008, "Member 'JavascriptStyleSetLibrary_GetProgressBarStyle::StyleName' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetProgressBarStyle, ReturnValue) == 0x000010, "Member 'JavascriptStyleSetLibrary_GetProgressBarStyle::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptStyleSetLibrary.GetSlateColor
// 0x0024 (0x0024 - 0x0000)
struct JavascriptStyleSetLibrary_GetSlateColor final
{
public:
	struct FJavascriptStyleSet                    Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   StyleName;                                         // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                            ReturnValue;                                       // 0x0010(0x0014)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptStyleSetLibrary_GetSlateColor) == 0x000004, "Wrong alignment on JavascriptStyleSetLibrary_GetSlateColor");
//static_assert(sizeof(JavascriptStyleSetLibrary_GetSlateColor) == 0x000024, "Wrong size on JavascriptStyleSetLibrary_GetSlateColor");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetSlateColor, Handle) == 0x000000, "Member 'JavascriptStyleSetLibrary_GetSlateColor::Handle' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetSlateColor, StyleName) == 0x000008, "Member 'JavascriptStyleSetLibrary_GetSlateColor::StyleName' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetSlateColor, ReturnValue) == 0x000010, "Member 'JavascriptStyleSetLibrary_GetSlateColor::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptStyleSetLibrary.GetSound
// 0x0028 (0x0028 - 0x0000)
struct JavascriptStyleSetLibrary_GetSound final
{
public:
	struct FJavascriptStyleSet                    Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   StyleName;                                         // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateSound                            ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptStyleSetLibrary_GetSound) == 0x000008, "Wrong alignment on JavascriptStyleSetLibrary_GetSound");
//static_assert(sizeof(JavascriptStyleSetLibrary_GetSound) == 0x000028, "Wrong size on JavascriptStyleSetLibrary_GetSound");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetSound, Handle) == 0x000000, "Member 'JavascriptStyleSetLibrary_GetSound::Handle' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetSound, StyleName) == 0x000008, "Member 'JavascriptStyleSetLibrary_GetSound::StyleName' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetSound, ReturnValue) == 0x000010, "Member 'JavascriptStyleSetLibrary_GetSound::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptStyleSetLibrary.GetTextBlockStyle
// 0x0380 (0x0380 - 0x0000)
struct JavascriptStyleSetLibrary_GetTextBlockStyle final
{
public:
	struct FJavascriptStyleSet                    Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   StyleName;                                         // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTextBlockStyle                        ReturnValue;                                       // 0x0010(0x0370)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptStyleSetLibrary_GetTextBlockStyle) == 0x000010, "Wrong alignment on JavascriptStyleSetLibrary_GetTextBlockStyle");
//static_assert(sizeof(JavascriptStyleSetLibrary_GetTextBlockStyle) == 0x000380, "Wrong size on JavascriptStyleSetLibrary_GetTextBlockStyle");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetTextBlockStyle, Handle) == 0x000000, "Member 'JavascriptStyleSetLibrary_GetTextBlockStyle::Handle' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetTextBlockStyle, StyleName) == 0x000008, "Member 'JavascriptStyleSetLibrary_GetTextBlockStyle::StyleName' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetTextBlockStyle, ReturnValue) == 0x000010, "Member 'JavascriptStyleSetLibrary_GetTextBlockStyle::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptStyleSetLibrary.GetVector
// 0x0020 (0x0020 - 0x0000)
struct JavascriptStyleSetLibrary_GetVector final
{
public:
	struct FJavascriptStyleSet                    Handle;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   StyleName;                                         // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptStyleSetLibrary_GetVector) == 0x000008, "Wrong alignment on JavascriptStyleSetLibrary_GetVector");
//static_assert(sizeof(JavascriptStyleSetLibrary_GetVector) == 0x000020, "Wrong size on JavascriptStyleSetLibrary_GetVector");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetVector, Handle) == 0x000000, "Member 'JavascriptStyleSetLibrary_GetVector::Handle' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetVector, StyleName) == 0x000008, "Member 'JavascriptStyleSetLibrary_GetVector::StyleName' has a wrong offset!");
//static_assert(offsetof(JavascriptStyleSetLibrary_GetVector, ReturnValue) == 0x000010, "Member 'JavascriptStyleSetLibrary_GetVector::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptTextBlock.SetHighlightText
// 0x0018 (0x0018 - 0x0000)
struct JavascriptTextBlock_SetHighlightText final
{
public:
	class FText                                   InHighlightText;                                   // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptTextBlock_SetHighlightText) == 0x000008, "Wrong alignment on JavascriptTextBlock_SetHighlightText");
//static_assert(sizeof(JavascriptTextBlock_SetHighlightText) == 0x000018, "Wrong size on JavascriptTextBlock_SetHighlightText");
//static_assert(offsetof(JavascriptTextBlock_SetHighlightText, InHighlightText) == 0x000000, "Member 'JavascriptTextBlock_SetHighlightText::InHighlightText' has a wrong offset!");

// Function JavascriptUMG.JavascriptTileView.OnClick
// 0x0008 (0x0008 - 0x0000)
struct JavascriptTileView_OnClick final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptTileView_OnClick) == 0x000008, "Wrong alignment on JavascriptTileView_OnClick");
//static_assert(sizeof(JavascriptTileView_OnClick) == 0x000008, "Wrong size on JavascriptTileView_OnClick");
//static_assert(offsetof(JavascriptTileView_OnClick, Object) == 0x000000, "Member 'JavascriptTileView_OnClick::Object' has a wrong offset!");

// Function JavascriptUMG.JavascriptTileView.OnDoubleClick
// 0x0008 (0x0008 - 0x0000)
struct JavascriptTileView_OnDoubleClick final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptTileView_OnDoubleClick) == 0x000008, "Wrong alignment on JavascriptTileView_OnDoubleClick");
//static_assert(sizeof(JavascriptTileView_OnDoubleClick) == 0x000008, "Wrong size on JavascriptTileView_OnDoubleClick");
//static_assert(offsetof(JavascriptTileView_OnDoubleClick, Object) == 0x000000, "Member 'JavascriptTileView_OnDoubleClick::Object' has a wrong offset!");

// Function JavascriptUMG.JavascriptTileView.OnSelectionChanged
// 0x0010 (0x0010 - 0x0000)
struct JavascriptTileView_OnSelectionChanged final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESelectInfo                                   Type;                                              // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(JavascriptTileView_OnSelectionChanged) == 0x000008, "Wrong alignment on JavascriptTileView_OnSelectionChanged");
//static_assert(sizeof(JavascriptTileView_OnSelectionChanged) == 0x000010, "Wrong size on JavascriptTileView_OnSelectionChanged");
//static_assert(offsetof(JavascriptTileView_OnSelectionChanged, Object) == 0x000000, "Member 'JavascriptTileView_OnSelectionChanged::Object' has a wrong offset!");
//static_assert(offsetof(JavascriptTileView_OnSelectionChanged, Type) == 0x000008, "Member 'JavascriptTileView_OnSelectionChanged::Type' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGBlueprintLibrary.AddLine
// 0x0038 (0x0038 - 0x0000)
struct JavascriptUMGBlueprintLibrary_AddLine final
{
public:
	struct FJavascriptTextLayout                  TextLayout;                                        // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UJavascriptTextModel*                   Model;                                             // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FJavascriptSlateTextRun>        Runs;                                              // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptUMGBlueprintLibrary_AddLine) == 0x000008, "Wrong alignment on JavascriptUMGBlueprintLibrary_AddLine");
//static_assert(sizeof(JavascriptUMGBlueprintLibrary_AddLine) == 0x000038, "Wrong size on JavascriptUMGBlueprintLibrary_AddLine");
//static_assert(offsetof(JavascriptUMGBlueprintLibrary_AddLine, TextLayout) == 0x000000, "Member 'JavascriptUMGBlueprintLibrary_AddLine::TextLayout' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGBlueprintLibrary_AddLine, Model) == 0x000020, "Member 'JavascriptUMGBlueprintLibrary_AddLine::Model' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGBlueprintLibrary_AddLine, Runs) == 0x000028, "Member 'JavascriptUMGBlueprintLibrary_AddLine::Runs' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGBlueprintLibrary.ClearLines
// 0x0020 (0x0020 - 0x0000)
struct JavascriptUMGBlueprintLibrary_ClearLines final
{
public:
	struct FJavascriptTextLayout                  TextLayout;                                        // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptUMGBlueprintLibrary_ClearLines) == 0x000008, "Wrong alignment on JavascriptUMGBlueprintLibrary_ClearLines");
//static_assert(sizeof(JavascriptUMGBlueprintLibrary_ClearLines) == 0x000020, "Wrong size on JavascriptUMGBlueprintLibrary_ClearLines");
//static_assert(offsetof(JavascriptUMGBlueprintLibrary_ClearLines, TextLayout) == 0x000000, "Member 'JavascriptUMGBlueprintLibrary_ClearLines::TextLayout' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGBlueprintLibrary.DrawSpaceSpline
// 0x0088 (0x0088 - 0x0000)
struct JavascriptUMGBlueprintLibrary_DrawSpaceSpline final
{
public:
	struct FPaintContext                          Context;                                           // 0x0000(0x0030)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector2D                              InStart;                                           // 0x0030(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              InStartDir;                                        // 0x0040(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              InEnd;                                             // 0x0050(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              InEndDir;                                          // 0x0060(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InThickness;                                       // 0x0070(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           InTint;                                            // 0x0074(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(JavascriptUMGBlueprintLibrary_DrawSpaceSpline) == 0x000008, "Wrong alignment on JavascriptUMGBlueprintLibrary_DrawSpaceSpline");
//static_assert(sizeof(JavascriptUMGBlueprintLibrary_DrawSpaceSpline) == 0x000088, "Wrong size on JavascriptUMGBlueprintLibrary_DrawSpaceSpline");
//static_assert(offsetof(JavascriptUMGBlueprintLibrary_DrawSpaceSpline, Context) == 0x000000, "Member 'JavascriptUMGBlueprintLibrary_DrawSpaceSpline::Context' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGBlueprintLibrary_DrawSpaceSpline, InStart) == 0x000030, "Member 'JavascriptUMGBlueprintLibrary_DrawSpaceSpline::InStart' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGBlueprintLibrary_DrawSpaceSpline, InStartDir) == 0x000040, "Member 'JavascriptUMGBlueprintLibrary_DrawSpaceSpline::InStartDir' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGBlueprintLibrary_DrawSpaceSpline, InEnd) == 0x000050, "Member 'JavascriptUMGBlueprintLibrary_DrawSpaceSpline::InEnd' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGBlueprintLibrary_DrawSpaceSpline, InEndDir) == 0x000060, "Member 'JavascriptUMGBlueprintLibrary_DrawSpaceSpline::InEndDir' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGBlueprintLibrary_DrawSpaceSpline, InThickness) == 0x000070, "Member 'JavascriptUMGBlueprintLibrary_DrawSpaceSpline::InThickness' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGBlueprintLibrary_DrawSpaceSpline, InTint) == 0x000074, "Member 'JavascriptUMGBlueprintLibrary_DrawSpaceSpline::InTint' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGBlueprintLibrary.GetAsText
// 0x0030 (0x0030 - 0x0000)
struct JavascriptUMGBlueprintLibrary_GetAsText final
{
public:
	struct FJavascriptTextLayout                  TextLayout;                                        // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptUMGBlueprintLibrary_GetAsText) == 0x000008, "Wrong alignment on JavascriptUMGBlueprintLibrary_GetAsText");
//static_assert(sizeof(JavascriptUMGBlueprintLibrary_GetAsText) == 0x000030, "Wrong size on JavascriptUMGBlueprintLibrary_GetAsText");
//static_assert(offsetof(JavascriptUMGBlueprintLibrary_GetAsText, TextLayout) == 0x000000, "Member 'JavascriptUMGBlueprintLibrary_GetAsText::TextLayout' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGBlueprintLibrary_GetAsText, ReturnValue) == 0x000020, "Member 'JavascriptUMGBlueprintLibrary_GetAsText::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGBlueprintLibrary.GetLineLength
// 0x0028 (0x0028 - 0x0000)
struct JavascriptUMGBlueprintLibrary_GetLineLength final
{
public:
	struct FJavascriptTextLayout                  TargetTextLayout;                                  // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(JavascriptUMGBlueprintLibrary_GetLineLength) == 0x000008, "Wrong alignment on JavascriptUMGBlueprintLibrary_GetLineLength");
//static_assert(sizeof(JavascriptUMGBlueprintLibrary_GetLineLength) == 0x000028, "Wrong size on JavascriptUMGBlueprintLibrary_GetLineLength");
//static_assert(offsetof(JavascriptUMGBlueprintLibrary_GetLineLength, TargetTextLayout) == 0x000000, "Member 'JavascriptUMGBlueprintLibrary_GetLineLength::TargetTextLayout' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGBlueprintLibrary_GetLineLength, ReturnValue) == 0x000020, "Member 'JavascriptUMGBlueprintLibrary_GetLineLength::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGBlueprintLibrary.SlateColor_UseForeground
// 0x0014 (0x0014 - 0x0000)
struct JavascriptUMGBlueprintLibrary_SlateColor_UseForeground final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0014)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptUMGBlueprintLibrary_SlateColor_UseForeground) == 0x000004, "Wrong alignment on JavascriptUMGBlueprintLibrary_SlateColor_UseForeground");
//static_assert(sizeof(JavascriptUMGBlueprintLibrary_SlateColor_UseForeground) == 0x000014, "Wrong size on JavascriptUMGBlueprintLibrary_SlateColor_UseForeground");
//static_assert(offsetof(JavascriptUMGBlueprintLibrary_SlateColor_UseForeground, ReturnValue) == 0x000000, "Member 'JavascriptUMGBlueprintLibrary_SlateColor_UseForeground::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGBlueprintLibrary.SlateColor_UseSubduedForeground
// 0x0014 (0x0014 - 0x0000)
struct JavascriptUMGBlueprintLibrary_SlateColor_UseSubduedForeground final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0014)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptUMGBlueprintLibrary_SlateColor_UseSubduedForeground) == 0x000004, "Wrong alignment on JavascriptUMGBlueprintLibrary_SlateColor_UseSubduedForeground");
//static_assert(sizeof(JavascriptUMGBlueprintLibrary_SlateColor_UseSubduedForeground) == 0x000014, "Wrong size on JavascriptUMGBlueprintLibrary_SlateColor_UseSubduedForeground");
//static_assert(offsetof(JavascriptUMGBlueprintLibrary_SlateColor_UseSubduedForeground, ReturnValue) == 0x000000, "Member 'JavascriptUMGBlueprintLibrary_SlateColor_UseSubduedForeground::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGLibrary.AddBorderBrush
// 0x0050 (0x0050 - 0x0000)
struct JavascriptUMGLibrary_AddBorderBrush final
{
public:
	struct FJavascriptSlateStyle                  StyleSet;                                          // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
	class FName                                   PropertyName;                                      // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InImageName;                                       // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMargin                                InMargin;                                          // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FLinearColor                           InColorAndOpacity;                                 // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateBrushImageType                          InImageType;                                       // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(JavascriptUMGLibrary_AddBorderBrush) == 0x000008, "Wrong alignment on JavascriptUMGLibrary_AddBorderBrush");
//static_assert(sizeof(JavascriptUMGLibrary_AddBorderBrush) == 0x000050, "Wrong size on JavascriptUMGLibrary_AddBorderBrush");
//static_assert(offsetof(JavascriptUMGLibrary_AddBorderBrush, StyleSet) == 0x000000, "Member 'JavascriptUMGLibrary_AddBorderBrush::StyleSet' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_AddBorderBrush, PropertyName) == 0x000010, "Member 'JavascriptUMGLibrary_AddBorderBrush::PropertyName' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_AddBorderBrush, InImageName) == 0x000018, "Member 'JavascriptUMGLibrary_AddBorderBrush::InImageName' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_AddBorderBrush, InMargin) == 0x000028, "Member 'JavascriptUMGLibrary_AddBorderBrush::InMargin' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_AddBorderBrush, InColorAndOpacity) == 0x000038, "Member 'JavascriptUMGLibrary_AddBorderBrush::InColorAndOpacity' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_AddBorderBrush, InImageType) == 0x000048, "Member 'JavascriptUMGLibrary_AddBorderBrush::InImageType' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGLibrary.AddBoxBrush
// 0x0050 (0x0050 - 0x0000)
struct JavascriptUMGLibrary_AddBoxBrush final
{
public:
	struct FJavascriptSlateStyle                  StyleSet;                                          // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
	class FName                                   PropertyName;                                      // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InImageName;                                       // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMargin                                InMargin;                                          // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FLinearColor                           InColorAndOpacity;                                 // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateBrushImageType                          InImageType;                                       // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(JavascriptUMGLibrary_AddBoxBrush) == 0x000008, "Wrong alignment on JavascriptUMGLibrary_AddBoxBrush");
//static_assert(sizeof(JavascriptUMGLibrary_AddBoxBrush) == 0x000050, "Wrong size on JavascriptUMGLibrary_AddBoxBrush");
//static_assert(offsetof(JavascriptUMGLibrary_AddBoxBrush, StyleSet) == 0x000000, "Member 'JavascriptUMGLibrary_AddBoxBrush::StyleSet' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_AddBoxBrush, PropertyName) == 0x000010, "Member 'JavascriptUMGLibrary_AddBoxBrush::PropertyName' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_AddBoxBrush, InImageName) == 0x000018, "Member 'JavascriptUMGLibrary_AddBoxBrush::InImageName' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_AddBoxBrush, InMargin) == 0x000028, "Member 'JavascriptUMGLibrary_AddBoxBrush::InMargin' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_AddBoxBrush, InColorAndOpacity) == 0x000038, "Member 'JavascriptUMGLibrary_AddBoxBrush::InColorAndOpacity' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_AddBoxBrush, InImageType) == 0x000048, "Member 'JavascriptUMGLibrary_AddBoxBrush::InImageType' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGLibrary.AddFontInfo
// 0x00A0 (0x00A0 - 0x0000)
struct JavascriptUMGLibrary_AddFontInfo final
{
public:
	struct FJavascriptSlateStyle                  StyleSet;                                          // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
	class FName                                   PropertyName;                                      // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                         FontInfo;                                          // 0x0018(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptUMGLibrary_AddFontInfo) == 0x000008, "Wrong alignment on JavascriptUMGLibrary_AddFontInfo");
//static_assert(sizeof(JavascriptUMGLibrary_AddFontInfo) == 0x0000A0, "Wrong size on JavascriptUMGLibrary_AddFontInfo");
//static_assert(offsetof(JavascriptUMGLibrary_AddFontInfo, StyleSet) == 0x000000, "Member 'JavascriptUMGLibrary_AddFontInfo::StyleSet' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_AddFontInfo, PropertyName) == 0x000010, "Member 'JavascriptUMGLibrary_AddFontInfo::PropertyName' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_AddFontInfo, FontInfo) == 0x000018, "Member 'JavascriptUMGLibrary_AddFontInfo::FontInfo' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGLibrary.AddImageBrush
// 0x0050 (0x0050 - 0x0000)
struct JavascriptUMGLibrary_AddImageBrush final
{
public:
	struct FJavascriptSlateStyle                  StyleSet;                                          // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
	class FName                                   PropertyName;                                      // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InImageName;                                       // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              InImageSize;                                       // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           InTint;                                            // 0x0038(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateBrushTileType                           InTiling;                                          // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateBrushImageType                          InImageType;                                       // 0x0049(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(JavascriptUMGLibrary_AddImageBrush) == 0x000008, "Wrong alignment on JavascriptUMGLibrary_AddImageBrush");
//static_assert(sizeof(JavascriptUMGLibrary_AddImageBrush) == 0x000050, "Wrong size on JavascriptUMGLibrary_AddImageBrush");
//static_assert(offsetof(JavascriptUMGLibrary_AddImageBrush, StyleSet) == 0x000000, "Member 'JavascriptUMGLibrary_AddImageBrush::StyleSet' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_AddImageBrush, PropertyName) == 0x000010, "Member 'JavascriptUMGLibrary_AddImageBrush::PropertyName' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_AddImageBrush, InImageName) == 0x000018, "Member 'JavascriptUMGLibrary_AddImageBrush::InImageName' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_AddImageBrush, InImageSize) == 0x000028, "Member 'JavascriptUMGLibrary_AddImageBrush::InImageSize' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_AddImageBrush, InTint) == 0x000038, "Member 'JavascriptUMGLibrary_AddImageBrush::InTint' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_AddImageBrush, InTiling) == 0x000048, "Member 'JavascriptUMGLibrary_AddImageBrush::InTiling' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_AddImageBrush, InImageType) == 0x000049, "Member 'JavascriptUMGLibrary_AddImageBrush::InImageType' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGLibrary.AddSound
// 0x0030 (0x0030 - 0x0000)
struct JavascriptUMGLibrary_AddSound final
{
public:
	struct FJavascriptSlateStyle                  StyleSet;                                          // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
	class FName                                   PropertyName;                                      // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateSound                            Sound;                                             // 0x0018(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptUMGLibrary_AddSound) == 0x000008, "Wrong alignment on JavascriptUMGLibrary_AddSound");
//static_assert(sizeof(JavascriptUMGLibrary_AddSound) == 0x000030, "Wrong size on JavascriptUMGLibrary_AddSound");
//static_assert(offsetof(JavascriptUMGLibrary_AddSound, StyleSet) == 0x000000, "Member 'JavascriptUMGLibrary_AddSound::StyleSet' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_AddSound, PropertyName) == 0x000010, "Member 'JavascriptUMGLibrary_AddSound::PropertyName' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_AddSound, Sound) == 0x000018, "Member 'JavascriptUMGLibrary_AddSound::Sound' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGLibrary.AddWindow
// 0x0018 (0x0018 - 0x0000)
struct JavascriptUMGLibrary_AddWindow final
{
public:
	struct FJavascriptSlateWidget                 NewWindow;                                         // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
	bool                                          bShowImmediately;                                  // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(JavascriptUMGLibrary_AddWindow) == 0x000008, "Wrong alignment on JavascriptUMGLibrary_AddWindow");
//static_assert(sizeof(JavascriptUMGLibrary_AddWindow) == 0x000018, "Wrong size on JavascriptUMGLibrary_AddWindow");
//static_assert(offsetof(JavascriptUMGLibrary_AddWindow, NewWindow) == 0x000000, "Member 'JavascriptUMGLibrary_AddWindow::NewWindow' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_AddWindow, bShowImmediately) == 0x000010, "Member 'JavascriptUMGLibrary_AddWindow::bShowImmediately' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGLibrary.AddWindowAsNativeChild
// 0x0020 (0x0020 - 0x0000)
struct JavascriptUMGLibrary_AddWindowAsNativeChild final
{
public:
	struct FJavascriptSlateWidget                 NewWindow;                                         // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
	struct FJavascriptSlateWidget                 RootWindow;                                        // 0x0010(0x0010)(Parm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptUMGLibrary_AddWindowAsNativeChild) == 0x000008, "Wrong alignment on JavascriptUMGLibrary_AddWindowAsNativeChild");
//static_assert(sizeof(JavascriptUMGLibrary_AddWindowAsNativeChild) == 0x000020, "Wrong size on JavascriptUMGLibrary_AddWindowAsNativeChild");
//static_assert(offsetof(JavascriptUMGLibrary_AddWindowAsNativeChild, NewWindow) == 0x000000, "Member 'JavascriptUMGLibrary_AddWindowAsNativeChild::NewWindow' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_AddWindowAsNativeChild, RootWindow) == 0x000010, "Member 'JavascriptUMGLibrary_AddWindowAsNativeChild::RootWindow' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGLibrary.CreateSlateStyle
// 0x0018 (0x0018 - 0x0000)
struct JavascriptUMGLibrary_CreateSlateStyle final
{
public:
	class FName                                   InStyleSetName;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJavascriptSlateStyle                  ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptUMGLibrary_CreateSlateStyle) == 0x000008, "Wrong alignment on JavascriptUMGLibrary_CreateSlateStyle");
//static_assert(sizeof(JavascriptUMGLibrary_CreateSlateStyle) == 0x000018, "Wrong size on JavascriptUMGLibrary_CreateSlateStyle");
//static_assert(offsetof(JavascriptUMGLibrary_CreateSlateStyle, InStyleSetName) == 0x000000, "Member 'JavascriptUMGLibrary_CreateSlateStyle::InStyleSetName' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_CreateSlateStyle, ReturnValue) == 0x000008, "Member 'JavascriptUMGLibrary_CreateSlateStyle::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGLibrary.GenerateDynamicImageResource
// 0x0018 (0x0018 - 0x0000)
struct JavascriptUMGLibrary_GenerateDynamicImageResource final
{
public:
	class FName                                   InDynamicBrushName;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptUMGLibrary_GenerateDynamicImageResource) == 0x000008, "Wrong alignment on JavascriptUMGLibrary_GenerateDynamicImageResource");
//static_assert(sizeof(JavascriptUMGLibrary_GenerateDynamicImageResource) == 0x000018, "Wrong size on JavascriptUMGLibrary_GenerateDynamicImageResource");
//static_assert(offsetof(JavascriptUMGLibrary_GenerateDynamicImageResource, InDynamicBrushName) == 0x000000, "Member 'JavascriptUMGLibrary_GenerateDynamicImageResource::InDynamicBrushName' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_GenerateDynamicImageResource, ReturnValue) == 0x000008, "Member 'JavascriptUMGLibrary_GenerateDynamicImageResource::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGLibrary.GetRootWindow
// 0x0010 (0x0010 - 0x0000)
struct JavascriptUMGLibrary_GetRootWindow final
{
public:
	struct FJavascriptSlateWidget                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptUMGLibrary_GetRootWindow) == 0x000008, "Wrong alignment on JavascriptUMGLibrary_GetRootWindow");
//static_assert(sizeof(JavascriptUMGLibrary_GetRootWindow) == 0x000010, "Wrong size on JavascriptUMGLibrary_GetRootWindow");
//static_assert(offsetof(JavascriptUMGLibrary_GetRootWindow, ReturnValue) == 0x000000, "Member 'JavascriptUMGLibrary_GetRootWindow::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGLibrary.Register
// 0x0010 (0x0010 - 0x0000)
struct JavascriptUMGLibrary_Register final
{
public:
	struct FJavascriptSlateStyle                  StyleSet;                                          // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptUMGLibrary_Register) == 0x000008, "Wrong alignment on JavascriptUMGLibrary_Register");
//static_assert(sizeof(JavascriptUMGLibrary_Register) == 0x000010, "Wrong size on JavascriptUMGLibrary_Register");
//static_assert(offsetof(JavascriptUMGLibrary_Register, StyleSet) == 0x000000, "Member 'JavascriptUMGLibrary_Register::StyleSet' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGLibrary.RootToContentDir
// 0x0030 (0x0030 - 0x0000)
struct JavascriptUMGLibrary_RootToContentDir final
{
public:
	struct FJavascriptSlateStyle                  StyleSet;                                          // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
	class FString                                 RelativePath;                                      // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptUMGLibrary_RootToContentDir) == 0x000008, "Wrong alignment on JavascriptUMGLibrary_RootToContentDir");
//static_assert(sizeof(JavascriptUMGLibrary_RootToContentDir) == 0x000030, "Wrong size on JavascriptUMGLibrary_RootToContentDir");
//static_assert(offsetof(JavascriptUMGLibrary_RootToContentDir, StyleSet) == 0x000000, "Member 'JavascriptUMGLibrary_RootToContentDir::StyleSet' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_RootToContentDir, RelativePath) == 0x000010, "Member 'JavascriptUMGLibrary_RootToContentDir::RelativePath' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_RootToContentDir, ReturnValue) == 0x000020, "Member 'JavascriptUMGLibrary_RootToContentDir::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGLibrary.RootToCoreContentDir
// 0x0030 (0x0030 - 0x0000)
struct JavascriptUMGLibrary_RootToCoreContentDir final
{
public:
	struct FJavascriptSlateStyle                  StyleSet;                                          // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
	class FString                                 RelativePath;                                      // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptUMGLibrary_RootToCoreContentDir) == 0x000008, "Wrong alignment on JavascriptUMGLibrary_RootToCoreContentDir");
//static_assert(sizeof(JavascriptUMGLibrary_RootToCoreContentDir) == 0x000030, "Wrong size on JavascriptUMGLibrary_RootToCoreContentDir");
//static_assert(offsetof(JavascriptUMGLibrary_RootToCoreContentDir, StyleSet) == 0x000000, "Member 'JavascriptUMGLibrary_RootToCoreContentDir::StyleSet' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_RootToCoreContentDir, RelativePath) == 0x000010, "Member 'JavascriptUMGLibrary_RootToCoreContentDir::RelativePath' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_RootToCoreContentDir, ReturnValue) == 0x000020, "Member 'JavascriptUMGLibrary_RootToCoreContentDir::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGLibrary.SetContent
// 0x0020 (0x0020 - 0x0000)
struct JavascriptUMGLibrary_SetContent final
{
public:
	class UNativeWidgetHost*                      TargetWidget;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJavascriptSlateWidget                 SlateWidget;                                       // 0x0008(0x0010)(Parm, NativeAccessSpecifierPublic)
	class UWidget*                                ReturnValue;                                       // 0x0018(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptUMGLibrary_SetContent) == 0x000008, "Wrong alignment on JavascriptUMGLibrary_SetContent");
//static_assert(sizeof(JavascriptUMGLibrary_SetContent) == 0x000020, "Wrong size on JavascriptUMGLibrary_SetContent");
//static_assert(offsetof(JavascriptUMGLibrary_SetContent, TargetWidget) == 0x000000, "Member 'JavascriptUMGLibrary_SetContent::TargetWidget' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_SetContent, SlateWidget) == 0x000008, "Member 'JavascriptUMGLibrary_SetContent::SlateWidget' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_SetContent, ReturnValue) == 0x000018, "Member 'JavascriptUMGLibrary_SetContent::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGLibrary.SetContentRoot
// 0x0020 (0x0020 - 0x0000)
struct JavascriptUMGLibrary_SetContentRoot final
{
public:
	struct FJavascriptSlateStyle                  StyleSet;                                          // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
	class FString                                 InContentRootDir;                                  // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptUMGLibrary_SetContentRoot) == 0x000008, "Wrong alignment on JavascriptUMGLibrary_SetContentRoot");
//static_assert(sizeof(JavascriptUMGLibrary_SetContentRoot) == 0x000020, "Wrong size on JavascriptUMGLibrary_SetContentRoot");
//static_assert(offsetof(JavascriptUMGLibrary_SetContentRoot, StyleSet) == 0x000000, "Member 'JavascriptUMGLibrary_SetContentRoot::StyleSet' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_SetContentRoot, InContentRootDir) == 0x000010, "Member 'JavascriptUMGLibrary_SetContentRoot::InContentRootDir' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGLibrary.SetCoreContentRoot
// 0x0020 (0x0020 - 0x0000)
struct JavascriptUMGLibrary_SetCoreContentRoot final
{
public:
	struct FJavascriptSlateStyle                  StyleSet;                                          // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
	class FString                                 InCoreContentRootDir;                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptUMGLibrary_SetCoreContentRoot) == 0x000008, "Wrong alignment on JavascriptUMGLibrary_SetCoreContentRoot");
//static_assert(sizeof(JavascriptUMGLibrary_SetCoreContentRoot) == 0x000020, "Wrong size on JavascriptUMGLibrary_SetCoreContentRoot");
//static_assert(offsetof(JavascriptUMGLibrary_SetCoreContentRoot, StyleSet) == 0x000000, "Member 'JavascriptUMGLibrary_SetCoreContentRoot::StyleSet' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_SetCoreContentRoot, InCoreContentRootDir) == 0x000010, "Member 'JavascriptUMGLibrary_SetCoreContentRoot::InCoreContentRootDir' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGLibrary.ShowWindow
// 0x0010 (0x0010 - 0x0000)
struct JavascriptUMGLibrary_ShowWindow final
{
public:
	struct FJavascriptSlateWidget                 NewWindow;                                         // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptUMGLibrary_ShowWindow) == 0x000008, "Wrong alignment on JavascriptUMGLibrary_ShowWindow");
//static_assert(sizeof(JavascriptUMGLibrary_ShowWindow) == 0x000010, "Wrong size on JavascriptUMGLibrary_ShowWindow");
//static_assert(offsetof(JavascriptUMGLibrary_ShowWindow, NewWindow) == 0x000000, "Member 'JavascriptUMGLibrary_ShowWindow::NewWindow' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGLibrary.TakeWidget
// 0x0018 (0x0018 - 0x0000)
struct JavascriptUMGLibrary_TakeWidget final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJavascriptSlateWidget                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptUMGLibrary_TakeWidget) == 0x000008, "Wrong alignment on JavascriptUMGLibrary_TakeWidget");
//static_assert(sizeof(JavascriptUMGLibrary_TakeWidget) == 0x000018, "Wrong size on JavascriptUMGLibrary_TakeWidget");
//static_assert(offsetof(JavascriptUMGLibrary_TakeWidget, Widget) == 0x000000, "Member 'JavascriptUMGLibrary_TakeWidget::Widget' has a wrong offset!");
//static_assert(offsetof(JavascriptUMGLibrary_TakeWidget, ReturnValue) == 0x000008, "Member 'JavascriptUMGLibrary_TakeWidget::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptUMGLibrary.Unregister
// 0x0010 (0x0010 - 0x0000)
struct JavascriptUMGLibrary_Unregister final
{
public:
	struct FJavascriptSlateStyle                  StyleSet;                                          // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptUMGLibrary_Unregister) == 0x000008, "Wrong alignment on JavascriptUMGLibrary_Unregister");
//static_assert(sizeof(JavascriptUMGLibrary_Unregister) == 0x000010, "Wrong size on JavascriptUMGLibrary_Unregister");
//static_assert(offsetof(JavascriptUMGLibrary_Unregister, StyleSet) == 0x000000, "Member 'JavascriptUMGLibrary_Unregister::StyleSet' has a wrong offset!");

// Function JavascriptUMG.JavascriptWidget.CallSynchronizeProperties
// 0x0008 (0x0008 - 0x0000)
struct JavascriptWidget_CallSynchronizeProperties final
{
public:
	class UVisual*                                WidgetOrSlot;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptWidget_CallSynchronizeProperties) == 0x000008, "Wrong alignment on JavascriptWidget_CallSynchronizeProperties");
//static_assert(sizeof(JavascriptWidget_CallSynchronizeProperties) == 0x000008, "Wrong size on JavascriptWidget_CallSynchronizeProperties");
//static_assert(offsetof(JavascriptWidget_CallSynchronizeProperties, WidgetOrSlot) == 0x000000, "Member 'JavascriptWidget_CallSynchronizeProperties::WidgetOrSlot' has a wrong offset!");

// Function JavascriptUMG.JavascriptWidget.HasValidCachedWidget
// 0x0010 (0x0010 - 0x0000)
struct JavascriptWidget_HasValidCachedWidget final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(JavascriptWidget_HasValidCachedWidget) == 0x000008, "Wrong alignment on JavascriptWidget_HasValidCachedWidget");
//static_assert(sizeof(JavascriptWidget_HasValidCachedWidget) == 0x000010, "Wrong size on JavascriptWidget_HasValidCachedWidget");
//static_assert(offsetof(JavascriptWidget_HasValidCachedWidget, Widget) == 0x000000, "Member 'JavascriptWidget_HasValidCachedWidget::Widget' has a wrong offset!");
//static_assert(offsetof(JavascriptWidget_HasValidCachedWidget, ReturnValue) == 0x000008, "Member 'JavascriptWidget_HasValidCachedWidget::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptWidget.AddChild
// 0x0010 (0x0010 - 0x0000)
struct JavascriptWidget_AddChild final
{
public:
	class UWidget*                                Content;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPanelSlot*                             ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptWidget_AddChild) == 0x000008, "Wrong alignment on JavascriptWidget_AddChild");
//static_assert(sizeof(JavascriptWidget_AddChild) == 0x000010, "Wrong size on JavascriptWidget_AddChild");
//static_assert(offsetof(JavascriptWidget_AddChild, Content) == 0x000000, "Member 'JavascriptWidget_AddChild::Content' has a wrong offset!");
//static_assert(offsetof(JavascriptWidget_AddChild, ReturnValue) == 0x000008, "Member 'JavascriptWidget_AddChild::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptWidget.OnDestroy
// 0x0001 (0x0001 - 0x0000)
struct JavascriptWidget_OnDestroy final
{
public:
	bool                                          bReleaseChildren;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptWidget_OnDestroy) == 0x000001, "Wrong alignment on JavascriptWidget_OnDestroy");
//static_assert(sizeof(JavascriptWidget_OnDestroy) == 0x000001, "Wrong size on JavascriptWidget_OnDestroy");
//static_assert(offsetof(JavascriptWidget_OnDestroy, bReleaseChildren) == 0x000000, "Member 'JavascriptWidget_OnDestroy::bReleaseChildren' has a wrong offset!");

// Function JavascriptUMG.JavascriptWidget.OnInputActionByName
// 0x0008 (0x0008 - 0x0000)
struct JavascriptWidget_OnInputActionByName final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptWidget_OnInputActionByName) == 0x000004, "Wrong alignment on JavascriptWidget_OnInputActionByName");
//static_assert(sizeof(JavascriptWidget_OnInputActionByName) == 0x000008, "Wrong size on JavascriptWidget_OnInputActionByName");
//static_assert(offsetof(JavascriptWidget_OnInputActionByName, ActionName) == 0x000000, "Member 'JavascriptWidget_OnInputActionByName::ActionName' has a wrong offset!");

// Function JavascriptUMG.JavascriptWidget.OnInputAxisByName
// 0x000C (0x000C - 0x0000)
struct JavascriptWidget_OnInputAxisByName final
{
public:
	float                                         Axis;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ActionName;                                        // 0x0004(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptWidget_OnInputAxisByName) == 0x000004, "Wrong alignment on JavascriptWidget_OnInputAxisByName");
//static_assert(sizeof(JavascriptWidget_OnInputAxisByName) == 0x00000C, "Wrong size on JavascriptWidget_OnInputAxisByName");
//static_assert(offsetof(JavascriptWidget_OnInputAxisByName, Axis) == 0x000000, "Member 'JavascriptWidget_OnInputAxisByName::Axis' has a wrong offset!");
//static_assert(offsetof(JavascriptWidget_OnInputAxisByName, ActionName) == 0x000004, "Member 'JavascriptWidget_OnInputAxisByName::ActionName' has a wrong offset!");

// Function JavascriptUMG.JavascriptWidget.OnListenForInputAction
// 0x000C (0x000C - 0x0000)
struct JavascriptWidget_OnListenForInputAction final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInputEvent                                   EventType;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bConsume;                                          // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(JavascriptWidget_OnListenForInputAction) == 0x000004, "Wrong alignment on JavascriptWidget_OnListenForInputAction");
//static_assert(sizeof(JavascriptWidget_OnListenForInputAction) == 0x00000C, "Wrong size on JavascriptWidget_OnListenForInputAction");
//static_assert(offsetof(JavascriptWidget_OnListenForInputAction, ActionName) == 0x000000, "Member 'JavascriptWidget_OnListenForInputAction::ActionName' has a wrong offset!");
//static_assert(offsetof(JavascriptWidget_OnListenForInputAction, EventType) == 0x000008, "Member 'JavascriptWidget_OnListenForInputAction::EventType' has a wrong offset!");
//static_assert(offsetof(JavascriptWidget_OnListenForInputAction, bConsume) == 0x000009, "Member 'JavascriptWidget_OnListenForInputAction::bConsume' has a wrong offset!");

// Function JavascriptUMG.JavascriptWidget.OnListenForInputAxis
// 0x000C (0x000C - 0x0000)
struct JavascriptWidget_OnListenForInputAxis final
{
public:
	class FName                                   AxisName;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInputEvent                                   EventType;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bConsume;                                          // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(JavascriptWidget_OnListenForInputAxis) == 0x000004, "Wrong alignment on JavascriptWidget_OnListenForInputAxis");
//static_assert(sizeof(JavascriptWidget_OnListenForInputAxis) == 0x00000C, "Wrong size on JavascriptWidget_OnListenForInputAxis");
//static_assert(offsetof(JavascriptWidget_OnListenForInputAxis, AxisName) == 0x000000, "Member 'JavascriptWidget_OnListenForInputAxis::AxisName' has a wrong offset!");
//static_assert(offsetof(JavascriptWidget_OnListenForInputAxis, EventType) == 0x000008, "Member 'JavascriptWidget_OnListenForInputAxis::EventType' has a wrong offset!");
//static_assert(offsetof(JavascriptWidget_OnListenForInputAxis, bConsume) == 0x000009, "Member 'JavascriptWidget_OnListenForInputAxis::bConsume' has a wrong offset!");

// Function JavascriptUMG.JavascriptWidget.OnReleaseInputActionByName
// 0x0008 (0x0008 - 0x0000)
struct JavascriptWidget_OnReleaseInputActionByName final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptWidget_OnReleaseInputActionByName) == 0x000004, "Wrong alignment on JavascriptWidget_OnReleaseInputActionByName");
//static_assert(sizeof(JavascriptWidget_OnReleaseInputActionByName) == 0x000008, "Wrong size on JavascriptWidget_OnReleaseInputActionByName");
//static_assert(offsetof(JavascriptWidget_OnReleaseInputActionByName, ActionName) == 0x000000, "Member 'JavascriptWidget_OnReleaseInputActionByName::ActionName' has a wrong offset!");

// Function JavascriptUMG.JavascriptWidget.RemoveChild
// 0x0001 (0x0001 - 0x0000)
struct JavascriptWidget_RemoveChild final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptWidget_RemoveChild) == 0x000001, "Wrong alignment on JavascriptWidget_RemoveChild");
//static_assert(sizeof(JavascriptWidget_RemoveChild) == 0x000001, "Wrong size on JavascriptWidget_RemoveChild");
//static_assert(offsetof(JavascriptWidget_RemoveChild, ReturnValue) == 0x000000, "Member 'JavascriptWidget_RemoveChild::ReturnValue' has a wrong offset!");

// Function JavascriptUMG.JavascriptWidget.SetRootWidget
// 0x0008 (0x0008 - 0x0000)
struct JavascriptWidget_SetRootWidget final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptWidget_SetRootWidget) == 0x000008, "Wrong alignment on JavascriptWidget_SetRootWidget");
//static_assert(sizeof(JavascriptWidget_SetRootWidget) == 0x000008, "Wrong size on JavascriptWidget_SetRootWidget");
//static_assert(offsetof(JavascriptWidget_SetRootWidget, Widget) == 0x000000, "Member 'JavascriptWidget_SetRootWidget::Widget' has a wrong offset!");

// Function JavascriptUMG.JavascriptWindow.EnableWindow
// 0x0001 (0x0001 - 0x0000)
struct JavascriptWindow_EnableWindow final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptWindow_EnableWindow) == 0x000001, "Wrong alignment on JavascriptWindow_EnableWindow");
//static_assert(sizeof(JavascriptWindow_EnableWindow) == 0x000001, "Wrong size on JavascriptWindow_EnableWindow");
//static_assert(offsetof(JavascriptWindow_EnableWindow, bEnable) == 0x000000, "Member 'JavascriptWindow_EnableWindow::bEnable' has a wrong offset!");

// Function JavascriptUMG.JavascriptWindow.MoveWindowTo
// 0x0010 (0x0010 - 0x0000)
struct JavascriptWindow_MoveWindowTo final
{
public:
	struct FVector2D                              NewPosition;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptWindow_MoveWindowTo) == 0x000008, "Wrong alignment on JavascriptWindow_MoveWindowTo");
//static_assert(sizeof(JavascriptWindow_MoveWindowTo) == 0x000010, "Wrong size on JavascriptWindow_MoveWindowTo");
//static_assert(offsetof(JavascriptWindow_MoveWindowTo, NewPosition) == 0x000000, "Member 'JavascriptWindow_MoveWindowTo::NewPosition' has a wrong offset!");

// Function JavascriptUMG.JavascriptWindow.ReshapeWindow
// 0x0020 (0x0020 - 0x0000)
struct JavascriptWindow_ReshapeWindow final
{
public:
	struct FVector2D                              NewPosition;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              NewSize;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptWindow_ReshapeWindow) == 0x000008, "Wrong alignment on JavascriptWindow_ReshapeWindow");
//static_assert(sizeof(JavascriptWindow_ReshapeWindow) == 0x000020, "Wrong size on JavascriptWindow_ReshapeWindow");
//static_assert(offsetof(JavascriptWindow_ReshapeWindow, NewPosition) == 0x000000, "Member 'JavascriptWindow_ReshapeWindow::NewPosition' has a wrong offset!");
//static_assert(offsetof(JavascriptWindow_ReshapeWindow, NewSize) == 0x000010, "Member 'JavascriptWindow_ReshapeWindow::NewSize' has a wrong offset!");

// Function JavascriptUMG.JavascriptWindow.Resize
// 0x0010 (0x0010 - 0x0000)
struct JavascriptWindow_Resize final
{
public:
	struct FVector2D                              NewSize;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptWindow_Resize) == 0x000008, "Wrong alignment on JavascriptWindow_Resize");
//static_assert(sizeof(JavascriptWindow_Resize) == 0x000010, "Wrong size on JavascriptWindow_Resize");
//static_assert(offsetof(JavascriptWindow_Resize, NewSize) == 0x000000, "Member 'JavascriptWindow_Resize::NewSize' has a wrong offset!");

// Function JavascriptUMG.JavascriptWindow.SetOpacity
// 0x0004 (0x0004 - 0x0000)
struct JavascriptWindow_SetOpacity final
{
public:
	float                                         InOpacity;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(JavascriptWindow_SetOpacity) == 0x000004, "Wrong alignment on JavascriptWindow_SetOpacity");
//static_assert(sizeof(JavascriptWindow_SetOpacity) == 0x000004, "Wrong size on JavascriptWindow_SetOpacity");
//static_assert(offsetof(JavascriptWindow_SetOpacity, InOpacity) == 0x000000, "Member 'JavascriptWindow_SetOpacity::InOpacity' has a wrong offset!");

}

