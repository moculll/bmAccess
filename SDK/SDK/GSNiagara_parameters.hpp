#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GSNiagara

#include "Basic.hpp"

#include "GSNiagara_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GSNiagara.GSNiagaraBatchingSpriteConfigDA.InitGSParticlesConfigInfo
// 0x0002 (0x0002 - 0x0000)
struct GSNiagaraBatchingSpriteConfigDA_InitGSParticlesConfigInfo final
{
public:
	bool                                          bForceSet;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(GSNiagaraBatchingSpriteConfigDA_InitGSParticlesConfigInfo) == 0x000001, "Wrong alignment on GSNiagaraBatchingSpriteConfigDA_InitGSParticlesConfigInfo");
//static_assert(sizeof(GSNiagaraBatchingSpriteConfigDA_InitGSParticlesConfigInfo) == 0x000002, "Wrong size on GSNiagaraBatchingSpriteConfigDA_InitGSParticlesConfigInfo");
//static_assert(offsetof(GSNiagaraBatchingSpriteConfigDA_InitGSParticlesConfigInfo, bForceSet) == 0x000000, "Member 'GSNiagaraBatchingSpriteConfigDA_InitGSParticlesConfigInfo::bForceSet' has a wrong offset!");
//static_assert(offsetof(GSNiagaraBatchingSpriteConfigDA_InitGSParticlesConfigInfo, ReturnValue) == 0x000001, "Member 'GSNiagaraBatchingSpriteConfigDA_InitGSParticlesConfigInfo::ReturnValue' has a wrong offset!");

// Function GSNiagara.GSNiagaraArrayData.AddParticle
// 0x0058 (0x0058 - 0x0000)
struct GSNiagaraArrayData_AddParticle final
{
public:
	struct FGSNiagaraParticleInfo                 Info;                                              // 0x0000(0x0050)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(GSNiagaraArrayData_AddParticle) == 0x000008, "Wrong alignment on GSNiagaraArrayData_AddParticle");
//static_assert(sizeof(GSNiagaraArrayData_AddParticle) == 0x000058, "Wrong size on GSNiagaraArrayData_AddParticle");
//static_assert(offsetof(GSNiagaraArrayData_AddParticle, Info) == 0x000000, "Member 'GSNiagaraArrayData_AddParticle::Info' has a wrong offset!");
//static_assert(offsetof(GSNiagaraArrayData_AddParticle, ReturnValue) == 0x000050, "Member 'GSNiagaraArrayData_AddParticle::ReturnValue' has a wrong offset!");

// Function GSNiagara.GSNiagaraArrayData.ForceSetParticlePos
// 0x0010 (0x0010 - 0x0000)
struct GSNiagaraArrayData_ForceSetParticlePos final
{
public:
	TArray<struct FVector>                        TargetPosArray;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
//static_assert(alignof(GSNiagaraArrayData_ForceSetParticlePos) == 0x000008, "Wrong alignment on GSNiagaraArrayData_ForceSetParticlePos");
//static_assert(sizeof(GSNiagaraArrayData_ForceSetParticlePos) == 0x000010, "Wrong size on GSNiagaraArrayData_ForceSetParticlePos");
//static_assert(offsetof(GSNiagaraArrayData_ForceSetParticlePos, TargetPosArray) == 0x000000, "Member 'GSNiagaraArrayData_ForceSetParticlePos::TargetPosArray' has a wrong offset!");

// Function GSNiagara.GSNiagaraArrayData.ForceSetParticleSize
// 0x0010 (0x0010 - 0x0000)
struct GSNiagaraArrayData_ForceSetParticleSize final
{
public:
	TArray<float>                                 TargetSizeArray;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
//static_assert(alignof(GSNiagaraArrayData_ForceSetParticleSize) == 0x000008, "Wrong alignment on GSNiagaraArrayData_ForceSetParticleSize");
//static_assert(sizeof(GSNiagaraArrayData_ForceSetParticleSize) == 0x000010, "Wrong size on GSNiagaraArrayData_ForceSetParticleSize");
//static_assert(offsetof(GSNiagaraArrayData_ForceSetParticleSize, TargetSizeArray) == 0x000000, "Member 'GSNiagaraArrayData_ForceSetParticleSize::TargetSizeArray' has a wrong offset!");

// Function GSNiagara.GSNiagaraArrayData.RemoveParticle
// 0x0058 (0x0058 - 0x0000)
struct GSNiagaraArrayData_RemoveParticle final
{
public:
	struct FGSNiagaraParticleInfo                 Info;                                              // 0x0000(0x0050)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(GSNiagaraArrayData_RemoveParticle) == 0x000008, "Wrong alignment on GSNiagaraArrayData_RemoveParticle");
//static_assert(sizeof(GSNiagaraArrayData_RemoveParticle) == 0x000058, "Wrong size on GSNiagaraArrayData_RemoveParticle");
//static_assert(offsetof(GSNiagaraArrayData_RemoveParticle, Info) == 0x000000, "Member 'GSNiagaraArrayData_RemoveParticle::Info' has a wrong offset!");
//static_assert(offsetof(GSNiagaraArrayData_RemoveParticle, ReturnValue) == 0x000050, "Member 'GSNiagaraArrayData_RemoveParticle::ReturnValue' has a wrong offset!");

// Function GSNiagara.GSNiagaraArrayData.UpdateParticle
// 0x0010 (0x0010 - 0x0000)
struct GSNiagaraArrayData_UpdateParticle final
{
public:
	TArray<struct FGSNiagaraParticleInfo>         InParticleInfoArray;                               // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
//static_assert(alignof(GSNiagaraArrayData_UpdateParticle) == 0x000008, "Wrong alignment on GSNiagaraArrayData_UpdateParticle");
//static_assert(sizeof(GSNiagaraArrayData_UpdateParticle) == 0x000010, "Wrong size on GSNiagaraArrayData_UpdateParticle");
//static_assert(offsetof(GSNiagaraArrayData_UpdateParticle, InParticleInfoArray) == 0x000000, "Member 'GSNiagaraArrayData_UpdateParticle::InParticleInfoArray' has a wrong offset!");

}

