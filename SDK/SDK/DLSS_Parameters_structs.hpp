#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DLSS_Parameters

#include "Basic.hpp"


namespace SDK
{

// UserDefinedStruct DLSS_Parameters.DLSS_Parameters
// 0x00C0 (0x00C0 - 0x0000)
struct FDLSS_Parameters final
{
public:
	class FString                                 Sharpness_2_35A008B94CA19E1D1157B4BEE3664DDE;      // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 DLSSEnable_39_13810A794156D8CEAF3F7AA78AD87AA4;    // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 TranslucencyEnableTAABeforeDLSS_21_7E947A1D40EA2E0800C722881BCA5577; // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ParticleReapplyTAAafterDLSS_38_01F8076E42227DCDF5D7C6BD22E42432; // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 FramesUntilFeatureDesturction_41_146725084183D5B8875F03B095965D14; // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 DilateMotionVectors_42_75D786CA4852F3DA32BBD5A03196AD6A; // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ReflectionsTAA_43_E0D798E64EE07DDF022D31A71335EFD3; // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 WaterReflectionsTAA_44_71C49B4347FB341069C65DA4366CAC3E; // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 AutoExposure_53_3B81091947B3E1695525D69D252AD247;  // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 DLSSPreset_61_56304D034D2FED16A510D794D93C7A39;    // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 DLSSPreferNISSharpen_64_5855019044DF7F164E52C28AE4C8C524; // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 DLSSDEnable_67_A38F458F45431729B35D24880DF1D1D3;   // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
};
//static_assert(alignof(FDLSS_Parameters) == 0x000008, "Wrong alignment on FDLSS_Parameters");
//static_assert(sizeof(FDLSS_Parameters) == 0x0000C0, "Wrong size on FDLSS_Parameters");
//static_assert(offsetof(FDLSS_Parameters, Sharpness_2_35A008B94CA19E1D1157B4BEE3664DDE) == 0x000000, "Member 'FDLSS_Parameters::Sharpness_2_35A008B94CA19E1D1157B4BEE3664DDE' has a wrong offset!");
//static_assert(offsetof(FDLSS_Parameters, DLSSEnable_39_13810A794156D8CEAF3F7AA78AD87AA4) == 0x000010, "Member 'FDLSS_Parameters::DLSSEnable_39_13810A794156D8CEAF3F7AA78AD87AA4' has a wrong offset!");
//static_assert(offsetof(FDLSS_Parameters, TranslucencyEnableTAABeforeDLSS_21_7E947A1D40EA2E0800C722881BCA5577) == 0x000020, "Member 'FDLSS_Parameters::TranslucencyEnableTAABeforeDLSS_21_7E947A1D40EA2E0800C722881BCA5577' has a wrong offset!");
//static_assert(offsetof(FDLSS_Parameters, ParticleReapplyTAAafterDLSS_38_01F8076E42227DCDF5D7C6BD22E42432) == 0x000030, "Member 'FDLSS_Parameters::ParticleReapplyTAAafterDLSS_38_01F8076E42227DCDF5D7C6BD22E42432' has a wrong offset!");
//static_assert(offsetof(FDLSS_Parameters, FramesUntilFeatureDesturction_41_146725084183D5B8875F03B095965D14) == 0x000040, "Member 'FDLSS_Parameters::FramesUntilFeatureDesturction_41_146725084183D5B8875F03B095965D14' has a wrong offset!");
//static_assert(offsetof(FDLSS_Parameters, DilateMotionVectors_42_75D786CA4852F3DA32BBD5A03196AD6A) == 0x000050, "Member 'FDLSS_Parameters::DilateMotionVectors_42_75D786CA4852F3DA32BBD5A03196AD6A' has a wrong offset!");
//static_assert(offsetof(FDLSS_Parameters, ReflectionsTAA_43_E0D798E64EE07DDF022D31A71335EFD3) == 0x000060, "Member 'FDLSS_Parameters::ReflectionsTAA_43_E0D798E64EE07DDF022D31A71335EFD3' has a wrong offset!");
//static_assert(offsetof(FDLSS_Parameters, WaterReflectionsTAA_44_71C49B4347FB341069C65DA4366CAC3E) == 0x000070, "Member 'FDLSS_Parameters::WaterReflectionsTAA_44_71C49B4347FB341069C65DA4366CAC3E' has a wrong offset!");
//static_assert(offsetof(FDLSS_Parameters, AutoExposure_53_3B81091947B3E1695525D69D252AD247) == 0x000080, "Member 'FDLSS_Parameters::AutoExposure_53_3B81091947B3E1695525D69D252AD247' has a wrong offset!");
//static_assert(offsetof(FDLSS_Parameters, DLSSPreset_61_56304D034D2FED16A510D794D93C7A39) == 0x000090, "Member 'FDLSS_Parameters::DLSSPreset_61_56304D034D2FED16A510D794D93C7A39' has a wrong offset!");
//static_assert(offsetof(FDLSS_Parameters, DLSSPreferNISSharpen_64_5855019044DF7F164E52C28AE4C8C524) == 0x0000A0, "Member 'FDLSS_Parameters::DLSSPreferNISSharpen_64_5855019044DF7F164E52C28AE4C8C524' has a wrong offset!");
//static_assert(offsetof(FDLSS_Parameters, DLSSDEnable_67_A38F458F45431729B35D24880DF1D1D3) == 0x0000B0, "Member 'FDLSS_Parameters::DLSSDEnable_67_A38F458F45431729B35D24880DF1D1D3' has a wrong offset!");

}

