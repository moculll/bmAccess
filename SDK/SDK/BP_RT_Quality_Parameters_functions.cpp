#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RT_Quality_Parameters

#include "Basic.hpp"

#include "BP_RT_Quality_Parameters_classes.hpp"
#include "BP_RT_Quality_Parameters_parameters.hpp"


namespace SDK
{

// Function BP_RT_Quality_Parameters.BP_RT_Quality_Parameters_C.Adaptive Reflection and Water Caustics Based on Player Speed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RT_Quality_Parameters_C::Adaptive_Reflection_and_Water_Caustics_Based_on_Player_Speed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Quality_Parameters_C", "Adaptive Reflection and Water Caustics Based on Player Speed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RT_Quality_Parameters.BP_RT_Quality_Parameters_C.Check DLSSRR
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RT_Quality_Parameters_C::Check_DLSSRR()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Quality_Parameters_C", "Check DLSSRR");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RT_Quality_Parameters.BP_RT_Quality_Parameters_C.Construct RT Parameter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_RT_Quality_Parameters_C::Construct_RT_Parameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Quality_Parameters_C", "Construct RT Parameter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RT_Quality_Parameters.BP_RT_Quality_Parameters_C.Enable DLSS RR
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable_DLSSRR                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RT_Quality_Parameters_C::Enable_DLSS_RR(bool Enable_DLSSRR)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Quality_Parameters_C", "Enable DLSS RR");

	Params::BP_RT_Quality_Parameters_C_Enable_DLSS_RR Parms{};

	Parms.Enable_DLSSRR = Enable_DLSSRR;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RT_Quality_Parameters.BP_RT_Quality_Parameters_C.Enable_DLSS_RR
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable_DLSSD                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RT_Quality_Parameters_C::Enable_DLSS_RR_0(bool Enable_DLSSD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Quality_Parameters_C", "Enable_DLSS_RR");

	Params::BP_RT_Quality_Parameters_C_Enable_DLSS_RR_0 Parms{};

	Parms.Enable_DLSSD = Enable_DLSSD;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RT_Quality_Parameters.BP_RT_Quality_Parameters_C.ExecuteUbergraph_BP_RT_Quality_Parameters
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RT_Quality_Parameters_C::ExecuteUbergraph_BP_RT_Quality_Parameters(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Quality_Parameters_C", "ExecuteUbergraph_BP_RT_Quality_Parameters");

	Params::BP_RT_Quality_Parameters_C_ExecuteUbergraph_BP_RT_Quality_Parameters Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RT_Quality_Parameters.BP_RT_Quality_Parameters_C.Force Override RT Parameters  On AA Status
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RT_Quality_Parameters_C::Force_Override_RT_Parameters__On_AA_Status()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Quality_Parameters_C", "Force Override RT Parameters  On AA Status");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RT_Quality_Parameters.BP_RT_Quality_Parameters_C.Force Override RT Parameters  On Screen Res
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RT_Quality_Parameters_C::Force_Override_RT_Parameters__On_Screen_Res()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Quality_Parameters_C", "Force Override RT Parameters  On Screen Res");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RT_Quality_Parameters.BP_RT_Quality_Parameters_C.Force Override RT Parameters DLAA Quality
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RT_Quality_Parameters_C::Force_Override_RT_Parameters_DLAA_Quality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Quality_Parameters_C", "Force Override RT Parameters DLAA Quality");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RT_Quality_Parameters.BP_RT_Quality_Parameters_C.GI Intensity Override
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RT_Quality_Parameters_C::GI_Intensity_Override()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Quality_Parameters_C", "GI Intensity Override");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RT_Quality_Parameters.BP_RT_Quality_Parameters_C.Ini RT Parameter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRT_Parameters                   RT_Parameters                                          (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_RT_Quality_Parameters_C::Ini_RT_Parameter(const struct FRT_Parameters& RT_Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Quality_Parameters_C", "Ini RT Parameter");

	Params::BP_RT_Quality_Parameters_C_Ini_RT_Parameter Parms{};

	Parms.RT_Parameters = std::move(RT_Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RT_Quality_Parameters.BP_RT_Quality_Parameters_C.Override Light Source Radius And Specular Scale
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_RT_Quality_Parameters_C::Override_Light_Source_Radius_And_Specular_Scale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Quality_Parameters_C", "Override Light Source Radius And Specular Scale");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RT_Quality_Parameters.BP_RT_Quality_Parameters_C.Override RT Parameters Based on Screenpercentage
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RT_Quality_Parameters_C::Override_RT_Parameters_Based_on_Screenpercentage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Quality_Parameters_C", "Override RT Parameters Based on Screenpercentage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RT_Quality_Parameters.BP_RT_Quality_Parameters_C.RT_Custom_Preset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRT_Parameters                   RTX_Parameters                                         (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_RT_Quality_Parameters_C::RT_Custom_Preset(const struct FRT_Parameters& RTX_Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Quality_Parameters_C", "RT_Custom_Preset");

	Params::BP_RT_Quality_Parameters_C_RT_Custom_Preset Parms{};

	Parms.RTX_Parameters = std::move(RTX_Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RT_Quality_Parameters.BP_RT_Quality_Parameters_C.RTX_Force_Override
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RT_Quality_Parameters_C::RTX_Force_Override()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Quality_Parameters_C", "RTX_Force_Override");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RT_Quality_Parameters.BP_RT_Quality_Parameters_C.RTX_Switch_DLSS_From_UI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           AA_Method                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           DLSS_Quality                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Enable_Override_From_UI                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RT_Quality_Parameters_C::RTX_Switch_DLSS_From_UI(const class FString& AA_Method, const class FString& DLSS_Quality, bool Enable_Override_From_UI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Quality_Parameters_C", "RTX_Switch_DLSS_From_UI");

	Params::BP_RT_Quality_Parameters_C_RTX_Switch_DLSS_From_UI Parms{};

	Parms.AA_Method = std::move(AA_Method);
	Parms.DLSS_Quality = std::move(DLSS_Quality);
	Parms.Enable_Override_From_UI = Enable_Override_From_UI;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RT_Quality_Parameters.BP_RT_Quality_Parameters_C.RTX_Switch_Preset_From_UI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_RT_Quality_Preset                  RTX_Preset                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RT_Quality_Parameters_C::RTX_Switch_Preset_From_UI(Enum_RT_Quality_Preset RTX_Preset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Quality_Parameters_C", "RTX_Switch_Preset_From_UI");

	Params::BP_RT_Quality_Parameters_C_RTX_Switch_Preset_From_UI Parms{};

	Parms.RTX_Preset = RTX_Preset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RT_Quality_Parameters.BP_RT_Quality_Parameters_C.SetText Display
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RT_Quality_Parameters_C::SetText_Display()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Quality_Parameters_C", "SetText Display");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RT_Quality_Parameters.BP_RT_Quality_Parameters_C.Swtich RT MPC
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RT_Quality_Parameters_C::Swtich_RT_MPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Quality_Parameters_C", "Swtich RT MPC");

	UObject::ProcessEvent(Func, nullptr);
}

}

