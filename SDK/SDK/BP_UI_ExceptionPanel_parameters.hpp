#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UI_ExceptionPanel

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_UI_ExceptionPanel.BP_UI_ExceptionPanel_C.ExecuteUbergraph_BP_UI_ExceptionPanel
// 0x00D8 (0x00D8 - 0x0000)
struct BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0040)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0050(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue_1;                    // 0x0068(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBGW_ExceptionUIMgr*                    CallFunc_Get_ReturnValue;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel) == 0x000008, "Wrong alignment on BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel");
//static_assert(sizeof(BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel) == 0x0000D8, "Wrong size on BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel");
//static_assert(offsetof(BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel, EntryPoint) == 0x000000, "Member 'BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel::EntryPoint' has a wrong offset!");
//static_assert(offsetof(BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel, K2Node_Event_MyGeometry) == 0x000008, "Member 'BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel::K2Node_Event_MyGeometry' has a wrong offset!");
//static_assert(offsetof(BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel, K2Node_Event_InDeltaTime) == 0x000048, "Member 'BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel::K2Node_Event_InDeltaTime' has a wrong offset!");
//static_assert(offsetof(BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel, CallFunc_GetText_ReturnValue) == 0x000050, "Member 'BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel::CallFunc_GetText_ReturnValue' has a wrong offset!");
//static_assert(offsetof(BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel, CallFunc_GetText_ReturnValue_1) == 0x000068, "Member 'BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
//static_assert(offsetof(BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel, CallFunc_Conv_TextToString_ReturnValue) == 0x000080, "Member 'BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
//static_assert(offsetof(BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000090, "Member 'BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
//static_assert(offsetof(BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A0, "Member 'BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
//static_assert(offsetof(BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel, CallFunc_PlayAnimation_ReturnValue) == 0x0000B0, "Member 'BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
//static_assert(offsetof(BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B8, "Member 'BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
//static_assert(offsetof(BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel, K2Node_Event_IsDesignTime) == 0x0000C8, "Member 'BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel::K2Node_Event_IsDesignTime' has a wrong offset!");
//static_assert(offsetof(BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel, CallFunc_Get_ReturnValue) == 0x0000D0, "Member 'BP_UI_ExceptionPanel_C_ExecuteUbergraph_BP_UI_ExceptionPanel::CallFunc_Get_ReturnValue' has a wrong offset!");

// Function BP_UI_ExceptionPanel.BP_UI_ExceptionPanel_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_UI_ExceptionPanel_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(BP_UI_ExceptionPanel_C_PreConstruct) == 0x000001, "Wrong alignment on BP_UI_ExceptionPanel_C_PreConstruct");
//static_assert(sizeof(BP_UI_ExceptionPanel_C_PreConstruct) == 0x000001, "Wrong size on BP_UI_ExceptionPanel_C_PreConstruct");
//static_assert(offsetof(BP_UI_ExceptionPanel_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_UI_ExceptionPanel_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_UI_ExceptionPanel.BP_UI_ExceptionPanel_C.Tick
// 0x0048 (0x0048 - 0x0000)
struct BP_UI_ExceptionPanel_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
//static_assert(alignof(BP_UI_ExceptionPanel_C_Tick) == 0x000008, "Wrong alignment on BP_UI_ExceptionPanel_C_Tick");
//static_assert(sizeof(BP_UI_ExceptionPanel_C_Tick) == 0x000048, "Wrong size on BP_UI_ExceptionPanel_C_Tick");
//static_assert(offsetof(BP_UI_ExceptionPanel_C_Tick, MyGeometry) == 0x000000, "Member 'BP_UI_ExceptionPanel_C_Tick::MyGeometry' has a wrong offset!");
//static_assert(offsetof(BP_UI_ExceptionPanel_C_Tick, InDeltaTime) == 0x000040, "Member 'BP_UI_ExceptionPanel_C_Tick::InDeltaTime' has a wrong offset!");

}

