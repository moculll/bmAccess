#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GSGameSettings

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class GSGameSettings.GSGameUserSettings
// 0x0148 (0x0270 - 0x0128)
class UGSGameUserSettings final : public UGameUserSettings
{
public:
	int32                                         GSDesiredScreenHeight;                             // 0x0128(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableStartupSettings;                            // 0x012C(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 StartLevelName;                                    // 0x0130(0x0010)(BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         StartCommandList;                                  // 0x0140(0x0010)(BlueprintVisible, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TMap<uint8, class FString>                    GMCommandList;                                     // 0x0150(0x0050)(BlueprintVisible, Config, NativeAccessSpecifierPublic)
	bool                                          bNeverShowStartupUI;                               // 0x01A0(0x0001)(BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 MainMonitorID;                                     // 0x01A8(0x0010)(BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            UISettingData;                                     // 0x01B8(0x0050)(BlueprintVisible, Config, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            UISettingCustomData;                               // 0x0208(0x0050)(BlueprintVisible, Config, NativeAccessSpecifierPublic)
	int32                                         SettingpbTag;                                      // 0x0258(0x0004)(BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PrivacyAgreement;                                  // 0x025C(0x0004)(BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AgreementReaded;                                   // 0x0260(0x0004)(BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          FirstSettingFinish;                                // 0x0264(0x0001)(BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ArchiveMarkFinish;                                 // 0x0265(0x0001)(BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_266[0x2];                                      // 0x0266(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CrashReportAgreement;                              // 0x0268(0x0004)(BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ShowCrashReportUI;                                 // 0x026C(0x0004)(BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GSGameUserSettings">();
	}
	static class UGSGameUserSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGSGameUserSettings>();
	}
};
//static_assert(alignof(UGSGameUserSettings) == 0x000008, "Wrong alignment on UGSGameUserSettings");
//static_assert(sizeof(UGSGameUserSettings) == 0x000270, "Wrong size on UGSGameUserSettings");
//static_assert(offsetof(UGSGameUserSettings, GSDesiredScreenHeight) == 0x000128, "Member 'UGSGameUserSettings::GSDesiredScreenHeight' has a wrong offset!");
//static_assert(offsetof(UGSGameUserSettings, bEnableStartupSettings) == 0x00012C, "Member 'UGSGameUserSettings::bEnableStartupSettings' has a wrong offset!");
//static_assert(offsetof(UGSGameUserSettings, StartLevelName) == 0x000130, "Member 'UGSGameUserSettings::StartLevelName' has a wrong offset!");
//static_assert(offsetof(UGSGameUserSettings, StartCommandList) == 0x000140, "Member 'UGSGameUserSettings::StartCommandList' has a wrong offset!");
//static_assert(offsetof(UGSGameUserSettings, GMCommandList) == 0x000150, "Member 'UGSGameUserSettings::GMCommandList' has a wrong offset!");
//static_assert(offsetof(UGSGameUserSettings, bNeverShowStartupUI) == 0x0001A0, "Member 'UGSGameUserSettings::bNeverShowStartupUI' has a wrong offset!");
//static_assert(offsetof(UGSGameUserSettings, MainMonitorID) == 0x0001A8, "Member 'UGSGameUserSettings::MainMonitorID' has a wrong offset!");
//static_assert(offsetof(UGSGameUserSettings, UISettingData) == 0x0001B8, "Member 'UGSGameUserSettings::UISettingData' has a wrong offset!");
//static_assert(offsetof(UGSGameUserSettings, UISettingCustomData) == 0x000208, "Member 'UGSGameUserSettings::UISettingCustomData' has a wrong offset!");
//static_assert(offsetof(UGSGameUserSettings, SettingpbTag) == 0x000258, "Member 'UGSGameUserSettings::SettingpbTag' has a wrong offset!");
//static_assert(offsetof(UGSGameUserSettings, PrivacyAgreement) == 0x00025C, "Member 'UGSGameUserSettings::PrivacyAgreement' has a wrong offset!");
//static_assert(offsetof(UGSGameUserSettings, AgreementReaded) == 0x000260, "Member 'UGSGameUserSettings::AgreementReaded' has a wrong offset!");
//static_assert(offsetof(UGSGameUserSettings, FirstSettingFinish) == 0x000264, "Member 'UGSGameUserSettings::FirstSettingFinish' has a wrong offset!");
//static_assert(offsetof(UGSGameUserSettings, ArchiveMarkFinish) == 0x000265, "Member 'UGSGameUserSettings::ArchiveMarkFinish' has a wrong offset!");
//static_assert(offsetof(UGSGameUserSettings, CrashReportAgreement) == 0x000268, "Member 'UGSGameUserSettings::CrashReportAgreement' has a wrong offset!");
//static_assert(offsetof(UGSGameUserSettings, ShowCrashReportUI) == 0x00026C, "Member 'UGSGameUserSettings::ShowCrashReportUI' has a wrong offset!");

// Class GSGameSettings.GSGameSettings
// 0x0010 (0x0038 - 0x0028)
class UGSGameSettings final : public UObject
{
public:
	TArray<class FString>                         AvailableMapList;                                  // 0x0028(0x0010)(BlueprintVisible, ZeroConstructor, Config, NativeAccessSpecifierPublic)

public:
	void RefreshAvailableMapList();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GSGameSettings">();
	}
	static class UGSGameSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGSGameSettings>();
	}
};
//static_assert(alignof(UGSGameSettings) == 0x000008, "Wrong alignment on UGSGameSettings");
//static_assert(sizeof(UGSGameSettings) == 0x000038, "Wrong size on UGSGameSettings");
//static_assert(offsetof(UGSGameSettings, AvailableMapList) == 0x000028, "Member 'UGSGameSettings::AvailableMapList' has a wrong offset!");

}

