#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CinematicPrestreaming

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "MovieScene_structs.hpp"
#include "MovieScene_classes.hpp"
#include "CinematicPrestreaming_structs.hpp"


namespace SDK
{

// Class CinematicPrestreaming.CinePrestreamingData
// 0x0040 (0x0068 - 0x0028)
class UCinePrestreamingData final : public UObject
{
public:
	TArray<struct FFrameNumber>                   Times;                                             // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCinePrestreamingVTData>        VirtualTextureDatas;                               // 0x0038(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCinePrestreamingNaniteData>    NaniteDatas;                                       // 0x0048(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FDateTime                              RecordedTime;                                      // 0x0058(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntPoint                              RecordedResolution;                                // 0x0060(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CinePrestreamingData">();
	}
	static class UCinePrestreamingData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCinePrestreamingData>();
	}
};
//static_assert(alignof(UCinePrestreamingData) == 0x000008, "Wrong alignment on UCinePrestreamingData");
//static_assert(sizeof(UCinePrestreamingData) == 0x000068, "Wrong size on UCinePrestreamingData");
//static_assert(offsetof(UCinePrestreamingData, Times) == 0x000028, "Member 'UCinePrestreamingData::Times' has a wrong offset!");
//static_assert(offsetof(UCinePrestreamingData, VirtualTextureDatas) == 0x000038, "Member 'UCinePrestreamingData::VirtualTextureDatas' has a wrong offset!");
//static_assert(offsetof(UCinePrestreamingData, NaniteDatas) == 0x000048, "Member 'UCinePrestreamingData::NaniteDatas' has a wrong offset!");
//static_assert(offsetof(UCinePrestreamingData, RecordedTime) == 0x000058, "Member 'UCinePrestreamingData::RecordedTime' has a wrong offset!");
//static_assert(offsetof(UCinePrestreamingData, RecordedResolution) == 0x000060, "Member 'UCinePrestreamingData::RecordedResolution' has a wrong offset!");

// Class CinematicPrestreaming.MovieSceneCinePrestreamingSection
// 0x0038 (0x0120 - 0x00E8)
class UMovieSceneCinePrestreamingSection final : public UMovieSceneSection
{
public:
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UCinePrestreamingData>   PrestreamingAsset;                                 // 0x00F0(0x0028)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         StartFrameOffset;                                  // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         QualityLevel;                                      // 0x011C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void SetPrestreamingAsset(const class UCinePrestreamingData* InData);
	void SetQualityLevel(const int32 InLevel);
	void SetStartFrameOffset(const int32 InOffset);

	TSoftObjectPtr<class UCinePrestreamingData> GetPrestreamingAsset() const;
	int32 GetQualityLevel() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneCinePrestreamingSection">();
	}
	static class UMovieSceneCinePrestreamingSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneCinePrestreamingSection>();
	}
};
//static_assert(alignof(UMovieSceneCinePrestreamingSection) == 0x000008, "Wrong alignment on UMovieSceneCinePrestreamingSection");
//static_assert(sizeof(UMovieSceneCinePrestreamingSection) == 0x000120, "Wrong size on UMovieSceneCinePrestreamingSection");
//static_assert(offsetof(UMovieSceneCinePrestreamingSection, PrestreamingAsset) == 0x0000F0, "Member 'UMovieSceneCinePrestreamingSection::PrestreamingAsset' has a wrong offset!");
//static_assert(offsetof(UMovieSceneCinePrestreamingSection, StartFrameOffset) == 0x000118, "Member 'UMovieSceneCinePrestreamingSection::StartFrameOffset' has a wrong offset!");
//static_assert(offsetof(UMovieSceneCinePrestreamingSection, QualityLevel) == 0x00011C, "Member 'UMovieSceneCinePrestreamingSection::QualityLevel' has a wrong offset!");

// Class CinematicPrestreaming.MovieSceneCinePrestreamingTrack
// 0x0010 (0x00A0 - 0x0090)
class UMovieSceneCinePrestreamingTrack final : public UMovieSceneNameableTrack
{
public:
	TArray<class UMovieSceneSection*>             Sections;                                          // 0x0090(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneCinePrestreamingTrack">();
	}
	static class UMovieSceneCinePrestreamingTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneCinePrestreamingTrack>();
	}
};
//static_assert(alignof(UMovieSceneCinePrestreamingTrack) == 0x000008, "Wrong alignment on UMovieSceneCinePrestreamingTrack");
//static_assert(sizeof(UMovieSceneCinePrestreamingTrack) == 0x0000A0, "Wrong size on UMovieSceneCinePrestreamingTrack");
//static_assert(offsetof(UMovieSceneCinePrestreamingTrack, Sections) == 0x000090, "Member 'UMovieSceneCinePrestreamingTrack::Sections' has a wrong offset!");

// Class CinematicPrestreaming.MovieSceneCinePrestreamingTrackInstance
// 0x00A0 (0x00F0 - 0x0050)
class UMovieSceneCinePrestreamingTrackInstance final : public UMovieSceneTrackInstance
{
public:
	TMap<struct FMovieSceneTrackInstanceInput, class UCinePrestreamingData*> PrestreamingAssetMap;                              // 0x0050(0x0050)(Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A0[0x50];                                      // 0x00A0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneCinePrestreamingTrackInstance">();
	}
	static class UMovieSceneCinePrestreamingTrackInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneCinePrestreamingTrackInstance>();
	}
};
//static_assert(alignof(UMovieSceneCinePrestreamingTrackInstance) == 0x000008, "Wrong alignment on UMovieSceneCinePrestreamingTrackInstance");
//static_assert(sizeof(UMovieSceneCinePrestreamingTrackInstance) == 0x0000F0, "Wrong size on UMovieSceneCinePrestreamingTrackInstance");
//static_assert(offsetof(UMovieSceneCinePrestreamingTrackInstance, PrestreamingAssetMap) == 0x000050, "Member 'UMovieSceneCinePrestreamingTrackInstance::PrestreamingAssetMap' has a wrong offset!");

}

