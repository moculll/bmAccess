#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GSSlateUtils

#include "Basic.hpp"


namespace SDK::Params
{

// Function GSSlateUtils.GSSlateUtilsBPLibrary.ClearCacheSlateBrush
// 0x0008 (0x0008 - 0x0000)
struct GSSlateUtilsBPLibrary_ClearCacheSlateBrush final
{
public:
	class UUserWidget*                            TargetUserWidget;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(GSSlateUtilsBPLibrary_ClearCacheSlateBrush) == 0x000008, "Wrong alignment on GSSlateUtilsBPLibrary_ClearCacheSlateBrush");
//static_assert(sizeof(GSSlateUtilsBPLibrary_ClearCacheSlateBrush) == 0x000008, "Wrong size on GSSlateUtilsBPLibrary_ClearCacheSlateBrush");
//static_assert(offsetof(GSSlateUtilsBPLibrary_ClearCacheSlateBrush, TargetUserWidget) == 0x000000, "Member 'GSSlateUtilsBPLibrary_ClearCacheSlateBrush::TargetUserWidget' has a wrong offset!");

// Function GSSlateUtils.GSSlateUtilsBPLibrary.SetChildrenWidgetByName_SImage
// 0x0020 (0x0020 - 0x0000)
struct GSSlateUtilsBPLibrary_SetChildrenWidgetByName_SImage final
{
public:
	class UUserWidget*                            TargetUserWidget;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TargetName;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             Texture;                                           // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(GSSlateUtilsBPLibrary_SetChildrenWidgetByName_SImage) == 0x000008, "Wrong alignment on GSSlateUtilsBPLibrary_SetChildrenWidgetByName_SImage");
//static_assert(sizeof(GSSlateUtilsBPLibrary_SetChildrenWidgetByName_SImage) == 0x000020, "Wrong size on GSSlateUtilsBPLibrary_SetChildrenWidgetByName_SImage");
//static_assert(offsetof(GSSlateUtilsBPLibrary_SetChildrenWidgetByName_SImage, TargetUserWidget) == 0x000000, "Member 'GSSlateUtilsBPLibrary_SetChildrenWidgetByName_SImage::TargetUserWidget' has a wrong offset!");
//static_assert(offsetof(GSSlateUtilsBPLibrary_SetChildrenWidgetByName_SImage, TargetName) == 0x000008, "Member 'GSSlateUtilsBPLibrary_SetChildrenWidgetByName_SImage::TargetName' has a wrong offset!");
//static_assert(offsetof(GSSlateUtilsBPLibrary_SetChildrenWidgetByName_SImage, Texture) == 0x000010, "Member 'GSSlateUtilsBPLibrary_SetChildrenWidgetByName_SImage::Texture' has a wrong offset!");
//static_assert(offsetof(GSSlateUtilsBPLibrary_SetChildrenWidgetByName_SImage, ReturnValue) == 0x000018, "Member 'GSSlateUtilsBPLibrary_SetChildrenWidgetByName_SImage::ReturnValue' has a wrong offset!");

// Function GSSlateUtils.GSSlateUtilsBPLibrary.SetChildrenWidgetByName_STextBlock
// 0x0030 (0x0030 - 0x0000)
struct GSSlateUtilsBPLibrary_SetChildrenWidgetByName_STextBlock final
{
public:
	class UUserWidget*                            TargetUserWidget;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TargetName;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   TextContent;                                       // 0x0010(0x0018)(Parm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(GSSlateUtilsBPLibrary_SetChildrenWidgetByName_STextBlock) == 0x000008, "Wrong alignment on GSSlateUtilsBPLibrary_SetChildrenWidgetByName_STextBlock");
//static_assert(sizeof(GSSlateUtilsBPLibrary_SetChildrenWidgetByName_STextBlock) == 0x000030, "Wrong size on GSSlateUtilsBPLibrary_SetChildrenWidgetByName_STextBlock");
//static_assert(offsetof(GSSlateUtilsBPLibrary_SetChildrenWidgetByName_STextBlock, TargetUserWidget) == 0x000000, "Member 'GSSlateUtilsBPLibrary_SetChildrenWidgetByName_STextBlock::TargetUserWidget' has a wrong offset!");
//static_assert(offsetof(GSSlateUtilsBPLibrary_SetChildrenWidgetByName_STextBlock, TargetName) == 0x000008, "Member 'GSSlateUtilsBPLibrary_SetChildrenWidgetByName_STextBlock::TargetName' has a wrong offset!");
//static_assert(offsetof(GSSlateUtilsBPLibrary_SetChildrenWidgetByName_STextBlock, TextContent) == 0x000010, "Member 'GSSlateUtilsBPLibrary_SetChildrenWidgetByName_STextBlock::TextContent' has a wrong offset!");
//static_assert(offsetof(GSSlateUtilsBPLibrary_SetChildrenWidgetByName_STextBlock, ReturnValue) == 0x000028, "Member 'GSSlateUtilsBPLibrary_SetChildrenWidgetByName_STextBlock::ReturnValue' has a wrong offset!");

// Function GSSlateUtils.GSSlateUtilsBPLibrary.SetChildrenWidgetByUImage_SImage
// 0x0020 (0x0020 - 0x0000)
struct GSSlateUtilsBPLibrary_SetChildrenWidgetByUImage_SImage final
{
public:
	class UUserWidget*                            TargetUserWidget;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                 TargetUImage;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             Texture;                                           // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(GSSlateUtilsBPLibrary_SetChildrenWidgetByUImage_SImage) == 0x000008, "Wrong alignment on GSSlateUtilsBPLibrary_SetChildrenWidgetByUImage_SImage");
//static_assert(sizeof(GSSlateUtilsBPLibrary_SetChildrenWidgetByUImage_SImage) == 0x000020, "Wrong size on GSSlateUtilsBPLibrary_SetChildrenWidgetByUImage_SImage");
//static_assert(offsetof(GSSlateUtilsBPLibrary_SetChildrenWidgetByUImage_SImage, TargetUserWidget) == 0x000000, "Member 'GSSlateUtilsBPLibrary_SetChildrenWidgetByUImage_SImage::TargetUserWidget' has a wrong offset!");
//static_assert(offsetof(GSSlateUtilsBPLibrary_SetChildrenWidgetByUImage_SImage, TargetUImage) == 0x000008, "Member 'GSSlateUtilsBPLibrary_SetChildrenWidgetByUImage_SImage::TargetUImage' has a wrong offset!");
//static_assert(offsetof(GSSlateUtilsBPLibrary_SetChildrenWidgetByUImage_SImage, Texture) == 0x000010, "Member 'GSSlateUtilsBPLibrary_SetChildrenWidgetByUImage_SImage::Texture' has a wrong offset!");
//static_assert(offsetof(GSSlateUtilsBPLibrary_SetChildrenWidgetByUImage_SImage, ReturnValue) == 0x000018, "Member 'GSSlateUtilsBPLibrary_SetChildrenWidgetByUImage_SImage::ReturnValue' has a wrong offset!");

// Function GSSlateUtils.GSSlateUtilsBPLibrary.SetChildrenWidgetByUTextBlock_STextBlock
// 0x0030 (0x0030 - 0x0000)
struct GSSlateUtilsBPLibrary_SetChildrenWidgetByUTextBlock_STextBlock final
{
public:
	class UUserWidget*                            TargetUserWidget;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                             TargetUTextBlock;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   TextContent;                                       // 0x0010(0x0018)(Parm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//static_assert(alignof(GSSlateUtilsBPLibrary_SetChildrenWidgetByUTextBlock_STextBlock) == 0x000008, "Wrong alignment on GSSlateUtilsBPLibrary_SetChildrenWidgetByUTextBlock_STextBlock");
//static_assert(sizeof(GSSlateUtilsBPLibrary_SetChildrenWidgetByUTextBlock_STextBlock) == 0x000030, "Wrong size on GSSlateUtilsBPLibrary_SetChildrenWidgetByUTextBlock_STextBlock");
//static_assert(offsetof(GSSlateUtilsBPLibrary_SetChildrenWidgetByUTextBlock_STextBlock, TargetUserWidget) == 0x000000, "Member 'GSSlateUtilsBPLibrary_SetChildrenWidgetByUTextBlock_STextBlock::TargetUserWidget' has a wrong offset!");
//static_assert(offsetof(GSSlateUtilsBPLibrary_SetChildrenWidgetByUTextBlock_STextBlock, TargetUTextBlock) == 0x000008, "Member 'GSSlateUtilsBPLibrary_SetChildrenWidgetByUTextBlock_STextBlock::TargetUTextBlock' has a wrong offset!");
//static_assert(offsetof(GSSlateUtilsBPLibrary_SetChildrenWidgetByUTextBlock_STextBlock, TextContent) == 0x000010, "Member 'GSSlateUtilsBPLibrary_SetChildrenWidgetByUTextBlock_STextBlock::TextContent' has a wrong offset!");
//static_assert(offsetof(GSSlateUtilsBPLibrary_SetChildrenWidgetByUTextBlock_STextBlock, ReturnValue) == 0x000028, "Member 'GSSlateUtilsBPLibrary_SetChildrenWidgetByUTextBlock_STextBlock::ReturnValue' has a wrong offset!");

}

