#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JavascriptHttp

#include "Basic.hpp"

#include "JavascriptHttp_classes.hpp"
#include "JavascriptHttp_parameters.hpp"


namespace SDK
{

// Function JavascriptHttp.JavascriptHttpRequest.CancelRequest
// (Final, Native, Public, BlueprintCallable)

void UJavascriptHttpRequest::CancelRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JavascriptHttpRequest", "CancelRequest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function JavascriptHttp.JavascriptHttpRequest.GetContentAsString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UJavascriptHttpRequest::GetContentAsString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JavascriptHttpRequest", "GetContentAsString");

	Params::JavascriptHttpRequest_GetContentAsString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JavascriptHttp.JavascriptHttpRequest.GetContentLength
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UJavascriptHttpRequest::GetContentLength()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JavascriptHttpRequest", "GetContentLength");

	Params::JavascriptHttpRequest_GetContentLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JavascriptHttp.JavascriptHttpRequest.GetContentToMemory
// (Final, Native, Public, BlueprintCallable)

void UJavascriptHttpRequest::GetContentToMemory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JavascriptHttpRequest", "GetContentToMemory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function JavascriptHttp.JavascriptHttpRequest.GetElapsedTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UJavascriptHttpRequest::GetElapsedTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JavascriptHttpRequest", "GetElapsedTime");

	Params::JavascriptHttpRequest_GetElapsedTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JavascriptHttp.JavascriptHttpRequest.GetResponseCode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UJavascriptHttpRequest::GetResponseCode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JavascriptHttpRequest", "GetResponseCode");

	Params::JavascriptHttpRequest_GetResponseCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JavascriptHttp.JavascriptHttpRequest.GetStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EJavascriptHttpRequestStatus            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EJavascriptHttpRequestStatus UJavascriptHttpRequest::GetStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JavascriptHttpRequest", "GetStatus");

	Params::JavascriptHttpRequest_GetStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JavascriptHttp.JavascriptHttpRequest.GetVerb
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UJavascriptHttpRequest::GetVerb()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JavascriptHttpRequest", "GetVerb");

	Params::JavascriptHttpRequest_GetVerb Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction JavascriptHttp.JavascriptHttpRequest.JavascriptHttpRequestCompleteDelegate__DelegateSignature
// (Public, Delegate)
// Parameters:
// bool                                    Successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJavascriptHttpRequest::JavascriptHttpRequestCompleteDelegate__DelegateSignature(bool Successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JavascriptHttpRequest", "JavascriptHttpRequestCompleteDelegate__DelegateSignature");

	Params::JavascriptHttpRequest_JavascriptHttpRequestCompleteDelegate__DelegateSignature Parms{};

	Parms.Successful = Successful;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction JavascriptHttp.JavascriptHttpRequest.JavascriptHttpRequestProgressDelegate__DelegateSignature
// (Public, Delegate)
// Parameters:
// int32                                   Sent                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Recv                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJavascriptHttpRequest::JavascriptHttpRequestProgressDelegate__DelegateSignature(int32 Sent, int32 Recv)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JavascriptHttpRequest", "JavascriptHttpRequestProgressDelegate__DelegateSignature");

	Params::JavascriptHttpRequest_JavascriptHttpRequestProgressDelegate__DelegateSignature Parms{};

	Parms.Sent = Sent;
	Parms.Recv = Recv;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JavascriptHttp.JavascriptHttpRequest.ProcessRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UJavascriptHttpRequest::ProcessRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JavascriptHttpRequest", "ProcessRequest");

	Params::JavascriptHttpRequest_ProcessRequest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function JavascriptHttp.JavascriptHttpRequest.SetContentAsString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ContentString                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJavascriptHttpRequest::SetContentAsString(const class FString& ContentString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JavascriptHttpRequest", "SetContentAsString");

	Params::JavascriptHttpRequest_SetContentAsString Parms{};

	Parms.ContentString = std::move(ContentString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function JavascriptHttp.JavascriptHttpRequest.SetContentFromMemory
// (Final, Native, Public, BlueprintCallable)

void UJavascriptHttpRequest::SetContentFromMemory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JavascriptHttpRequest", "SetContentFromMemory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function JavascriptHttp.JavascriptHttpRequest.SetContentWithFiles
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   FilePaths                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FString                           Boundary                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Content                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJavascriptHttpRequest::SetContentWithFiles(const TArray<class FString>& FilePaths, const class FString& Boundary, const class FString& Content)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JavascriptHttpRequest", "SetContentWithFiles");

	Params::JavascriptHttpRequest_SetContentWithFiles Parms{};

	Parms.FilePaths = std::move(FilePaths);
	Parms.Boundary = std::move(Boundary);
	Parms.Content = std::move(Content);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function JavascriptHttp.JavascriptHttpRequest.SetHeader
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           HeaderName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           HeaderValue                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJavascriptHttpRequest::SetHeader(const class FString& HeaderName, const class FString& HeaderValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JavascriptHttpRequest", "SetHeader");

	Params::JavascriptHttpRequest_SetHeader Parms{};

	Parms.HeaderName = std::move(HeaderName);
	Parms.HeaderValue = std::move(HeaderValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function JavascriptHttp.JavascriptHttpRequest.SetURL
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJavascriptHttpRequest::SetURL(const class FString& URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JavascriptHttpRequest", "SetURL");

	Params::JavascriptHttpRequest_SetURL Parms{};

	Parms.URL = std::move(URL);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function JavascriptHttp.JavascriptHttpRequest.SetVerb
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Verb                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UJavascriptHttpRequest::SetVerb(const class FString& Verb)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JavascriptHttpRequest", "SetVerb");

	Params::JavascriptHttpRequest_SetVerb Parms{};

	Parms.Verb = std::move(Verb);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

