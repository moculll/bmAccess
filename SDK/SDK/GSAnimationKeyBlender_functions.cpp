#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GSAnimationKeyBlender

#include "Basic.hpp"

#include "GSAnimationKeyBlender_classes.hpp"
#include "GSAnimationKeyBlender_parameters.hpp"


namespace SDK
{

// Function GSAnimationKeyBlender.GSAnimKeyStateBlender.BeforeInitAddBindingActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ALevelSequenceActor*              RefLevelSequenceActor                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BindingActorTagName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGSAnimKeyStateBlender::BeforeInitAddBindingActor(class ALevelSequenceActor* RefLevelSequenceActor, class FName BindingActorTagName, class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSAnimKeyStateBlender", "BeforeInitAddBindingActor");

	Params::GSAnimKeyStateBlender_BeforeInitAddBindingActor Parms{};

	Parms.RefLevelSequenceActor = RefLevelSequenceActor;
	Parms.BindingActorTagName = BindingActorTagName;
	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GSAnimationKeyBlender.GSAnimKeyStateBlender.DoDebug
// (Final, Native, Public, BlueprintCallable)

void UGSAnimKeyStateBlender::DoDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSAnimKeyStateBlender", "DoDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GSAnimationKeyBlender.GSAnimKeyStateBlender.DoTick
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGSAnimKeyStateBlender::DoTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSAnimKeyStateBlender", "DoTick");

	Params::GSAnimKeyStateBlender_DoTick Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GSAnimationKeyBlender.GSAnimKeyStateBlender.EasingToEndState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsFromForceSetStateImmediately                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGSAnimKeyStateBlender::EasingToEndState(float Alpha, bool IsFromForceSetStateImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSAnimKeyStateBlender", "EasingToEndState");

	Params::GSAnimKeyStateBlender_EasingToEndState Parms{};

	Parms.Alpha = Alpha;
	Parms.IsFromForceSetStateImmediately = IsFromForceSetStateImmediately;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GSAnimationKeyBlender.GSAnimKeyStateBlender.ForceSetStateImmediately
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             TargetStateName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGSAnimKeyStateBlender::ForceSetStateImmediately(class FName TargetStateName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSAnimKeyStateBlender", "ForceSetStateImmediately");

	Params::GSAnimKeyStateBlender_ForceSetStateImmediately Parms{};

	Parms.TargetStateName = TargetStateName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GSAnimationKeyBlender.GSAnimKeyStateBlender.GetBeginStateName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UGSAnimKeyStateBlender::GetBeginStateName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSAnimKeyStateBlender", "GetBeginStateName");

	Params::GSAnimKeyStateBlender_GetBeginStateName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GSAnimationKeyBlender.GSAnimKeyStateBlender.GetCurrentStateName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UGSAnimKeyStateBlender::GetCurrentStateName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSAnimKeyStateBlender", "GetCurrentStateName");

	Params::GSAnimKeyStateBlender_GetCurrentStateName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GSAnimationKeyBlender.GSAnimKeyStateBlender.GetEndStateName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UGSAnimKeyStateBlender::GetEndStateName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSAnimKeyStateBlender", "GetEndStateName");

	Params::GSAnimKeyStateBlender_GetEndStateName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GSAnimationKeyBlender.GSAnimKeyStateBlender.GetPredicToStateCfgEasingTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             TargetStateName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutDelayEasingTime                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGSAnimKeyStateBlender::GetPredicToStateCfgEasingTime(class FName TargetStateName, float* OutDelayEasingTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSAnimKeyStateBlender", "GetPredicToStateCfgEasingTime");

	Params::GSAnimKeyStateBlender_GetPredicToStateCfgEasingTime Parms{};

	Parms.TargetStateName = TargetStateName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDelayEasingTime != nullptr)
		*OutDelayEasingTime = Parms.OutDelayEasingTime;

	return Parms.ReturnValue;
}


// Function GSAnimationKeyBlender.GSAnimKeyStateBlender.InitAddStateToStateEasingCfg
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             FromStateName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ToStateName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InEasingTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEasingFunc                             InEasingFunc                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InEasingBlendExp                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InEasingSteps                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGSAnimKBEnumBoolEasing                 InEnumValEasingType                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGSAnimKBEnumBoolEasing                 InBoolValEasingType                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayEasingTime                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGSAnimKeyStateBlender::InitAddStateToStateEasingCfg(class FName FromStateName, class FName ToStateName, float InEasingTime, EEasingFunc InEasingFunc, float InEasingBlendExp, int32 InEasingSteps, EGSAnimKBEnumBoolEasing InEnumValEasingType, EGSAnimKBEnumBoolEasing InBoolValEasingType, float InDelayEasingTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSAnimKeyStateBlender", "InitAddStateToStateEasingCfg");

	Params::GSAnimKeyStateBlender_InitAddStateToStateEasingCfg Parms{};

	Parms.FromStateName = FromStateName;
	Parms.ToStateName = ToStateName;
	Parms.InEasingTime = InEasingTime;
	Parms.InEasingFunc = InEasingFunc;
	Parms.InEasingBlendExp = InEasingBlendExp;
	Parms.InEasingSteps = InEasingSteps;
	Parms.InEnumValEasingType = InEnumValEasingType;
	Parms.InBoolValEasingType = InBoolValEasingType;
	Parms.InDelayEasingTime = InDelayEasingTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GSAnimationKeyBlender.GSAnimKeyStateBlender.InitResetState
// (Final, Native, Public, BlueprintCallable)

void UGSAnimKeyStateBlender::InitResetState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSAnimKeyStateBlender", "InitResetState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GSAnimationKeyBlender.GSAnimKeyStateBlender.InitSetDefaultEasingCfg
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InEasingTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEasingFunc                             InEasingFunc                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InEasingBlendExp                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InEasingSteps                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGSAnimKBEnumBoolEasing                 InEnumValEasingType                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGSAnimKBEnumBoolEasing                 InBoolValEasingType                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDelayEasingTime                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGSAnimKeyStateBlender::InitSetDefaultEasingCfg(float InEasingTime, EEasingFunc InEasingFunc, float InEasingBlendExp, int32 InEasingSteps, EGSAnimKBEnumBoolEasing InEnumValEasingType, EGSAnimKBEnumBoolEasing InBoolValEasingType, float InDelayEasingTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSAnimKeyStateBlender", "InitSetDefaultEasingCfg");

	Params::GSAnimKeyStateBlender_InitSetDefaultEasingCfg Parms{};

	Parms.InEasingTime = InEasingTime;
	Parms.InEasingFunc = InEasingFunc;
	Parms.InEasingBlendExp = InEasingBlendExp;
	Parms.InEasingSteps = InEasingSteps;
	Parms.InEnumValEasingType = InEnumValEasingType;
	Parms.InBoolValEasingType = InBoolValEasingType;
	Parms.InDelayEasingTime = InDelayEasingTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GSAnimationKeyBlender.GSAnimKeyStateBlender.InitSetLevelSequence
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InRefObject                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequence*                   InLevelSequence                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsStrictStateMatchCfg                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsAlwaysUsingEndStateAsChanging                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGSAnimKeyStateBlender::InitSetLevelSequence(class UObject* InRefObject, class ULevelSequence* InLevelSequence, bool InIsStrictStateMatchCfg, bool InIsAlwaysUsingEndStateAsChanging)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSAnimKeyStateBlender", "InitSetLevelSequence");

	Params::GSAnimKeyStateBlender_InitSetLevelSequence Parms{};

	Parms.InRefObject = InRefObject;
	Parms.InLevelSequence = InLevelSequence;
	Parms.InIsStrictStateMatchCfg = InIsStrictStateMatchCfg;
	Parms.InIsAlwaysUsingEndStateAsChanging = InIsAlwaysUsingEndStateAsChanging;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GSAnimationKeyBlender.GSAnimKeyStateBlender.InitSetWidgetAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      InRefUserWidget                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidgetAnimation*                 InWidgetAnimation                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsStrictStateMatchCfg                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsAlwaysUsingEndStateAsChanging                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGSAnimKeyStateBlender::InitSetWidgetAnimation(class UUserWidget* InRefUserWidget, class UWidgetAnimation* InWidgetAnimation, bool InIsStrictStateMatchCfg, bool InIsAlwaysUsingEndStateAsChanging)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSAnimKeyStateBlender", "InitSetWidgetAnimation");

	Params::GSAnimKeyStateBlender_InitSetWidgetAnimation Parms{};

	Parms.InRefUserWidget = InRefUserWidget;
	Parms.InWidgetAnimation = InWidgetAnimation;
	Parms.InIsStrictStateMatchCfg = InIsStrictStateMatchCfg;
	Parms.InIsAlwaysUsingEndStateAsChanging = InIsAlwaysUsingEndStateAsChanging;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GSAnimationKeyBlender.GSAnimKeyStateBlender.IsInBlending
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGSAnimKeyStateBlender::IsInBlending()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSAnimKeyStateBlender", "IsInBlending");

	Params::GSAnimKeyStateBlender_IsInBlending Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GSAnimationKeyBlender.GSAnimKeyStateBlender.ToState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             TargetStateName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InStateDelayEasingTime                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InStateOverideEasingTime                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGSAnimKeyStateBlender::ToState(class FName TargetStateName, float InStateDelayEasingTime, float InStateOverideEasingTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSAnimKeyStateBlender", "ToState");

	Params::GSAnimKeyStateBlender_ToState Parms{};

	Parms.TargetStateName = TargetStateName;
	Parms.InStateDelayEasingTime = InStateDelayEasingTime;
	Parms.InStateOverideEasingTime = InStateOverideEasingTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GSAnimationKeyBlender.GSAnimKeyStateBlenderUtil.RegAnimKeyStateBlenderObjForTick
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGSAnimKeyStateBlender*           AnimKeyStateBlender                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGSAnimKeyStateBlenderUtil::RegAnimKeyStateBlenderObjForTick(class UGSAnimKeyStateBlender* AnimKeyStateBlender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GSAnimKeyStateBlenderUtil", "RegAnimKeyStateBlenderObjForTick");

	Params::GSAnimKeyStateBlenderUtil_RegAnimKeyStateBlenderObjForTick Parms{};

	Parms.AnimKeyStateBlender = AnimKeyStateBlender;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GSAnimationKeyBlender.GSAnimKeyStateBlenderUtil.UnRegAnimKeyStateBlenderObjForTick
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGSAnimKeyStateBlender*           AnimKeyStateBlender                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGSAnimKeyStateBlenderUtil::UnRegAnimKeyStateBlenderObjForTick(class UGSAnimKeyStateBlender* AnimKeyStateBlender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GSAnimKeyStateBlenderUtil", "UnRegAnimKeyStateBlenderObjForTick");

	Params::GSAnimKeyStateBlenderUtil_UnRegAnimKeyStateBlenderObjForTick Parms{};

	Parms.AnimKeyStateBlender = AnimKeyStateBlender;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

