#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GSNiagara

#include "Basic.hpp"

#include "GSNiagara_classes.hpp"
#include "GSNiagara_parameters.hpp"


namespace SDK
{

// Function GSNiagara.GSNiagaraBatchingSpriteConfigDA.ClearPaticleConfigData
// (Final, Native, Public, BlueprintCallable)

void UGSNiagaraBatchingSpriteConfigDA::ClearPaticleConfigData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSNiagaraBatchingSpriteConfigDA", "ClearPaticleConfigData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GSNiagara.GSNiagaraBatchingSpriteConfigDA.InitGSParticlesConfigInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bForceSet                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGSNiagaraBatchingSpriteConfigDA::InitGSParticlesConfigInfo(bool bForceSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSNiagaraBatchingSpriteConfigDA", "InitGSParticlesConfigInfo");

	Params::GSNiagaraBatchingSpriteConfigDA_InitGSParticlesConfigInfo Parms{};

	Parms.bForceSet = bForceSet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GSNiagara.GSNiagaraArrayData.AddParticle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGSNiagaraParticleInfo           Info                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGSNiagaraArrayData::AddParticle(const struct FGSNiagaraParticleInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSNiagaraArrayData", "AddParticle");

	Params::GSNiagaraArrayData_AddParticle Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GSNiagara.GSNiagaraArrayData.ClearParticleArrayData
// (Final, Native, Public, BlueprintCallable)

void UGSNiagaraArrayData::ClearParticleArrayData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSNiagaraArrayData", "ClearParticleArrayData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GSNiagara.GSNiagaraArrayData.ForceSetParticlePos
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FVector>                  TargetPosArray                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UGSNiagaraArrayData::ForceSetParticlePos(const TArray<struct FVector>& TargetPosArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSNiagaraArrayData", "ForceSetParticlePos");

	Params::GSNiagaraArrayData_ForceSetParticlePos Parms{};

	Parms.TargetPosArray = std::move(TargetPosArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GSNiagara.GSNiagaraArrayData.ForceSetParticleSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<float>                           TargetSizeArray                                        (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UGSNiagaraArrayData::ForceSetParticleSize(const TArray<float>& TargetSizeArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSNiagaraArrayData", "ForceSetParticleSize");

	Params::GSNiagaraArrayData_ForceSetParticleSize Parms{};

	Parms.TargetSizeArray = std::move(TargetSizeArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GSNiagara.GSNiagaraArrayData.RemoveParticle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGSNiagaraParticleInfo           Info                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGSNiagaraArrayData::RemoveParticle(const struct FGSNiagaraParticleInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSNiagaraArrayData", "RemoveParticle");

	Params::GSNiagaraArrayData_RemoveParticle Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GSNiagara.GSNiagaraArrayData.UpdateParticle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FGSNiagaraParticleInfo>   InParticleInfoArray                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UGSNiagaraArrayData::UpdateParticle(const TArray<struct FGSNiagaraParticleInfo>& InParticleInfoArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GSNiagaraArrayData", "UpdateParticle");

	Params::GSNiagaraArrayData_UpdateParticle Parms{};

	Parms.InParticleInfoArray = std::move(InParticleInfoArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

