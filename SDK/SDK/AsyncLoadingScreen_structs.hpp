#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AsyncLoadingScreen

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum AsyncLoadingScreen.EGSLoadingScreenState
// NumValues: 0x0005
enum class EGSLoadingScreenState : uint8
{
	Idle                                     = 0,
	SlateThreadUpdating                      = 1,
	GameThreadWaitingMovieFinish             = 2,
	MainThreadUpdating                       = 3,
	EGSLoadingScreenState_MAX                = 4,
};

// Enum AsyncLoadingScreen.EGSLoadingScreenType
// NumValues: 0x0007
enum class EGSLoadingScreenType : uint8
{
	Unknown                                  = 0,
	LoadProgOnly                             = 1,
	Full                                     = 2,
	FullBlack                                = 3,
	FullWhite                                = 4,
	Chapter                                  = 5,
	EGSLoadingScreenType_MAX                 = 6,
};

// ScriptStruct AsyncLoadingScreen.LoadingTipsInfo
// 0x0040 (0x0040 - 0x0000)
struct FLoadingTipsInfo final
{
public:
	int32                                         TipsId;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DurTime;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Title;                                             // 0x0008(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   Tips;                                              // 0x0020(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UTexture2D*                             ImageObj;                                          // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(FLoadingTipsInfo) == 0x000008, "Wrong alignment on FLoadingTipsInfo");
//static_assert(sizeof(FLoadingTipsInfo) == 0x000040, "Wrong size on FLoadingTipsInfo");
//static_assert(offsetof(FLoadingTipsInfo, TipsId) == 0x000000, "Member 'FLoadingTipsInfo::TipsId' has a wrong offset!");
//static_assert(offsetof(FLoadingTipsInfo, DurTime) == 0x000004, "Member 'FLoadingTipsInfo::DurTime' has a wrong offset!");
//static_assert(offsetof(FLoadingTipsInfo, Title) == 0x000008, "Member 'FLoadingTipsInfo::Title' has a wrong offset!");
//static_assert(offsetof(FLoadingTipsInfo, Tips) == 0x000020, "Member 'FLoadingTipsInfo::Tips' has a wrong offset!");
//static_assert(offsetof(FLoadingTipsInfo, ImageObj) == 0x000038, "Member 'FLoadingTipsInfo::ImageObj' has a wrong offset!");

// ScriptStruct AsyncLoadingScreen.LoadingProgressInfo
// 0x0030 (0x0030 - 0x0000)
struct FLoadingProgressInfo final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        ProgressSprite;                                    // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSoftObjectPath>                DetailSprites;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
//static_assert(alignof(FLoadingProgressInfo) == 0x000008, "Wrong alignment on FLoadingProgressInfo");
//static_assert(sizeof(FLoadingProgressInfo) == 0x000030, "Wrong size on FLoadingProgressInfo");
//static_assert(offsetof(FLoadingProgressInfo, Duration) == 0x000000, "Member 'FLoadingProgressInfo::Duration' has a wrong offset!");
//static_assert(offsetof(FLoadingProgressInfo, ProgressSprite) == 0x000008, "Member 'FLoadingProgressInfo::ProgressSprite' has a wrong offset!");
//static_assert(offsetof(FLoadingProgressInfo, DetailSprites) == 0x000020, "Member 'FLoadingProgressInfo::DetailSprites' has a wrong offset!");

// ScriptStruct AsyncLoadingScreen.ChapterInfo
// 0x0040 (0x0040 - 0x0000)
struct FChapterInfo final
{
public:
	bool                                          IsNeedShow;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ChapterPreName;                                    // 0x0008(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   ChapterName;                                       // 0x0020(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UTexture2D*                             ImageObj;                                          // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//static_assert(alignof(FChapterInfo) == 0x000008, "Wrong alignment on FChapterInfo");
//static_assert(sizeof(FChapterInfo) == 0x000040, "Wrong size on FChapterInfo");
//static_assert(offsetof(FChapterInfo, IsNeedShow) == 0x000000, "Member 'FChapterInfo::IsNeedShow' has a wrong offset!");
//static_assert(offsetof(FChapterInfo, ChapterPreName) == 0x000008, "Member 'FChapterInfo::ChapterPreName' has a wrong offset!");
//static_assert(offsetof(FChapterInfo, ChapterName) == 0x000020, "Member 'FChapterInfo::ChapterName' has a wrong offset!");
//static_assert(offsetof(FChapterInfo, ImageObj) == 0x000038, "Member 'FChapterInfo::ImageObj' has a wrong offset!");

}

