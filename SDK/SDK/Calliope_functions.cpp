#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Calliope

#include "Basic.hpp"

#include "Calliope_classes.hpp"
#include "Calliope_parameters.hpp"


namespace SDK
{

// Function Calliope.CalliopeAsset.CreateInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Owner                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCalliopeAsset*                   CalliopeAsset                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InstancePrefixName                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCalliopeAsset*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCalliopeAsset* UCalliopeAsset::CreateInstance(class UObject* Owner, class UCalliopeAsset* CalliopeAsset, const class FString& InstancePrefixName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CalliopeAsset", "CreateInstance");

	Params::CalliopeAsset_CreateInstance Parms{};

	Parms.Owner = Owner;
	Parms.CalliopeAsset = CalliopeAsset;
	Parms.InstancePrefixName = std::move(InstancePrefixName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeAsset.AddBranchGraph
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             GraphName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeAsset::AddBranchGraph(const class FName& GraphName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "AddBranchGraph");

	Params::CalliopeAsset_AddBranchGraph Parms{};

	Parms.GraphName = GraphName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeAsset.AddParameter
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EGsManagedParamType                     ParamType                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ObjectPath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ActorGuid                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AliasName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCalliopeGuid                    OutConfigGuid                                          (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeAsset::AddParameter(const EGsManagedParamType& ParamType, const class FString& ObjectPath, const class FString& ActorGuid, const class FName& AliasName, int32 State, struct FCalliopeGuid* OutConfigGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "AddParameter");

	Params::CalliopeAsset_AddParameter Parms{};

	Parms.ParamType = ParamType;
	Parms.ObjectPath = std::move(ObjectPath);
	Parms.ActorGuid = std::move(ActorGuid);
	Parms.AliasName = AliasName;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutConfigGuid != nullptr)
		*OutConfigGuid = std::move(Parms.OutConfigGuid);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeAsset.AssignParameterUnitTamerReference
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCalliopeGuid                    InConfigGuid                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ObjectPath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeAsset::AssignParameterUnitTamerReference(const struct FCalliopeGuid& InConfigGuid, const class FString& ObjectPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "AssignParameterUnitTamerReference");

	Params::CalliopeAsset_AssignParameterUnitTamerReference Parms{};

	Parms.InConfigGuid = std::move(InConfigGuid);
	Parms.ObjectPath = std::move(ObjectPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeAsset.ClearInvalidBranchGraph
// (Final, Native, Public, BlueprintCallable)

void UCalliopeAsset::ClearInvalidBranchGraph()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "ClearInvalidBranchGraph");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeAsset.ClearParameters
// (Final, Native, Public, BlueprintCallable)

void UCalliopeAsset::ClearParameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "ClearParameters");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeAsset.ClearRecordData
// (Final, Native, Public, BlueprintCallable)

void UCalliopeAsset::ClearRecordData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "ClearRecordData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeAsset.DeactivateNode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCalliopeGuid                    InGuid                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeAsset::DeactivateNode(const struct FCalliopeGuid& InGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "DeactivateNode");

	Params::CalliopeAsset_DeactivateNode Parms{};

	Parms.InGuid = std::move(InGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeAsset.ExecuteSubGraphReconstructionRequested
// (Final, Native, Public, BlueprintCallable)

void UCalliopeAsset::ExecuteSubGraphReconstructionRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "ExecuteSubGraphReconstructionRequested");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeAsset.ExportToData
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeAsset::ExportToData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "ExportToData");

	Params::CalliopeAsset_ExportToData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeAsset.FinishInstance
// (Final, Native, Public, BlueprintCallable)

void UCalliopeAsset::FinishInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "FinishInstance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeAsset.GetParameterActorGuidByConfigGuid
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCalliopeGuid                    InConfigGuid                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutActorGuid                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeAsset::GetParameterActorGuidByConfigGuid(const struct FCalliopeGuid& InConfigGuid, class FString* OutActorGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "GetParameterActorGuidByConfigGuid");

	Params::CalliopeAsset_GetParameterActorGuidByConfigGuid Parms{};

	Parms.InConfigGuid = std::move(InConfigGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActorGuid != nullptr)
		*OutActorGuid = std::move(Parms.OutActorGuid);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeAsset.GetParameterBuffIDByConfigGuid
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCalliopeGuid                    InConfigGuid                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutBuffID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeAsset::GetParameterBuffIDByConfigGuid(const struct FCalliopeGuid& InConfigGuid, int32* OutBuffID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "GetParameterBuffIDByConfigGuid");

	Params::CalliopeAsset_GetParameterBuffIDByConfigGuid Parms{};

	Parms.InConfigGuid = std::move(InConfigGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBuffID != nullptr)
		*OutBuffID = Parms.OutBuffID;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeAsset.GetParameterConfigGuidByActorGuid
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EGsManagedParamType                     ParamType                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ParamValueString                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ParamValueInt                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParamValueName                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCalliopeGuid                    OutGuid                                                (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeAsset::GetParameterConfigGuidByActorGuid(const EGsManagedParamType& ParamType, const class FString& ParamValueString, const int32 ParamValueInt, const class FName& ParamValueName, struct FCalliopeGuid* OutGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "GetParameterConfigGuidByActorGuid");

	Params::CalliopeAsset_GetParameterConfigGuidByActorGuid Parms{};

	Parms.ParamType = ParamType;
	Parms.ParamValueString = std::move(ParamValueString);
	Parms.ParamValueInt = ParamValueInt;
	Parms.ParamValueName = ParamValueName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutGuid != nullptr)
		*OutGuid = std::move(Parms.OutGuid);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeAsset.GetParameterDisplayNameByConfigGuid
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCalliopeGuid                    InConfigGuid                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InPropertyName                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutDisplayName                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeAsset::GetParameterDisplayNameByConfigGuid(const struct FCalliopeGuid& InConfigGuid, const class FString& InPropertyName, class FString* OutDisplayName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "GetParameterDisplayNameByConfigGuid");

	Params::CalliopeAsset_GetParameterDisplayNameByConfigGuid Parms{};

	Parms.InConfigGuid = std::move(InConfigGuid);
	Parms.InPropertyName = std::move(InPropertyName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDisplayName != nullptr)
		*OutDisplayName = std::move(Parms.OutDisplayName);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeAsset.GetParameterSequenceIDByConfigGuid
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCalliopeGuid                    InConfigGuid                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutSequenceID                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeAsset::GetParameterSequenceIDByConfigGuid(const struct FCalliopeGuid& InConfigGuid, int32* OutSequenceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "GetParameterSequenceIDByConfigGuid");

	Params::CalliopeAsset_GetParameterSequenceIDByConfigGuid Parms{};

	Parms.InConfigGuid = std::move(InConfigGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSequenceID != nullptr)
		*OutSequenceID = Parms.OutSequenceID;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeAsset.GetParameterTaskStateIDByConfigGuid
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCalliopeGuid                    InConfigGuid                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutTaskStageID                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeAsset::GetParameterTaskStateIDByConfigGuid(const struct FCalliopeGuid& InConfigGuid, int32* OutTaskStageID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "GetParameterTaskStateIDByConfigGuid");

	Params::CalliopeAsset_GetParameterTaskStateIDByConfigGuid Parms{};

	Parms.InConfigGuid = std::move(InConfigGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTaskStageID != nullptr)
		*OutTaskStageID = Parms.OutTaskStageID;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeAsset.HarvestNodeConnections
// (Final, Native, Public, BlueprintCallable)

void UCalliopeAsset::HarvestNodeConnections()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "HarvestNodeConnections");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeAsset.OnNodeActivate
// (Event, Public, BlueprintEvent)
// Parameters:
// class UCalliopeNode*                    Node                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeAsset::OnNodeActivate(const class UCalliopeNode* Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "OnNodeActivate");

	Params::CalliopeAsset_OnNodeActivate Parms{};

	Parms.Node = Node;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Calliope.CalliopeAsset.OnNodeDeactivate
// (Event, Public, BlueprintEvent)
// Parameters:
// class UCalliopeNode*                    Node                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeAsset::OnNodeDeactivate(const class UCalliopeNode* Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "OnNodeDeactivate");

	Params::CalliopeAsset_OnNodeDeactivate Parms{};

	Parms.Node = Node;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Calliope.CalliopeAsset.OnPropertyChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           MemberName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PropertyName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeAsset::OnPropertyChanged(const class FString& MemberName, const class FString& PropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "OnPropertyChanged");

	Params::CalliopeAsset_OnPropertyChanged Parms{};

	Parms.MemberName = std::move(MemberName);
	Parms.PropertyName = std::move(PropertyName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Calliope.CalliopeAsset.OnRefreshAssetInCS
// (Event, Public, BlueprintEvent)

void UCalliopeAsset::OnRefreshAssetInCS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "OnRefreshAssetInCS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Calliope.CalliopeAsset.PostDuplicateInCS
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bDuplicateForPIE                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeAsset::PostDuplicateInCS(bool bDuplicateForPIE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "PostDuplicateInCS");

	Params::CalliopeAsset_PostDuplicateInCS Parms{};

	Parms.bDuplicateForPIE = bDuplicateForPIE;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Calliope.CalliopeAsset.PostRefreshAssetInCS
// (Event, Public, BlueprintEvent)

void UCalliopeAsset::PostRefreshAssetInCS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "PostRefreshAssetInCS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Calliope.CalliopeAsset.RecordInput
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCalliopeGuid                    InGuid                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPinName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeAsset::RecordInput(const struct FCalliopeGuid& InGuid, const class FName& InPinName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "RecordInput");

	Params::CalliopeAsset_RecordInput Parms{};

	Parms.InGuid = std::move(InGuid);
	Parms.InPinName = InPinName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeAsset.RecordOnlyNode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCalliopeGuid                    InGuid                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeAsset::RecordOnlyNode(const struct FCalliopeGuid& InGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "RecordOnlyNode");

	Params::CalliopeAsset_RecordOnlyNode Parms{};

	Parms.InGuid = std::move(InGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeAsset.RecordOutput
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCalliopeGuid                    InGuid                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPinName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeAsset::RecordOutput(const struct FCalliopeGuid& InGuid, const class FName& InPinName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "RecordOutput");

	Params::CalliopeAsset_RecordOutput Parms{};

	Parms.InGuid = std::move(InGuid);
	Parms.InPinName = InPinName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeAsset.RegisterNode
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FCalliopeGuid                    NewGuid                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCalliopeNode*                    NewNode                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeAsset::RegisterNode(const struct FCalliopeGuid& NewGuid, class UCalliopeNode* NewNode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "RegisterNode");

	Params::CalliopeAsset_RegisterNode Parms{};

	Parms.NewGuid = std::move(NewGuid);
	Parms.NewNode = NewNode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Calliope.CalliopeAsset.RemoveBranchGraph
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             GraphName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeAsset::RemoveBranchGraph(const class FName& GraphName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "RemoveBranchGraph");

	Params::CalliopeAsset_RemoveBranchGraph Parms{};

	Parms.GraphName = GraphName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeAsset.SetSubGraphAssetInPIE
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCalliopeGuid                    InGuid                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCalliopeAsset*                   CalliopeAsset                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeAsset::SetSubGraphAssetInPIE(const struct FCalliopeGuid& InGuid, class UCalliopeAsset* CalliopeAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "SetSubGraphAssetInPIE");

	Params::CalliopeAsset_SetSubGraphAssetInPIE Parms{};

	Parms.InGuid = std::move(InGuid);
	Parms.CalliopeAsset = CalliopeAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeAsset.StartAsSubInstance
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UCalliopeAsset*                   ParentInstance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCalliopeGuid                    InSubNodeGuid                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeAsset::StartAsSubInstance(class UCalliopeAsset* ParentInstance, const struct FCalliopeGuid& InSubNodeGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "StartAsSubInstance");

	Params::CalliopeAsset_StartAsSubInstance Parms{};

	Parms.ParentInstance = ParentInstance;
	Parms.InSubNodeGuid = std::move(InSubNodeGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeAsset.StartInstance
// (Final, Native, Public, BlueprintCallable)

void UCalliopeAsset::StartInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "StartInstance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeAsset.UnregisterNode
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FCalliopeGuid                    NodeGuid                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeAsset::UnregisterNode(const struct FCalliopeGuid& NodeGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "UnregisterNode");

	Params::CalliopeAsset_UnregisterNode Parms{};

	Parms.NodeGuid = std::move(NodeGuid);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Calliope.CalliopeAsset.UpdateParameterActorReferenceAndAliasName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           ObjectPath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ActorGuid                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AliasName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeAsset::UpdateParameterActorReferenceAndAliasName(const class FString& ObjectPath, const class FString& ActorGuid, const class FName& AliasName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "UpdateParameterActorReferenceAndAliasName");

	Params::CalliopeAsset_UpdateParameterActorReferenceAndAliasName Parms{};

	Parms.ObjectPath = std::move(ObjectPath);
	Parms.ActorGuid = std::move(ActorGuid);
	Parms.AliasName = AliasName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeAsset.BroadcastRegenerateToolbars
// (Final, Native, Protected, BlueprintCallable, Const)

void UCalliopeAsset::BroadcastRegenerateToolbars() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "BroadcastRegenerateToolbars");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeAsset.GetCustomInputs
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UCalliopeAsset::GetCustomInputs() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "GetCustomInputs");

	Params::CalliopeAsset_GetCustomInputs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeAsset.GetCustomOutputs
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UCalliopeAsset::GetCustomOutputs() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "GetCustomOutputs");

	Params::CalliopeAsset_GetCustomOutputs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeAsset.GetExtraDefaultInputNodes
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class UClass*>                   OutClasses                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCalliopeAsset::GetExtraDefaultInputNodes(TArray<class UClass*>* OutClasses) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "GetExtraDefaultInputNodes");

	Params::CalliopeAsset_GetExtraDefaultInputNodes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutClasses != nullptr)
		*OutClasses = std::move(Parms.OutClasses);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeAsset.GetExtraDefaultInputNodesInBranchGraph
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class UClass*>                   OutClasses                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCalliopeAsset::GetExtraDefaultInputNodesInBranchGraph(TArray<class UClass*>* OutClasses) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "GetExtraDefaultInputNodesInBranchGraph");

	Params::CalliopeAsset_GetExtraDefaultInputNodesInBranchGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutClasses != nullptr)
		*OutClasses = std::move(Parms.OutClasses);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeAsset.GetExtraDefaultOutputNodes
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class UClass*>                   OutClasses                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCalliopeAsset::GetExtraDefaultOutputNodes(TArray<class UClass*>* OutClasses) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "GetExtraDefaultOutputNodes");

	Params::CalliopeAsset_GetExtraDefaultOutputNodes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutClasses != nullptr)
		*OutClasses = std::move(Parms.OutClasses);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeAsset.GetExtraDefaultOutputNodesInBranchGraph
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class UClass*>                   OutClasses                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCalliopeAsset::GetExtraDefaultOutputNodesInBranchGraph(TArray<class UClass*>* OutClasses) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "GetExtraDefaultOutputNodesInBranchGraph");

	Params::CalliopeAsset_GetExtraDefaultOutputNodesInBranchGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutClasses != nullptr)
		*OutClasses = std::move(Parms.OutClasses);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeAsset.GetNode
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// struct FCalliopeGuid                    InGuid                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCalliopeNode*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCalliopeNode* UCalliopeAsset::GetNode(const struct FCalliopeGuid& InGuid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "GetNode");

	Params::CalliopeAsset_GetNode Parms{};

	Parms.InGuid = std::move(InGuid);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeAsset.GetNodes
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// TMap<struct FCalliopeGuid, class UCalliopeNode*>ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<struct FCalliopeGuid, class UCalliopeNode*> UCalliopeAsset::GetNodes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "GetNodes");

	Params::CalliopeAsset_GetNodes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeAsset.GetRerouteNodeClass
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UCalliopeAsset::GetRerouteNodeClass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "GetRerouteNodeClass");

	Params::CalliopeAsset_GetRerouteNodeClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeAsset.GetRerouteNodeClassInBranchGraph
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UCalliopeAsset::GetRerouteNodeClassInBranchGraph() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "GetRerouteNodeClassInBranchGraph");

	Params::CalliopeAsset_GetRerouteNodeClassInBranchGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeAsset.GetStartNodeClass
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UCalliopeAsset::GetStartNodeClass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "GetStartNodeClass");

	Params::CalliopeAsset_GetStartNodeClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeAsset.GetStartNodeClassInBranchGraph
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UCalliopeAsset::GetStartNodeClassInBranchGraph() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "GetStartNodeClassInBranchGraph");

	Params::CalliopeAsset_GetStartNodeClassInBranchGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeAsset.GetViewType
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// ECalliopeViewType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECalliopeViewType UCalliopeAsset::GetViewType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "GetViewType");

	Params::CalliopeAsset_GetViewType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeAsset.IsEditorOnlyCS
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeAsset::IsEditorOnlyCS() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "IsEditorOnlyCS");

	Params::CalliopeAsset_IsEditorOnlyCS Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeAsset.PostStartInstance
// (Event, Public, BlueprintEvent, Const)

void UCalliopeAsset::PostStartInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "PostStartInstance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Calliope.CalliopeAsset.PreFinishInstance
// (Event, Public, BlueprintEvent, Const)

void UCalliopeAsset::PreFinishInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeAsset", "PreFinishInstance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Calliope.CalliopeParameterMappingDataAsset.RefreshGroupsParameterValue
// (Final, Native, Public, BlueprintCallable)

void UCalliopeParameterMappingDataAsset::RefreshGroupsParameterValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeParameterMappingDataAsset", "RefreshGroupsParameterValue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeParameterMappingDataAsset.RefreshParameters
// (Final, Native, Public)

void UCalliopeParameterMappingDataAsset::RefreshParameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeParameterMappingDataAsset", "RefreshParameters");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeLevelSequenceActor.BindActorByName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             BindingName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           BindingActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACalliopeLevelSequenceActor::BindActorByName(const class FName& BindingName, class AActor* BindingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeLevelSequenceActor", "BindActorByName");

	Params::CalliopeLevelSequenceActor_BindActorByName Parms{};

	Parms.BindingName = BindingName;
	Parms.BindingActor = BindingActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeLevelSequenceActor.BindActorsByTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<class FName, class AActor*>        TagActors                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ACalliopeLevelSequenceActor::BindActorsByTag(const TMap<class FName, class AActor*>& TagActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeLevelSequenceActor", "BindActorsByTag");

	Params::CalliopeLevelSequenceActor_BindActorsByTag Parms{};

	Parms.TagActors = std::move(TagActors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeLevelSequenceActor.LocateBoundActors
// (Final, Native, Public, BlueprintCallable)

void ACalliopeLevelSequenceActor::LocateBoundActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeLevelSequenceActor", "LocateBoundActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeLevelSequenceActor.MeshPrestreamTextures
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMeshComponent*                   Mesh                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DurationTimeSeconds                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACalliopeLevelSequenceActor::MeshPrestreamTextures(class UMeshComponent* Mesh, float DurationTimeSeconds, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeLevelSequenceActor", "MeshPrestreamTextures");

	Params::CalliopeLevelSequenceActor_MeshPrestreamTextures Parms{};

	Parms.Mesh = Mesh;
	Parms.DurationTimeSeconds = DurationTimeSeconds;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeLevelSequenceActor.MeshSetClothLocalSpaceSimulation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMeshComponent*                   Mesh                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACalliopeLevelSequenceActor::MeshSetClothLocalSpaceSimulation(class UMeshComponent* Mesh, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeLevelSequenceActor", "MeshSetClothLocalSpaceSimulation");

	Params::CalliopeLevelSequenceActor_MeshSetClothLocalSpaceSimulation Parms{};

	Parms.Mesh = Mesh;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeLevelSequenceActor.ReSetSequence
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   InSequence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACalliopeLevelSequenceActor::ReSetSequence(class ULevelSequence* InSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeLevelSequenceActor", "ReSetSequence");

	Params::CalliopeLevelSequenceActor_ReSetSequence Parms{};

	Parms.InSequence = InSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeLevelSequenceActor.SetAllMeshPropertyInSequence
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACalliopeLevelSequenceActor::SetAllMeshPropertyInSequence(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeLevelSequenceActor", "SetAllMeshPropertyInSequence");

	Params::CalliopeLevelSequenceActor_SetAllMeshPropertyInSequence Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeLevelSequenceActor.SetAllPerformerTickEnabled
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSet<class AActor*>                     OutPerformers                                          (Parm, OutParm, NativeAccessSpecifierPublic)

void ACalliopeLevelSequenceActor::SetAllPerformerTickEnabled(bool bEnable, TSet<class AActor*>* OutPerformers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeLevelSequenceActor", "SetAllPerformerTickEnabled");

	Params::CalliopeLevelSequenceActor_SetAllPerformerTickEnabled Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPerformers != nullptr)
		*OutPerformers = std::move(Parms.OutPerformers);
}


// Function Calliope.CalliopeLevelSequenceActor.SetPaused
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInPaused                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACalliopeLevelSequenceActor::SetPaused(bool bInPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeLevelSequenceActor", "SetPaused");

	Params::CalliopeLevelSequenceActor_SetPaused Parms{};

	Parms.bInPaused = bInPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeLevelSequenceActor.GetBindingTags
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSet<class FName>                       OutBindingTags                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ACalliopeLevelSequenceActor::GetBindingTags(TSet<class FName>* OutBindingTags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeLevelSequenceActor", "GetBindingTags");

	Params::CalliopeLevelSequenceActor_GetBindingTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBindingTags != nullptr)
		*OutBindingTags = std::move(Parms.OutBindingTags);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeFunctionLibrary.MarkDirtyAllCalliopeTrack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMovieScene*                      InSequence                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeFunctionLibrary::MarkDirtyAllCalliopeTrack(class UMovieScene* InSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CalliopeFunctionLibrary", "MarkDirtyAllCalliopeTrack");

	Params::CalliopeFunctionLibrary_MarkDirtyAllCalliopeTrack Parms{};

	Parms.InSequence = InSequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeGameplayTagLibrary.AddGamePlayTagToINI
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           NewTag                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Comment                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TagSourceName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsRestrictedTag                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowNonRestrictedChildren                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeGameplayTagLibrary::AddGamePlayTagToINI(const class FString& NewTag, const class FString& Comment, class FName TagSourceName, bool bIsRestrictedTag, bool bAllowNonRestrictedChildren)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CalliopeGameplayTagLibrary", "AddGamePlayTagToINI");

	Params::CalliopeGameplayTagLibrary_AddGamePlayTagToINI Parms{};

	Parms.NewTag = std::move(NewTag);
	Parms.Comment = std::move(Comment);
	Parms.TagSourceName = TagSourceName;
	Parms.bIsRestrictedTag = bIsRestrictedTag;
	Parms.bAllowNonRestrictedChildren = bAllowNonRestrictedChildren;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeGameplayTagLibrary.FilterTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            Container                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExactMatch                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer UCalliopeGameplayTagLibrary::FilterTag(const struct FGameplayTagContainer& Container, const struct FGameplayTag& Tag, bool bExactMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CalliopeGameplayTagLibrary", "FilterTag");

	Params::CalliopeGameplayTagLibrary_FilterTag Parms{};

	Parms.Container = std::move(Container);
	Parms.Tag = std::move(Tag);
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeGameplayTagLibrary.FilterTags
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            Container                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            OtherContainer                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bExactMatch                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer UCalliopeGameplayTagLibrary::FilterTags(const struct FGameplayTagContainer& Container, const struct FGameplayTagContainer& OtherContainer, bool bExactMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CalliopeGameplayTagLibrary", "FilterTags");

	Params::CalliopeGameplayTagLibrary_FilterTags Parms{};

	Parms.Container = std::move(Container);
	Parms.OtherContainer = std::move(OtherContainer);
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeGameplayTagLibrary.HasTagName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayTagContainer            TagContainer                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             TagName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExactMatch                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeGameplayTagLibrary::HasTagName(const struct FGameplayTagContainer& TagContainer, class FName TagName, bool bExactMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CalliopeGameplayTagLibrary", "HasTagName");

	Params::CalliopeGameplayTagLibrary_HasTagName Parms{};

	Parms.TagContainer = std::move(TagContainer);
	Parms.TagName = TagName;
	Parms.bExactMatch = bExactMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeGameplayTagLibrary.MakeGameplayTagContainer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer UCalliopeGameplayTagLibrary::MakeGameplayTagContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CalliopeGameplayTagLibrary", "MakeGameplayTagContainer");

	Params::CalliopeGameplayTagLibrary_MakeGameplayTagContainer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeGameplayTagLibrary.MakeGameplayTagFromName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             TagName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UCalliopeGameplayTagLibrary::MakeGameplayTagFromName(const class FName& TagName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CalliopeGameplayTagLibrary", "MakeGameplayTagFromName");

	Params::CalliopeGameplayTagLibrary_MakeGameplayTagFromName Parms{};

	Parms.TagName = TagName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeGameplayTagLibrary.MakeGameplayTagFromString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           TagStr                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UCalliopeGameplayTagLibrary::MakeGameplayTagFromString(const class FString& TagStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CalliopeGameplayTagLibrary", "MakeGameplayTagFromString");

	Params::CalliopeGameplayTagLibrary_MakeGameplayTagFromString Parms{};

	Parms.TagStr = std::move(TagStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeInteractor.ConvertCalliopeGuidToGuid
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FCalliopeGuid                    InCalliopeGuid                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGuid UCalliopeInteractor::ConvertCalliopeGuidToGuid(const struct FCalliopeGuid& InCalliopeGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CalliopeInteractor", "ConvertCalliopeGuidToGuid");

	Params::CalliopeInteractor_ConvertCalliopeGuidToGuid Parms{};

	Parms.InCalliopeGuid = std::move(InCalliopeGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeInteractor.GetInstanceChecked
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UCalliopeInteractor*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCalliopeInteractor* UCalliopeInteractor::GetInstanceChecked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CalliopeInteractor", "GetInstanceChecked");

	Params::CalliopeInteractor_GetInstanceChecked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeInteractor.RegisterInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UCalliopeInteractor*              Instance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeInteractor::RegisterInstance(class UCalliopeInteractor* Instance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CalliopeInteractor", "RegisterInstance");

	Params::CalliopeInteractor_RegisterInstance Parms{};

	Parms.Instance = Instance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeInteractor.UnregisterInstance
// (Final, Native, Static, Public, BlueprintCallable)

void UCalliopeInteractor::UnregisterInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CalliopeInteractor", "UnregisterInstance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeInteractor.GetAssetClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECalliopeViewType                       InViewType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UCalliopeInteractor::GetAssetClass(ECalliopeViewType InViewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeInteractor", "GetAssetClass");

	Params::CalliopeInteractor_GetAssetClass Parms{};

	Parms.InViewType = InViewType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeInteractor.SetCustomInputNodeEventName
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UCalliopeNode*                    Node                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEventName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeInteractor::SetCustomInputNodeEventName(class UCalliopeNode* Node, const class FName& InEventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeInteractor", "SetCustomInputNodeEventName");

	Params::CalliopeInteractor_SetCustomInputNodeEventName Parms{};

	Parms.Node = Node;
	Parms.InEventName = InEventName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeInteractor.SetCustomOutputNodeEventName
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UCalliopeNode*                    Node                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEventName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeInteractor::SetCustomOutputNodeEventName(class UCalliopeNode* Node, const class FName& InEventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeInteractor", "SetCustomOutputNodeEventName");

	Params::CalliopeInteractor_SetCustomOutputNodeEventName Parms{};

	Parms.Node = Node;
	Parms.InEventName = InEventName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeInteractor.GetComponentObserverNodeClasses
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class UClass*>                   OutClasses                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCalliopeInteractor::GetComponentObserverNodeClasses(TArray<class UClass*>* OutClasses) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeInteractor", "GetComponentObserverNodeClasses");

	Params::CalliopeInteractor_GetComponentObserverNodeClasses Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutClasses != nullptr)
		*OutClasses = std::move(Parms.OutClasses);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeInteractor.GetCustomInputNodeClasses
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class UClass*>                   OutClasses                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCalliopeInteractor::GetCustomInputNodeClasses(TArray<class UClass*>* OutClasses) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeInteractor", "GetCustomInputNodeClasses");

	Params::CalliopeInteractor_GetCustomInputNodeClasses Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutClasses != nullptr)
		*OutClasses = std::move(Parms.OutClasses);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeInteractor.GetCustomInputNodeEventName
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class UCalliopeNode*                    Node                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             OutEventName                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeInteractor::GetCustomInputNodeEventName(class UCalliopeNode* Node, class FName* OutEventName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeInteractor", "GetCustomInputNodeEventName");

	Params::CalliopeInteractor_GetCustomInputNodeEventName Parms{};

	Parms.Node = Node;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutEventName != nullptr)
		*OutEventName = Parms.OutEventName;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeInteractor.GetCustomOutputNodeClasses
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class UClass*>                   OutClasses                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCalliopeInteractor::GetCustomOutputNodeClasses(TArray<class UClass*>* OutClasses) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeInteractor", "GetCustomOutputNodeClasses");

	Params::CalliopeInteractor_GetCustomOutputNodeClasses Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutClasses != nullptr)
		*OutClasses = std::move(Parms.OutClasses);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeInteractor.GetCustomOutputNodeEventName
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class UCalliopeNode*                    Node                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             OutEventName                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeInteractor::GetCustomOutputNodeEventName(class UCalliopeNode* Node, class FName* OutEventName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeInteractor", "GetCustomOutputNodeEventName");

	Params::CalliopeInteractor_GetCustomOutputNodeEventName Parms{};

	Parms.Node = Node;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutEventName != nullptr)
		*OutEventName = Parms.OutEventName;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeInteractor.GetExecutionMultiGateNodeClasses
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class UClass*>                   OutClasses                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCalliopeInteractor::GetExecutionMultiGateNodeClasses(TArray<class UClass*>* OutClasses) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeInteractor", "GetExecutionMultiGateNodeClasses");

	Params::CalliopeInteractor_GetExecutionMultiGateNodeClasses Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutClasses != nullptr)
		*OutClasses = std::move(Parms.OutClasses);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeInteractor.GetExecutionSequenceNodeClasses
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class UClass*>                   OutClasses                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCalliopeInteractor::GetExecutionSequenceNodeClasses(TArray<class UClass*>* OutClasses) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeInteractor", "GetExecutionSequenceNodeClasses");

	Params::CalliopeInteractor_GetExecutionSequenceNodeClasses Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutClasses != nullptr)
		*OutClasses = std::move(Parms.OutClasses);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeInteractor.GetFinishNodeClasses
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class UClass*>                   OutClasses                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCalliopeInteractor::GetFinishNodeClasses(TArray<class UClass*>* OutClasses) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeInteractor", "GetFinishNodeClasses");

	Params::CalliopeInteractor_GetFinishNodeClasses Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutClasses != nullptr)
		*OutClasses = std::move(Parms.OutClasses);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeInteractor.GetRerouteNodeClasses
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class UClass*>                   OutClasses                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCalliopeInteractor::GetRerouteNodeClasses(TArray<class UClass*>* OutClasses) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeInteractor", "GetRerouteNodeClasses");

	Params::CalliopeInteractor_GetRerouteNodeClasses Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutClasses != nullptr)
		*OutClasses = std::move(Parms.OutClasses);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeInteractor.GetStartNodeClasses
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class UClass*>                   OutClasses                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCalliopeInteractor::GetStartNodeClasses(TArray<class UClass*>* OutClasses) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeInteractor", "GetStartNodeClasses");

	Params::CalliopeInteractor_GetStartNodeClasses Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutClasses != nullptr)
		*OutClasses = std::move(Parms.OutClasses);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeInteractor.GetSubGraphNodeClasses
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class UClass*>                   OutClasses                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCalliopeInteractor::GetSubGraphNodeClasses(TArray<class UClass*>* OutClasses) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeInteractor", "GetSubGraphNodeClasses");

	Params::CalliopeInteractor_GetSubGraphNodeClasses Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutClasses != nullptr)
		*OutClasses = std::move(Parms.OutClasses);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeLevelSequencePlayer.CreateCalliopeLevelSequencePlayer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequence*                   LevelSequence                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMovieSceneSequencePlaybackSettingsSettings                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FLevelSequenceCameraSettings     CameraSettings                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class ACalliopeLevelSequenceActor*      OutActor                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCalliopeLevelSequencePlayer*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCalliopeLevelSequencePlayer* UCalliopeLevelSequencePlayer::CreateCalliopeLevelSequencePlayer(class UObject* WorldContextObject, class ULevelSequence* LevelSequence, const struct FMovieSceneSequencePlaybackSettings& Settings, const struct FLevelSequenceCameraSettings& CameraSettings, class ACalliopeLevelSequenceActor** OutActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CalliopeLevelSequencePlayer", "CreateCalliopeLevelSequencePlayer");

	Params::CalliopeLevelSequencePlayer_CreateCalliopeLevelSequencePlayer Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LevelSequence = LevelSequence;
	Parms.Settings = std::move(Settings);
	Parms.CameraSettings = std::move(CameraSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActor != nullptr)
		*OutActor = Parms.OutActor;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeLevelSequencePlayer.FixSectionData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMovieScene*                      InMovieScene                                           (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeLevelSequencePlayer::FixSectionData(const class UMovieScene* InMovieScene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CalliopeLevelSequencePlayer", "FixSectionData");

	Params::CalliopeLevelSequencePlayer_FixSectionData Parms{};

	Parms.InMovieScene = InMovieScene;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeLevelSequencePlayer.SetEventReceiver
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InEventReceiver                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeLevelSequencePlayer::SetEventReceiver(class UObject* InEventReceiver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeLevelSequencePlayer", "SetEventReceiver");

	Params::CalliopeLevelSequencePlayer_SetEventReceiver Parms{};

	Parms.InEventReceiver = InEventReceiver;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeLevelSequencePlayer.StopLooping
// (Final, Native, Public, BlueprintCallable)

void UCalliopeLevelSequencePlayer::StopLooping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeLevelSequencePlayer", "StopLooping");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeLevelSequencePlayer.GetPlaybackContext
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UCalliopeLevelSequencePlayer::GetPlaybackContext() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeLevelSequencePlayer", "GetPlaybackContext");

	Params::CalliopeLevelSequencePlayer_GetPlaybackContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeLevelSequencePlayer.TryGetMarkedFrameTime
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           InFrameLabel                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFrameTime                       OutFrameTime                                           (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeLevelSequencePlayer::TryGetMarkedFrameTime(const class FString& InFrameLabel, struct FFrameTime* OutFrameTime) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeLevelSequencePlayer", "TryGetMarkedFrameTime");

	Params::CalliopeLevelSequencePlayer_TryGetMarkedFrameTime Parms{};

	Parms.InFrameLabel = std::move(InFrameLabel);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFrameTime != nullptr)
		*OutFrameTime = std::move(Parms.OutFrameTime);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeLevelSequencePlayer.TryGetMarkedSecond
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           InFrameLabel                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutTimeSecond                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeLevelSequencePlayer::TryGetMarkedSecond(const class FString& InFrameLabel, float* OutTimeSecond) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeLevelSequencePlayer", "TryGetMarkedSecond");

	Params::CalliopeLevelSequencePlayer_TryGetMarkedSecond Parms{};

	Parms.InFrameLabel = std::move(InFrameLabel);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTimeSecond != nullptr)
		*OutTimeSecond = Parms.OutTimeSecond;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeMovieSceneCameraCutSection.SetCameraBindingID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMovieSceneObjectBindingID       InCameraBindingID                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeMovieSceneCameraCutSection::SetCameraBindingID(const struct FMovieSceneObjectBindingID& InCameraBindingID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeMovieSceneCameraCutSection", "SetCameraBindingID");

	Params::CalliopeMovieSceneCameraCutSection_SetCameraBindingID Parms{};

	Parms.InCameraBindingID = std::move(InCameraBindingID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeMovieSceneCameraCutSection.GetCameraBindingID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FMovieSceneObjectBindingID ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FMovieSceneObjectBindingID UCalliopeMovieSceneCameraCutSection::GetCameraBindingID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeMovieSceneCameraCutSection", "GetCameraBindingID");

	Params::CalliopeMovieSceneCameraCutSection_GetCameraBindingID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.Activate
// (Final, Native, Public, BlueprintCallable)

void UCalliopeNode::Activate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "Activate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeNode.AddInputPins
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     PinNames                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UCalliopeNode::AddInputPins(const TArray<class FName>& PinNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "AddInputPins");

	Params::CalliopeNode_AddInputPins Parms{};

	Parms.PinNames = std::move(PinNames);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeNode.AddOutputPins
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     PinNames                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UCalliopeNode::AddOutputPins(const TArray<class FName>& PinNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "AddOutputPins");

	Params::CalliopeNode_AddOutputPins Parms{};

	Parms.PinNames = std::move(PinNames);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeNode.AssignInteractorGroupIDPolice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InGroupIDIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeNode::AssignInteractorGroupIDPolice(int32 InIndex, int32 InGroupIDIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "AssignInteractorGroupIDPolice");

	Params::CalliopeNode_AssignInteractorGroupIDPolice Parms{};

	Parms.InIndex = InIndex;
	Parms.InGroupIDIndex = InGroupIDIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeNode.BindAssetOnSubGraphReconstructionRequested
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCalliopeAsset*                   Asset                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeNode::BindAssetOnSubGraphReconstructionRequested(class UCalliopeAsset* Asset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "BindAssetOnSubGraphReconstructionRequested");

	Params::CalliopeNode_BindAssetOnSubGraphReconstructionRequested Parms{};

	Parms.Asset = Asset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeNode.CheckCanPassNodeInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FCalliopeGuid                    PreviousNodeGuid                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeNode::CheckCanPassNodeInfo(const struct FCalliopeGuid& PreviousNodeGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "CheckCanPassNodeInfo");

	Params::CalliopeNode_CheckCanPassNodeInfo Parms{};

	Parms.PreviousNodeGuid = std::move(PreviousNodeGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.Cleanup
// (Event, Public, BlueprintEvent)

void UCalliopeNode::Cleanup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "Cleanup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Calliope.CalliopeNode.Deactivate
// (Final, Native, Public, BlueprintCallable)

void UCalliopeNode::Deactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "Deactivate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeNode.ExecuteOnReconstructionRequested
// (Final, Native, Public, BlueprintCallable)

void UCalliopeNode::ExecuteOnReconstructionRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "ExecuteOnReconstructionRequested");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeNode.ForceRefreshDetailView
// (Final, Native, Public, BlueprintCallable)

void UCalliopeNode::ForceRefreshDetailView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "ForceRefreshDetailView");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeNode.GetActorToFocusInCS
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UCalliopeNode::GetActorToFocusInCS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "GetActorToFocusInCS");

	Params::CalliopeNode_GetActorToFocusInCS Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.GetAssetPathInCS
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCalliopeNode::GetAssetPathInCS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "GetAssetPathInCS");

	Params::CalliopeNode_GetAssetPathInCS Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.GetAssetToEditInCS
// (Event, Public, BlueprintEvent)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UCalliopeNode::GetAssetToEditInCS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "GetAssetToEditInCS");

	Params::CalliopeNode_GetAssetToEditInCS Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.GetBranchGraphToEditInCS
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FString                           OutBranchGraphIdentifier                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeNode::GetBranchGraphToEditInCS(class FString* OutBranchGraphIdentifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "GetBranchGraphToEditInCS");

	Params::CalliopeNode_GetBranchGraphToEditInCS Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutBranchGraphIdentifier != nullptr)
		*OutBranchGraphIdentifier = std::move(Parms.OutBranchGraphIdentifier);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.GetConnections
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TMap<class FName, struct FCalliopeConnectedPin>ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<class FName, struct FCalliopeConnectedPin> UCalliopeNode::GetConnections()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "GetConnections");

	Params::CalliopeNode_GetConnections Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.GetContextInputsInCS
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UCalliopeNode::GetContextInputsInCS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "GetContextInputsInCS");

	Params::CalliopeNode_GetContextInputsInCS Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.GetContextOutputsInCS
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UCalliopeNode::GetContextOutputsInCS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "GetContextOutputsInCS");

	Params::CalliopeNode_GetContextOutputsInCS Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.GetDefaultInputPin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FCalliopePin                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FCalliopePin UCalliopeNode::GetDefaultInputPin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "GetDefaultInputPin");

	Params::CalliopeNode_GetDefaultInputPin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.GetDefaultOutputPin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FCalliopePin                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FCalliopePin UCalliopeNode::GetDefaultOutputPin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "GetDefaultOutputPin");

	Params::CalliopeNode_GetDefaultOutputPin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.IsBattleStateNode
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeNode::IsBattleStateNode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "IsBattleStateNode");

	Params::CalliopeNode_IsBattleStateNode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.IsCalliopeActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeNode::IsCalliopeActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "IsCalliopeActive");

	Params::CalliopeNode_IsCalliopeActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.IsCalliopeNeverActivated
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeNode::IsCalliopeNeverActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "IsCalliopeNeverActivated");

	Params::CalliopeNode_IsCalliopeNeverActivated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.IsCalliopeWasActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeNode::IsCalliopeWasActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "IsCalliopeWasActive");

	Params::CalliopeNode_IsCalliopeWasActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.JumpToMe
// (Final, Native, Public, BlueprintCallable)

void UCalliopeNode::JumpToMe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "JumpToMe");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeNode.LoadAssetInCS
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UCalliopeAsset>    AssetPtr                                               (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCalliopeAsset*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCalliopeAsset* UCalliopeNode::LoadAssetInCS(TSoftObjectPtr<class UCalliopeAsset> AssetPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "LoadAssetInCS");

	Params::CalliopeNode_LoadAssetInCS Parms{};

	Parms.AssetPtr = AssetPtr;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.LogError
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeNode::LogError(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "LogError");

	Params::CalliopeNode_LogError Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeNode.PostLoadInCS
// (Event, Public, BlueprintEvent)

void UCalliopeNode::PostLoadInCS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "PostLoadInCS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Calliope.CalliopeNode.PostPropertyChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           MemberName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PropertyName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeNode::PostPropertyChanged(const class FString& MemberName, const class FString& PropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "PostPropertyChanged");

	Params::CalliopeNode_PostPropertyChanged Parms{};

	Parms.MemberName = std::move(MemberName);
	Parms.PropertyName = std::move(PropertyName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Calliope.CalliopeNode.PrePropertyChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           PropertyName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeNode::PrePropertyChanged(const class FString& PropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "PrePropertyChanged");

	Params::CalliopeNode_PrePropertyChanged Parms{};

	Parms.PropertyName = std::move(PropertyName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Calliope.CalliopeNode.RecordInput
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             PinName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeNode::RecordInput(const class FName& PinName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "RecordInput");

	Params::CalliopeNode_RecordInput Parms{};

	Parms.PinName = PinName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeNode.RecordOutput
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             PinName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeNode::RecordOutput(const class FName& PinName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "RecordOutput");

	Params::CalliopeNode_RecordOutput Parms{};

	Parms.PinName = PinName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeNode.RefreshParentNode
// (Final, Native, Public, BlueprintCallable)

void UCalliopeNode::RefreshParentNode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "RefreshParentNode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeNode.RefreshSceneObjPoliceConfig
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCalliopeNode*                    PreviousNode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeNode::RefreshSceneObjPoliceConfig(class UCalliopeNode* PreviousNode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "RefreshSceneObjPoliceConfig");

	Params::CalliopeNode_RefreshSceneObjPoliceConfig Parms{};

	Parms.PreviousNode = PreviousNode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeNode.ResetRecordsInCS
// (Final, Native, Public, BlueprintCallable)

void UCalliopeNode::ResetRecordsInCS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "ResetRecordsInCS");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeNode.SetConnections
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<class FName, struct FCalliopeConnectedPin>InConnections                                          (Parm, OutParm, NativeAccessSpecifierPublic)

void UCalliopeNode::SetConnections(TMap<class FName, struct FCalliopeConnectedPin>* InConnections)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "SetConnections");

	Params::CalliopeNode_SetConnections Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InConnections != nullptr)
		*InConnections = std::move(Parms.InConnections);
}


// Function Calliope.CalliopeNode.SetInputPins
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FCalliopePin>             InInputPins                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UCalliopeNode::SetInputPins(const TArray<struct FCalliopePin>& InInputPins)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "SetInputPins");

	Params::CalliopeNode_SetInputPins Parms{};

	Parms.InInputPins = std::move(InInputPins);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeNode.SetOutputPins
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FCalliopePin>             InOutputPins                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UCalliopeNode::SetOutputPins(const TArray<struct FCalliopePin>& InOutputPins)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "SetOutputPins");

	Params::CalliopeNode_SetOutputPins Parms{};

	Parms.InOutputPins = std::move(InOutputPins);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeNode.SyncSceneObjPoliceConfig
// (Final, Native, Public, BlueprintCallable)

void UCalliopeNode::SyncSceneObjPoliceConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "SyncSceneObjPoliceConfig");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeNode.UnBindAssetOnSubGraphReconstructionRequested
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCalliopeAsset*                   Asset                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeNode::UnBindAssetOnSubGraphReconstructionRequested(class UCalliopeAsset* Asset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "UnBindAssetOnSubGraphReconstructionRequested");

	Params::CalliopeNode_UnBindAssetOnSubGraphReconstructionRequested Parms{};

	Parms.Asset = Asset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.CalliopeNode.CanUserAddInputInCS
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeNode::CanUserAddInputInCS() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "CanUserAddInputInCS");

	Params::CalliopeNode_CanUserAddInputInCS Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.CanUserAddOutputInCS
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeNode::CanUserAddOutputInCS() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "CanUserAddOutputInCS");

	Params::CalliopeNode_CanUserAddOutputInCS Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.GetCalliopeAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCalliopeAsset*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCalliopeAsset* UCalliopeNode::GetCalliopeAsset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "GetCalliopeAsset");

	Params::CalliopeNode_GetCalliopeAsset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.GetConnection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             OutputName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCalliopeConnectedPin            ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FCalliopeConnectedPin UCalliopeNode::GetConnection(const class FName OutputName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "GetConnection");

	Params::CalliopeNode_GetConnection Parms{};

	Parms.OutputName = OutputName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.GetGraphGuidInCS
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FCalliopeGuid                    OutGraphGuid                                           (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeNode::GetGraphGuidInCS(struct FCalliopeGuid* OutGraphGuid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "GetGraphGuidInCS");

	Params::CalliopeNode_GetGraphGuidInCS Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutGraphGuid != nullptr)
		*OutGraphGuid = std::move(Parms.OutGraphGuid);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.GetGraphIdentifierInCS
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             OutGraphIdentifier                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeNode::GetGraphIdentifierInCS(class FName* OutGraphIdentifier) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "GetGraphIdentifierInCS");

	Params::CalliopeNode_GetGraphIdentifierInCS Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutGraphIdentifier != nullptr)
		*OutGraphIdentifier = Parms.OutGraphIdentifier;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.GetGraphNodeInCS
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UEdGraphNode*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UEdGraphNode* UCalliopeNode::GetGraphNodeInCS() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "GetGraphNodeInCS");

	Params::CalliopeNode_GetGraphNodeInCS Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.GetGuid
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// struct FCalliopeGuid                    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FCalliopeGuid UCalliopeNode::GetGuid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "GetGuid");

	Params::CalliopeNode_GetGuid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.GetInputNames
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UCalliopeNode::GetInputNames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "GetInputNames");

	Params::CalliopeNode_GetInputNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.GetInputPins
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FCalliopePin>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FCalliopePin> UCalliopeNode::GetInputPins() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "GetInputPins");

	Params::CalliopeNode_GetInputPins Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.GetNodeDescriptionInCS
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCalliopeNode::GetNodeDescriptionInCS() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "GetNodeDescriptionInCS");

	Params::CalliopeNode_GetNodeDescriptionInCS Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.GetOutputNames
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UCalliopeNode::GetOutputNames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "GetOutputNames");

	Params::CalliopeNode_GetOutputNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.GetOutputPins
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FCalliopePin>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FCalliopePin> UCalliopeNode::GetOutputPins() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "GetOutputPins");

	Params::CalliopeNode_GetOutputPins Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.GetParentNodes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FCalliopeGuid>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FCalliopeGuid> UCalliopeNode::GetParentNodes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "GetParentNodes");

	Params::CalliopeNode_GetParentNodes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.GetStatusStringInCS
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCalliopeNode::GetStatusStringInCS() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "GetStatusStringInCS");

	Params::CalliopeNode_GetStatusStringInCS Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.IsBranchGraphNode
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeNode::IsBranchGraphNode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "IsBranchGraphNode");

	Params::CalliopeNode_IsBranchGraphNode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.IsOutputConnectTo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FCalliopeGuid                    TargetNodeGuid                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeNode::IsOutputConnectTo(const struct FCalliopeGuid& TargetNodeGuid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "IsOutputConnectTo");

	Params::CalliopeNode_IsOutputConnectTo Parms{};

	Parms.TargetNodeGuid = std::move(TargetNodeGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.IsPlayInEditor
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeNode::IsPlayInEditor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "IsPlayInEditor");

	Params::CalliopeNode_IsPlayInEditor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.IsPreloaded
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeNode::IsPreloaded() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "IsPreloaded");

	Params::CalliopeNode_IsPreloaded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.IsSubGraphNode
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeNode::IsSubGraphNode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "IsSubGraphNode");

	Params::CalliopeNode_IsSubGraphNode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.IsSupportViewType
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// ECalliopeViewType                       InViewType                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCalliopeNode::IsSupportViewType(const ECalliopeViewType& InViewType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "IsSupportViewType");

	Params::CalliopeNode_IsSupportViewType Parms{};

	Parms.InViewType = InViewType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Calliope.CalliopeNode.OnRefreshAssetInCS
// (Event, Public, BlueprintEvent, Const)

void UCalliopeNode::OnRefreshAssetInCS() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "OnRefreshAssetInCS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Calliope.CalliopeNode.OnSelectNodeInCS
// (Event, Public, BlueprintEvent, Const)

void UCalliopeNode::OnSelectNodeInCS() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "OnSelectNodeInCS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Calliope.CalliopeNode.SetSubGraphAssetInPIE
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UCalliopeAsset*                   InSubGraphAsset                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCalliopeNode::SetSubGraphAssetInPIE(class UCalliopeAsset* InSubGraphAsset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CalliopeNode", "SetSubGraphAssetInPIE");

	Params::CalliopeNode_SetSubGraphAssetInPIE Parms{};

	Parms.InSubGraphAsset = InSubGraphAsset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Calliope.MovieSceneCalliopeSectionData.GetCalliopePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCalliopeLevelSequencePlayer*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCalliopeLevelSequencePlayer* UMovieSceneCalliopeSectionData::GetCalliopePlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeSectionData", "GetCalliopePlayer");

	Params::MovieSceneCalliopeSectionData_GetCalliopePlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.MovieSceneCalliopeSectionData.GetPlaybackContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UMovieSceneCalliopeSectionData::GetPlaybackContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeSectionData", "GetPlaybackContext");

	Params::MovieSceneCalliopeSectionData_GetPlaybackContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.MovieSceneCalliopeSectionData.GetObjectBindingID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FCalliopeGuid                    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FCalliopeGuid UMovieSceneCalliopeSectionData::GetObjectBindingID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeSectionData", "GetObjectBindingID");

	Params::MovieSceneCalliopeSectionData_GetObjectBindingID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.MovieSceneCalliopeSectionData.GetSequenceID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMovieSceneCalliopeSectionData::GetSequenceID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeSectionData", "GetSequenceID");

	Params::MovieSceneCalliopeSectionData_GetSequenceID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.MovieSceneCalliopeSectionData.GetStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EMovieScenePlayerStatus                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMovieScenePlayerStatus UMovieSceneCalliopeSectionData::GetStatus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeSectionData", "GetStatus");

	Params::MovieSceneCalliopeSectionData_GetStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.MovieSceneCalliopeSectionData.GetTimeInSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMovieSceneCalliopeSectionData::GetTimeInSeconds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeSectionData", "GetTimeInSeconds");

	Params::MovieSceneCalliopeSectionData_GetTimeInSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.MovieSceneCalliopeSectionData.HasJumped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMovieSceneCalliopeSectionData::HasJumped() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeSectionData", "HasJumped");

	Params::MovieSceneCalliopeSectionData_HasJumped Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.MovieSceneCalliopeSectionData.IsForwardPlay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMovieSceneCalliopeSectionData::IsForwardPlay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeSectionData", "IsForwardPlay");

	Params::MovieSceneCalliopeSectionData_IsForwardPlay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.MovieSceneCalliopeSectionData.IsOperandValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMovieSceneCalliopeSectionData::IsOperandValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeSectionData", "IsOperandValid");

	Params::MovieSceneCalliopeSectionData_IsOperandValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.MovieSceneCalliopeSectionData.IsSilent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMovieSceneCalliopeSectionData::IsSilent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeSectionData", "IsSilent");

	Params::MovieSceneCalliopeSectionData_IsSilent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.MovieSceneCalliopeSectionBase.GetDisplayName
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMovieSceneCalliopeSectionBase::GetDisplayName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeSectionBase", "GetDisplayName");

	Params::MovieSceneCalliopeSectionBase_GetDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.MovieSceneCalliopeNormalSection.Evaluate
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UMovieSceneCalliopeSectionData*   InSectionData                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMovieSceneCalliopeNormalSection::Evaluate(class UMovieSceneCalliopeSectionData* InSectionData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeNormalSection", "Evaluate");

	Params::MovieSceneCalliopeNormalSection_Evaluate Parms{};

	Parms.InSectionData = InSectionData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.MovieSceneCalliopeNormalSection.GetDurationTime
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMovieSceneCalliopeNormalSection::GetDurationTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeNormalSection", "GetDurationTime");

	Params::MovieSceneCalliopeNormalSection_GetDurationTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.MovieSceneCalliopeNormalSection.GetEndTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMovieSceneCalliopeNormalSection::GetEndTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeNormalSection", "GetEndTime");

	Params::MovieSceneCalliopeNormalSection_GetEndTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.MovieSceneCalliopeNormalSection.GetMovieMaxDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMovieSceneCalliopeNormalSection::GetMovieMaxDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeNormalSection", "GetMovieMaxDuration");

	Params::MovieSceneCalliopeNormalSection_GetMovieMaxDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.MovieSceneCalliopeNormalSection.GetStartTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMovieSceneCalliopeNormalSection::GetStartTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeNormalSection", "GetStartTime");

	Params::MovieSceneCalliopeNormalSection_GetStartTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.MovieSceneCalliopeNormalSection.MakeSectionData
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UMovieSceneCalliopeSectionData*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMovieSceneCalliopeSectionData* UMovieSceneCalliopeNormalSection::MakeSectionData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeNormalSection", "MakeSectionData");

	Params::MovieSceneCalliopeNormalSection_MakeSectionData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.MovieSceneCalliopeNormalSection.SectionBeingDestroyed
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UMovieSceneCalliopeSectionData*   InSectionData                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMovieSceneCalliopeNormalSection::SectionBeingDestroyed(class UMovieSceneCalliopeSectionData* InSectionData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeNormalSection", "SectionBeingDestroyed");

	Params::MovieSceneCalliopeNormalSection_SectionBeingDestroyed Parms{};

	Parms.InSectionData = InSectionData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.MovieSceneCalliopeNotifySection.GetDurationTime
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMovieSceneCalliopeNotifySection::GetDurationTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeNotifySection", "GetDurationTime");

	Params::MovieSceneCalliopeNotifySection_GetDurationTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.MovieSceneCalliopeNotifySection.OnNotify
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UCalliopeLevelSequencePlayer*     Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InStatus                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInBackwards                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMovieSceneCalliopeNotifySection::OnNotify(class UCalliopeLevelSequencePlayer* Player, int32 InStatus, bool bInBackwards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeNotifySection", "OnNotify");

	Params::MovieSceneCalliopeNotifySection_OnNotify Parms{};

	Parms.Player = Player;
	Parms.InStatus = InStatus;
	Parms.bInBackwards = bInBackwards;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.MovieSceneCalliopeNotifySection.OnPreviewNotify
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UObject*                          InPlaybackContext                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InStatus                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInBackwards                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMovieSceneCalliopeNotifySection::OnPreviewNotify(class UObject* InPlaybackContext, int32 InStatus, bool bInBackwards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeNotifySection", "OnPreviewNotify");

	Params::MovieSceneCalliopeNotifySection_OnPreviewNotify Parms{};

	Parms.InPlaybackContext = InPlaybackContext;
	Parms.InStatus = InStatus;
	Parms.bInBackwards = bInBackwards;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.MovieSceneCalliopeNotifyStateSection.GetDurationTime
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMovieSceneCalliopeNotifyStateSection::GetDurationTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeNotifyStateSection", "GetDurationTime");

	Params::MovieSceneCalliopeNotifyStateSection_GetDurationTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Calliope.MovieSceneCalliopeNotifyStateSection.OnNotifyBegin
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UCalliopeLevelSequencePlayer*     Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InStatus                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInBackwards                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMovieSceneCalliopeNotifyStateSection::OnNotifyBegin(class UCalliopeLevelSequencePlayer* Player, int32 InStatus, bool bInBackwards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeNotifyStateSection", "OnNotifyBegin");

	Params::MovieSceneCalliopeNotifyStateSection_OnNotifyBegin Parms{};

	Parms.Player = Player;
	Parms.InStatus = InStatus;
	Parms.bInBackwards = bInBackwards;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.MovieSceneCalliopeNotifyStateSection.OnNotifyEnd
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UCalliopeLevelSequencePlayer*     Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InStatus                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInBackwards                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMovieSceneCalliopeNotifyStateSection::OnNotifyEnd(class UCalliopeLevelSequencePlayer* Player, int32 InStatus, bool bInBackwards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeNotifyStateSection", "OnNotifyEnd");

	Params::MovieSceneCalliopeNotifyStateSection_OnNotifyEnd Parms{};

	Parms.Player = Player;
	Parms.InStatus = InStatus;
	Parms.bInBackwards = bInBackwards;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.MovieSceneCalliopeNotifyStateSection.OnNotifyTick
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UCalliopeLevelSequencePlayer*     Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InStatus                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInBackwards                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMovieSceneCalliopeNotifyStateSection::OnNotifyTick(class UCalliopeLevelSequencePlayer* Player, int32 InStatus, bool bInBackwards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeNotifyStateSection", "OnNotifyTick");

	Params::MovieSceneCalliopeNotifyStateSection_OnNotifyTick Parms{};

	Parms.Player = Player;
	Parms.InStatus = InStatus;
	Parms.bInBackwards = bInBackwards;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.MovieSceneCalliopeNotifyStateSection.OnPreviewNotifyBegin
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UObject*                          InPlaybackContext                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InStatus                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInBackwards                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMovieSceneCalliopeNotifyStateSection::OnPreviewNotifyBegin(class UObject* InPlaybackContext, int32 InStatus, bool bInBackwards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeNotifyStateSection", "OnPreviewNotifyBegin");

	Params::MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyBegin Parms{};

	Parms.InPlaybackContext = InPlaybackContext;
	Parms.InStatus = InStatus;
	Parms.bInBackwards = bInBackwards;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.MovieSceneCalliopeNotifyStateSection.OnPreviewNotifyEnd
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UObject*                          InPlaybackContext                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InStatus                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInBackwards                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMovieSceneCalliopeNotifyStateSection::OnPreviewNotifyEnd(class UObject* InPlaybackContext, int32 InStatus, bool bInBackwards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeNotifyStateSection", "OnPreviewNotifyEnd");

	Params::MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyEnd Parms{};

	Parms.InPlaybackContext = InPlaybackContext;
	Parms.InStatus = InStatus;
	Parms.bInBackwards = bInBackwards;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Calliope.MovieSceneCalliopeNotifyStateSection.OnPreviewNotifyTick
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UObject*                          InPlaybackContext                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InStatus                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInBackwards                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMovieSceneCalliopeNotifyStateSection::OnPreviewNotifyTick(class UObject* InPlaybackContext, int32 InStatus, bool bInBackwards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MovieSceneCalliopeNotifyStateSection", "OnPreviewNotifyTick");

	Params::MovieSceneCalliopeNotifyStateSection_OnPreviewNotifyTick Parms{};

	Parms.InPlaybackContext = InPlaybackContext;
	Parms.InStatus = InStatus;
	Parms.bInBackwards = bInBackwards;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

